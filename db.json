{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/beantech/source/css/beantech.min.css","path":"css/beantech.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/beantech.css","path":"css/beantech.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/bootstrap.css","path":"css/bootstrap.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/archive.styl","path":"css/archive.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/bootstrap.min.css","path":"css/bootstrap.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/highlight.styl","path":"css/highlight.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/hux-blog.min.css","path":"css/hux-blog.min.css","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/rocket.styl","path":"css/rocket.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/signature.styl","path":"css/signature.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/toc.styl","path":"css/toc.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/widget.styl","path":"css/widget.styl","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","path":"fonts/glyphicons-halflings-regular.eot","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","path":"fonts/glyphicons-halflings-regular.svg","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","path":"fonts/glyphicons-halflings-regular.ttf","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","path":"fonts/glyphicons-halflings-regular.woff","modified":0,"renderable":1},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","path":"fonts/glyphicons-halflings-regular.woff2","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.js","path":"js/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/bootstrap.min.js","path":"js/bootstrap.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.js","path":"js/hux-blog.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/hux-blog.min.js","path":"js/hux-blog.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.js","path":"js/jquery.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.nav.js","path":"js/jquery.nav.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","path":"js/jquery.tagcloud.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/toc.js","path":"js/toc.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman.png","path":"css/images/ironman.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket.png","path":"css/images/rocket.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/rocket_bak.png","path":"css/images/rocket_bak.png","modified":0,"renderable":1},{"_id":"themes/beantech/source/css/images/ironman_bak.png","path":"css/images/ironman_bak.png","modified":0,"renderable":1},{"_id":"source/CNAME_bak","path":"CNAME_bak","modified":0,"renderable":0},{"_id":"source/img/404-bg.jpg","path":"img/404-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/aboutMe.JPG","path":"img/aboutMe.JPG","modified":0,"renderable":0},{"_id":"source/img/beantech-desktop.png","path":"img/beantech-desktop.png","modified":0,"renderable":0},{"_id":"source/img/contact-bg.jpg","path":"img/contact-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/icon_wechat.png","path":"img/icon_wechat.png","modified":0,"renderable":0},{"_id":"source/img/ironman-draw.png","path":"img/ironman-draw.png","modified":0,"renderable":0},{"_id":"source/img/header_img/Iron-Man-3.jpg","path":"img/header_img/Iron-Man-3.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/aboutMe-swiss-bg.jpg","path":"img/header_img/aboutMe-swiss-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/archive-bg.jpg","path":"img/header_img/archive-bg.jpg","modified":0,"renderable":0},{"_id":"source/img/header_img/archive-bg.png","path":"img/header_img/archive-bg.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-2-dark_.png","path":"img/header_img/home-bg-2-dark_.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.png","path":"img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.png","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-o.png","path":"img/header_img/home-bg-o.png","modified":0,"renderable":0},{"_id":"source/img/header_img/tag-bg.png","path":"img/header_img/tag-bg.png","modified":0,"renderable":0},{"_id":"source/img/header_img/tf-logo-dark.png","path":"img/header_img/tf-logo-dark.png","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-black.png","path":"img/signature/BeanTechSign-black.png","modified":0,"renderable":0},{"_id":"source/img/signature/BeanTechSign-white.png","path":"img/signature/BeanTechSign-white.png","modified":0,"renderable":0},{"_id":"source/img/signature/jukSig_black.png","path":"img/signature/jukSig_black.png","modified":0,"renderable":0},{"_id":"source/img/signature/jukSig_white.png","path":"img/signature/jukSig_white.png","modified":0,"renderable":0},{"_id":"source/robots.txt","path":"robots.txt","modified":0,"renderable":0},{"_id":"source/sitemap.xml","path":"sitemap.xml","modified":0,"renderable":0},{"_id":"source/img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.jpg","path":"img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.jpg","modified":0,"renderable":0}],"Cache":[{"_id":"source/404.md","hash":"897e81975af8b5bc61572aff8c44368a525fcc9c","modified":1612103468149},{"_id":"source/CNAME_bak","hash":"a7c6d8139c32b9fa001144845bc43c01b71a81cc","modified":1612103453780},{"_id":"source/about/index.md","hash":"02a0b33fa6d44eeb880e0e6fa534e89828757879","modified":1612058171018},{"_id":"source/archive/index.md","hash":"3838b8f750a0f3893d5399b4535fcf7fbd71aea2","modified":1612058217667},{"_id":"source/_posts/hello-world.md","hash":"ea911a3613f259ef0c3c8d5f7d7f0c4b2616b27f","modified":1613772563644},{"_id":"source/_posts/hexo-install-guide-1.md","hash":"a00be5724412dcd6c0b4d4059dc9eb2e20cce889","modified":1614204671941},{"_id":"source/tags/index.md","hash":"a4cdcade4001fdc71547462e0bd7feedee96038b","modified":1610892800852},{"_id":"source/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1610892800842},{"_id":"source/img/signature/jukSig_black.png","hash":"c6e771e2e586725eb76a8b518fbc4f14a3f3dd33","modified":1612056749090},{"_id":"source/img/header_img/Iron-Man-3.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1610892800797},{"_id":"source/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1610892800783},{"_id":"themes/beantech/_config.yml","hash":"065b1f2ab18827b31a8b4c6ba1f8c5720b0d283e","modified":1614131723172},{"_id":"themes/beantech/languages_to_be_added/de.yml","hash":"02a98ba2b93e30a00ae7979fbe90b767a27290f0","modified":1610892800856},{"_id":"themes/beantech/languages_to_be_added/en.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1610892800858},{"_id":"themes/beantech/languages_to_be_added/es.yml","hash":"fb089145368422ac47da9eb00fed05b15c904aa2","modified":1610892800858},{"_id":"themes/beantech/languages_to_be_added/default.yml","hash":"3cd0873b310cbf2fe022ee18d55a6113b347ea09","modified":1610892800857},{"_id":"themes/beantech/languages_to_be_added/kor.yml","hash":"1c0259ce5ef8c05fed50e2f95c250972a004886f","modified":1612059218373},{"_id":"themes/beantech/languages_to_be_added/no.yml","hash":"5ce3a1043ff85cecf83f3b5b0cdad2df44fa0192","modified":1610892800859},{"_id":"themes/beantech/languages_to_be_added/pl.yml","hash":"6dc5d1b2aa75ae4c527089a770f43bafb91d80f4","modified":1610892800859},{"_id":"themes/beantech/languages_to_be_added/ru.yml","hash":"2cfaf93704ea4ac3f374c69bab89ca31916faa33","modified":1610892800860},{"_id":"themes/beantech/languages_to_be_added/zh-CN.yml","hash":"6d712d9eb6ba12213dcd76b532cd86e9da83cfa3","modified":1610892800860},{"_id":"themes/beantech/languages_to_be_added/zh-TW.yml","hash":"45c84384a05fdb7e32a3e2d498ea180be7dccfa9","modified":1610892800861},{"_id":"themes/beantech/layout/about.ejs","hash":"96c08fc3580b842ad9d8f37f2cdf02e6fa57d7bc","modified":1610892800869},{"_id":"themes/beantech/layout/404.ejs","hash":"c9b488d74c21fe9f35f642a5d19a138099ddf8a8","modified":1610892800862},{"_id":"themes/beantech/layout/archive.ejs","hash":"62781e8b0ce4de9c3db6042fedeaf13c26d138f8","modified":1610892800870},{"_id":"themes/beantech/layout/keynote.ejs","hash":"e177b9e4a159f40b512f4ae1bfd928be4ab60840","modified":1610892800871},{"_id":"themes/beantech/layout/index.ejs","hash":"f293cefe4bf9f9c6848dff08b6dac4aeb7948892","modified":1610892800870},{"_id":"themes/beantech/LICENSE","hash":"c48eaae47a703282e0ffe7b91d69366452046214","modified":1610892800854},{"_id":"themes/beantech/layout/layout.ejs","hash":"389fc11a45676f94b77ebd2cb0d658a0358979c8","modified":1610892800872},{"_id":"themes/beantech/layout/post.ejs","hash":"5a408fd5d759e70dc95c23a993550cee7d1c6cd5","modified":1610892800874},{"_id":"themes/beantech/layout/page.ejs","hash":"f7fc5282ad55131aa67dcde03c9189faa450a7c9","modified":1610892800872},{"_id":"themes/beantech/layout/tags.ejs","hash":"63911a99e6daf9968bfdd7d69f0d3d697039902e","modified":1610892800875},{"_id":"themes/beantech/layout/_partial/footer.ejs","hash":"6739744e71fc211a9e7c05c71c42b240c1f5abf7","modified":1612383719809},{"_id":"themes/beantech/layout/_partial/head.ejs","hash":"258af22c0c8d5dce3f218f4cc8b2220f38a841b9","modified":1610892800863},{"_id":"themes/beantech/layout/_partial/header.ejs","hash":"68e8685ce49fbb8efcd9948295d69a76d6ce8d16","modified":1614203726869},{"_id":"themes/beantech/layout/_partial/pagination.ejs","hash":"cd61e4dbbf6020ad094c8e66ec06e8c38ebcd122","modified":1610892800864},{"_id":"themes/beantech/layout/_partial/nav.ejs","hash":"e65bfec3d14a9eb9f1e09b592bb34023e6bf6e83","modified":1610892800864},{"_id":"themes/beantech/layout/_partial/sidebar.ejs","hash":"fe06922a467c4e8b80c0fd6a1a2d50e3c184778b","modified":1612383712026},{"_id":"themes/beantech/layout/_widget/archive.ejs","hash":"ad9fb0073d40fe90bfe3a1e3246e0b07e12b3ecf","modified":1610892800866},{"_id":"themes/beantech/layout/_partial/toc.ejs","hash":"a765433a33b3613f4664de2da48d0c58f68f8cd6","modified":1610892800865},{"_id":"themes/beantech/layout/_widget/category.ejs","hash":"320032471e26e4382aa9a059d4b7f426a682ced7","modified":1614121690618},{"_id":"themes/beantech/layout/_widget/featured-tags.ejs","hash":"e29431fa78c81d7c521bb1f7be356651fcde959c","modified":1610892800867},{"_id":"themes/beantech/layout/_widget/friends-blog.ejs","hash":"b185fcffb0d181ddd9eb2259af38cf7d82fb2846","modified":1610892800868},{"_id":"themes/beantech/layout/_widget/short-about.ejs","hash":"91288381dbd98f1c6b91d419094934ff59437021","modified":1610892800869},{"_id":"themes/beantech/layout/_widget/recent-posts.ejs","hash":"814dd716083a8a75eb31f9d2d6ab28150b01c533","modified":1610892800868},{"_id":"themes/beantech/source/css/beantech.css","hash":"5e9bee0a553da83a3efd4e9bc975a0ebd13b1b7d","modified":1610892800876},{"_id":"themes/beantech/source/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1610892800877},{"_id":"themes/beantech/source/css/archive.styl","hash":"bcb216ef65804c97b1a5dbe5f519fc171a13aaf1","modified":1610892800876},{"_id":"themes/beantech/source/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1610892800880},{"_id":"themes/beantech/source/css/highlight.styl","hash":"831f8195f3577ba5bea374f2e24b90054d445055","modified":1610892800880},{"_id":"themes/beantech/source/css/rocket.styl","hash":"0abbccdbcd6cce70e8a0bab7152c38adc0b708f1","modified":1610892800883},{"_id":"themes/beantech/source/css/signature.styl","hash":"63ae8051f59d5e69544647cc4173eabc81d99aae","modified":1610892800883},{"_id":"themes/beantech/source/css/widget.styl","hash":"f996466e299c68274145ba5afaca9b6d1dd83114","modified":1610892800885},{"_id":"themes/beantech/source/css/toc.styl","hash":"822aca17c885109452cc75a9aa384d9f3c07ea81","modified":1610892800884},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1610892800886},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1610892800889},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1610892800888},{"_id":"themes/beantech/source/js/hux-blog.js","hash":"3d3c93e42a9990b2a2e6df5a08e9816f9a221e0f","modified":1610892800893},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1610892800890},{"_id":"themes/beantech/source/js/hux-blog.min.js","hash":"ee99af17a1a69ac8d85a695fed0349ba202789ae","modified":1610892800894},{"_id":"themes/beantech/source/js/bootstrap.min.js","hash":"313da686ebbe387064f2d1899c64ea562b81eb40","modified":1610892800893},{"_id":"themes/beantech/source/js/toc.js","hash":"4ffe95b7755b035ee1b41664fa72b0ebea29c3f8","modified":1610892800899},{"_id":"themes/beantech/source/js/jquery.tagcloud.js","hash":"448017ff32f75f444ed7985d10a21b3ad92ab100","modified":1610892800898},{"_id":"themes/beantech/source/js/jquery.nav.js","hash":"bc6383fa2aa8f437978cf044a3b6f10a65114398","modified":1610892800898},{"_id":"themes/beantech/source/js/totop.js","hash":"f796b09b4f6177c3674a8c1542a8c92e8590cb5c","modified":1610892800900},{"_id":"themes/beantech/source/css/images/ironman.png","hash":"160961b270da6d2fdb08e668a2007922cc9915fe","modified":1612058986516},{"_id":"themes/beantech/source/css/images/rocket_bak.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1610892800882},{"_id":"themes/beantech/source/css/images/ironman_bak.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1610892800881},{"_id":"themes/beantech/source/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1610892800882},{"_id":"source/img/ironman-draw.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1610892800845},{"_id":"source/img/signature/jukSig_white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1610892800851},{"_id":"themes/beantech/source/css/bootstrap.min.css","hash":"1818a346630e7133a1f194669f613f613fcfa97c","modified":1610892800879},{"_id":"themes/beantech/source/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1610892800887},{"_id":"themes/beantech/source/js/bootstrap.js","hash":"5d69034fb6eded2e5961ea54dd47129a88cd5182","modified":1610892800892},{"_id":"themes/beantech/source/js/jquery.min.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1610892800897},{"_id":"source/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1610892800841},{"_id":"source/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1610892800849},{"_id":"source/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1610892800795},{"_id":"source/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1610892800851},{"_id":"themes/beantech/source/css/bootstrap.css","hash":"d1a24afac31222d70b4e001e0361ef045aa42043","modified":1610892800878},{"_id":"source/img/header_img/aboutMe-swiss-bg.jpg","hash":"e32fa791fa918f1c17d43661a04a45603bed5a9d","modified":1492822504000},{"_id":"themes/beantech/source/js/jquery.js","hash":"4bb763dc96da604aed08ac024a1a3f5de73eea39","modified":1610892800896},{"_id":"source/img/beantech-desktop.png","hash":"4a8f8b209c9db8fd5209f15b8e4590525e258b0f","modified":1610892800792},{"_id":"source/img/header_img/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1610892800838},{"_id":"source/img/aboutMe.JPG","hash":"0ae7d5598cc467acf15b3016fde0727acb1017b2","modified":1490448594000},{"_id":"source/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1610892800831},{"_id":"source/img/header_img/home-bg-2-dark_.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1610892800821},{"_id":"source/img/header_img/archive-bg.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1610892800809},{"_id":"source/_posts/hexo-install-guide-1/lukas-blazek-GnvurwJsKaY-unsplash.jpg","hash":"4e7608c12f567c9bea417a9f59c49c4f0a634cb4","modified":1612060109939},{"_id":"source/img/header_img/archive-bg.jpg","hash":"1e4830da080cd57db33d02153610bcc628c711f0","modified":1612055813578},{"_id":"source/img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.png","hash":"9cf9b4cd7ce78133246f8e49b5d2bd8a98767ee5","modified":1612056129037},{"_id":"public/404.html","hash":"153c06fcd22c6b4b968fec9877ea42ff75c48244","modified":1614203760512},{"_id":"public/tags/index.html","hash":"8f8d24fea37ce07b68a1a5461011661d95aff2fa","modified":1614205273923},{"_id":"public/about/index.html","hash":"e00c0fd331a34917388b5d77aa8556d6a22af471","modified":1614205273923},{"_id":"public/archive/index.html","hash":"1214e6fc3e4ad90d10002183a3eb01b0fe7fe193","modified":1614205273923},{"_id":"public/archives/index.html","hash":"29db6dd4263e8bc363c0682ecac6cb4cd3cdeef9","modified":1614205273923},{"_id":"public/archives/2021/index.html","hash":"7a49a02badeb45f9b238af2de1c4c1e503b8318e","modified":1614205273923},{"_id":"public/archives/2021/01/index.html","hash":"f76f9c0784e6f80bfba9554e8fdcfdd5701a1ac9","modified":1614205273923},{"_id":"public/categories/BLOG-HEXO/index.html","hash":"9a3782b322acbf9803d245503af1ceb2661b0316","modified":1614117240272},{"_id":"public/index.html","hash":"97bb16f9f93091062e3299dd7900fcb71105c93d","modified":1614208048142},{"_id":"public/tags/hexo/index.html","hash":"adf58fc2bb032e65c31b8c1dd4fe93ca2c0d169e","modified":1614205273923},{"_id":"public/tags/hexo-blog/index.html","hash":"6df8f1bd4761efb6e5052ddf85c70735020181f4","modified":1614205273923},{"_id":"public/tags/hexo-install/index.html","hash":"2583fa70a34ceba30e15759e85ca109f1f1e3672","modified":1614205273923},{"_id":"public/2021/01/31/hello-world/index.html","hash":"483588842cf675e4f5945d9107cb74490077cc5e","modified":1614203524415},{"_id":"public/2021/01/31/hexo-install-guide-1/index.html","hash":"d4ab5e6abfaa2723cd0e00306d35b9e0e15b7265","modified":1614205273923},{"_id":"public/fonts/glyphicons-halflings-regular.eot","hash":"86b6f62b7853e67d3e635f6512a5a5efc58ea3c3","modified":1612384576088},{"_id":"public/fonts/glyphicons-halflings-regular.woff","hash":"278e49a86e634da6f2a02f3b47dd9d2a8f26210f","modified":1612384576088},{"_id":"public/fonts/glyphicons-halflings-regular.ttf","hash":"44bc1850f570972267b169ae18f1cb06b611ffa2","modified":1612384576088},{"_id":"public/fonts/glyphicons-halflings-regular.woff2","hash":"ca35b697d99cae4d1b60f2d60fcd37771987eb07","modified":1612384576088},{"_id":"public/css/images/ironman.png","hash":"160961b270da6d2fdb08e668a2007922cc9915fe","modified":1612384576088},{"_id":"public/css/images/rocket.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1612384576088},{"_id":"public/css/images/rocket_bak.png","hash":"6dee0406955aa9b7a261161d30f2538a671e806b","modified":1612384576088},{"_id":"public/css/images/ironman_bak.png","hash":"2f0db0ab15d466c4065d9f6102fdf829726d9e3f","modified":1612384576088},{"_id":"public/CNAME_bak","hash":"a7c6d8139c32b9fa001144845bc43c01b71a81cc","modified":1612384576088},{"_id":"public/img/icon_wechat.png","hash":"4188058026609de06c6cac88b349a2da831a1783","modified":1612384576088},{"_id":"public/img/signature/jukSig_black.png","hash":"c6e771e2e586725eb76a8b518fbc4f14a3f3dd33","modified":1612384576088},{"_id":"public/fonts/glyphicons-halflings-regular.svg","hash":"4dcf0ab896f5417047f881de91bad10dcbda48c6","modified":1612384576088},{"_id":"public/img/header_img/Iron-Man-3.jpg","hash":"62a9a76854503c327990cc8d10de293ab6e9588f","modified":1612384576088},{"_id":"public/img/404-bg.jpg","hash":"68f7d525269a94287e0ad18713ae232fb59dcf71","modified":1612384576088},{"_id":"public/img/signature/BeanTechSign-white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1612384576088},{"_id":"public/css/archive.css","hash":"8db895ebaeff19ac145c961abcfd5d4a8d67a8ea","modified":1612384576088},{"_id":"public/css/highlight.css","hash":"03d1f0a648e9bdf7b1f57d217313cbac5d0c7eb1","modified":1612384576088},{"_id":"public/css/rocket.css","hash":"9456fd92f729e09d6de8cda70f95d78e0d789c70","modified":1612384576088},{"_id":"public/css/signature.css","hash":"820fa4743cea34a61808cd8f7de528605c32d7e3","modified":1612384576088},{"_id":"public/css/toc.css","hash":"2062bf4e5b219654e0d4bf470f5eef1be213da95","modified":1612384576088},{"_id":"public/css/widget.css","hash":"da95ad3f1938f24d20f1fa77d7a38f0c392b5ec8","modified":1612384576088},{"_id":"public/js/hux-blog.js","hash":"4b4d3c557405d04c3087d36c13e2834fe05c0f73","modified":1612384576088},{"_id":"public/js/hux-blog.min.js","hash":"1563e7f70550ac6b30803d6f449719b853200e35","modified":1612384576088},{"_id":"public/js/jquery.nav.js","hash":"ef2160a456176a4d09cc0b95d52b27dfbbadf2d8","modified":1612384576088},{"_id":"public/js/jquery.tagcloud.js","hash":"4e5fd0b07f3bd935f2e603710447e039e3677211","modified":1612384576088},{"_id":"public/js/totop.js","hash":"c05360f6fc699ac12e794b1764b4a952713a3017","modified":1612384576088},{"_id":"public/js/toc.js","hash":"41e52551731854224c249d53010c1bae5aa92ffa","modified":1612384576088},{"_id":"public/img/header_img/tf-logo-dark.png","hash":"5c7bf8ade9de134f8c77a3c59e575abe9fc6cdd4","modified":1612384576088},{"_id":"public/img/signature/BeanTechSign-black.png","hash":"94b7102e819fd6ee082d3fb0166f4de7458c22ff","modified":1612384576088},{"_id":"public/img/signature/jukSig_white.png","hash":"34289ed41cf9ddac2d56be46fbb1515b7d5913cd","modified":1612384576088},{"_id":"public/css/beantech.css","hash":"4c361354fd8e9851923fb21a620bc079380ebcd8","modified":1612384576088},{"_id":"public/css/beantech.min.css","hash":"05a06230b1a9eca0b30cece54a397008cb77dc50","modified":1612384576088},{"_id":"public/css/hux-blog.min.css","hash":"1baef04de262aeb7023d835429b49a805ac4ab40","modified":1612384576088},{"_id":"public/img/contact-bg.jpg","hash":"6af63305c923899017e727b5ca968a2703bc08cf","modified":1612384576088},{"_id":"public/img/ironman-draw.png","hash":"7d6a06b4b544ab146c3b3e8474edc33f14ac6e4d","modified":1612384576088},{"_id":"public/js/bootstrap.min.js","hash":"b3f2ef9f985e7906c9360756b73cd64bf7733647","modified":1612384576088},{"_id":"public/img/header_img/aboutMe-swiss-bg.jpg","hash":"e32fa791fa918f1c17d43661a04a45603bed5a9d","modified":1612384576088},{"_id":"public/js/bootstrap.js","hash":"f8752e9ae24daec0a0baffd7819122f8c6fd9103","modified":1612384576088},{"_id":"public/js/jquery.min.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1612384576088},{"_id":"public/css/bootstrap.min.css","hash":"fec7b176a4b9a67c0eb5d184f57b84297efc23aa","modified":1612384576088},{"_id":"public/css/bootstrap.css","hash":"41c54bf695145ae0b4d9020a1da308ceb05dcaf3","modified":1612384576088},{"_id":"public/js/jquery.js","hash":"1852661bd11a09ca9b9cb63d1aa6ff390fffaf4e","modified":1612384576088},{"_id":"public/img/header_img/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1612384576088},{"_id":"public/img/beantech-desktop.png","hash":"4a8f8b209c9db8fd5209f15b8e4590525e258b0f","modified":1612384576088},{"_id":"public/img/aboutMe.JPG","hash":"0ae7d5598cc467acf15b3016fde0727acb1017b2","modified":1612384576088},{"_id":"public/img/header_img/home-bg-o.png","hash":"134ece4cb4c49c7ca1403a5afe7f46d0e2f9ecbb","modified":1612384576088},{"_id":"public/img/header_img/home-bg-2-dark_.png","hash":"da6a3d5ca787bdc25e69655abd879b4f821aeb30","modified":1612384576088},{"_id":"public/img/header_img/archive-bg.png","hash":"6bf9c224543ec54e250309db89cbdf46e0c4b5ba","modified":1612384576088},{"_id":"public/2021/01/31/hexo-install-guide-1/lukas-blazek-GnvurwJsKaY-unsplash.jpg","hash":"4e7608c12f567c9bea417a9f59c49c4f0a634cb4","modified":1614120388545},{"_id":"public/img/header_img/archive-bg.jpg","hash":"1e4830da080cd57db33d02153610bcc628c711f0","modified":1612384576088},{"_id":"public/img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.png","hash":"9cf9b4cd7ce78133246f8e49b5d2bd8a98767ee5","modified":1612384576088},{"_id":"source/_posts/marp-guide.md","hash":"52cc180cf4617e30d049226401d3067ffc417b65","modified":1614203478743},{"_id":"source/_posts/marp-guide/desktop-2325627_1920.jpg","hash":"8c92d6bbf47f63cf77e106bafc8fefaaf7e56d96","modified":1612060158912},{"_id":"public/2021/01/31/marp-guide/index.html","hash":"03264c80145578421ff20347de058cb249874820","modified":1614203524415},{"_id":"public/categories/MARKDOWN-발표/index.html","hash":"9eabb6b1226e27cac1d42a90a20695f9bacc056b","modified":1614117240272},{"_id":"public/tags/marp/index.html","hash":"9a3d0852024c817511f0a279386a3abb39c35c0f","modified":1614205273923},{"_id":"public/tags/markdown/index.html","hash":"04a51fe795e27510f0543a5849f6f01f93670ce5","modified":1614205273923},{"_id":"public/tags/slide/index.html","hash":"8fd4738d027d9676fbd4340b2e7dc5e8d9eef0aa","modified":1614205273923},{"_id":"public/2021/01/31/marp-guide/desktop-2325627_1920.jpg","hash":"8c92d6bbf47f63cf77e106bafc8fefaaf7e56d96","modified":1614120388545},{"_id":"themes/beantech/languages_to_be_added/ko.yml","hash":"1c0259ce5ef8c05fed50e2f95c250972a004886f","modified":1612059218373},{"_id":"source/google54fa4245b3962d7d.html","hash":"65c920a5643b59ae6baa1ba8fad0f1843a20ff12","modified":1612385980609},{"_id":"source/robots.txt","hash":"0e9858d1481156aff35fe54b7e17c4accd5a9f80","modified":1612386716096},{"_id":"source/sitemap.xml","hash":"1a5025ecee55822d05d9d7c480c685cc6389685e","modified":1612386668766},{"_id":"public/google54fa4245b3962d7d.html","hash":"2efb4a0f7b760a17236b02a37fb778c7c66dd8c9","modified":1614205273923},{"_id":"public/robots.txt","hash":"0e9858d1481156aff35fe54b7e17c4accd5a9f80","modified":1612386750285},{"_id":"public/sitemap.xml","hash":"1a5025ecee55822d05d9d7c480c685cc6389685e","modified":1612386750285},{"_id":"source/_posts/Face-Check-In.md","hash":"e7437d30a72c38fe883c0eb55307d1c7a3b0550a","modified":1614203504559},{"_id":"source/_posts/Face-Check-In/home-bg-beautiful-shot-cars-road-blue-sky.png","hash":"9cf9b4cd7ce78133246f8e49b5d2bd8a98767ee5","modified":1612056129037},{"_id":"source/_posts/Face-Check-In/images/06_agumentation.jpg","hash":"dad22be92812e3b2daf6049d3ef846cbdae031d5","modified":1613600338128},{"_id":"source/_posts/Face-Check-In/images/05_Pipeline.jpg","hash":"698fb5f9262da3f699c118bca3eb60f39c2c9703","modified":1613771041726},{"_id":"source/_posts/Face-Check-In/images/10_Train_process.jpg","hash":"c02fed77d5bdd13a34602590833d3b33b37e81c0","modified":1613771071377},{"_id":"source/_posts/Face-Check-In/images/9_docker_layer.jpg","hash":"b991421f6ab56975f089789fe1fdef204bb61f93","modified":1613680887038},{"_id":"source/_posts/Face-Check-In/images/02_google_teachableMachine.jpg","hash":"72c454123b5943c3135e4e134615574bb932a829","modified":1613600338088},{"_id":"source/_posts/Face-Check-In/images/03_face-api.jpg","hash":"f7d6f0efbc115e5a523aa1501fd371384cf3aef1","modified":1613600338099},{"_id":"source/_posts/Face-Check-In/images/04_Facenet.jpg","hash":"52a0eeaab9ff9e26a0e2d7f47e9d9450b304d067","modified":1613600338109},{"_id":"source/_posts/Face-Check-In/images/08_docker.jpg","hash":"761eea414942d87987403b684816b803a015eba0","modified":1613600338153},{"_id":"source/_posts/Face-Check-In/images/01_출석체크.jpg","hash":"a440b1e8121cb496ae834466246c2c651c23a24a","modified":1613771020586},{"_id":"source/_posts/Face-Check-In/images/07_Teach_pose.jpg","hash":"abc48195fcc6a97b4af242997f6ab74d98ad2985","modified":1613680887017},{"_id":"public/2021/02/19/Face-Check-In/index.html","hash":"c5f1a220bc97519c8d1db6bdde5330fcd5768030","modified":1614203524415},{"_id":"public/categories/AI-ML/index.html","hash":"0ab0466124ad79abb7e22667f554603e42d971ed","modified":1613771128524},{"_id":"public/archives/2021/02/index.html","hash":"05778653f40af1438d9a8432ce127d8132bfb78b","modified":1614205273923},{"_id":"public/tags/facenet/index.html","hash":"a4e680d9f6108a0045595da1f9f658424b42cdaf","modified":1614205273923},{"_id":"public/tags/google-teachable-machine/index.html","hash":"0ab9939bfd6e125cb8cf7a439185f80fb242408f","modified":1614205273923},{"_id":"public/tags/face-recognition/index.html","hash":"0a1c830e8601bdac6261d5c28426431c17e8eb10","modified":1614205273923},{"_id":"public/2021/02/19/Face-Check-In/images/06_agumentation.jpg","hash":"dad22be92812e3b2daf6049d3ef846cbdae031d5","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/9_docker_layer.jpg","hash":"b991421f6ab56975f089789fe1fdef204bb61f93","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/02_google_teachableMachine.jpg","hash":"72c454123b5943c3135e4e134615574bb932a829","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/03_face-api.jpg","hash":"f7d6f0efbc115e5a523aa1501fd371384cf3aef1","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/04_Facenet.jpg","hash":"52a0eeaab9ff9e26a0e2d7f47e9d9450b304d067","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/05_Pipeline.jpg","hash":"698fb5f9262da3f699c118bca3eb60f39c2c9703","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/10_Train_process.jpg","hash":"c02fed77d5bdd13a34602590833d3b33b37e81c0","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/08_docker.jpg","hash":"761eea414942d87987403b684816b803a015eba0","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/01_출석체크.jpg","hash":"a440b1e8121cb496ae834466246c2c651c23a24a","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/images/07_Teach_pose.jpg","hash":"abc48195fcc6a97b4af242997f6ab74d98ad2985","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/home-bg-beautiful-shot-cars-road-blue-sky.png","hash":"9cf9b4cd7ce78133246f8e49b5d2bd8a98767ee5","modified":1613771128524},{"_id":"source/_posts/OCR-Tesseract-Demo.md","hash":"ded6fa6f031ce4f1112d4f412d61670e3593ff35","modified":1614203464906},{"_id":"source/_posts/OCR-Tesseract-Demo/images/01_초기화면.png","hash":"29c8ee790b074eb6c5ddaafadfa6fee637d46645","modified":1613774115249},{"_id":"source/_posts/OCR-Tesseract-Demo/images/02_Text추출.png","hash":"ed8a3ef85d7b6a41a1ef401f68544f02c7d6aaa1","modified":1613774128811},{"_id":"source/_posts/hello-world/desktop-2325627_1920.jpg","hash":"8c92d6bbf47f63cf77e106bafc8fefaaf7e56d96","modified":1612060158912},{"_id":"source/_posts/OCR-Tesseract-Demo/possessed-photography-jIBMSMs4_kA-unsplash.jpg","hash":"eaca09263fceebc8db9c7e3e6c48bab62aa397b5","modified":1613772291669},{"_id":"source/_posts/Face-Check-In/possessed-photography-jIBMSMs4_kA-unsplash.jpg","hash":"eaca09263fceebc8db9c7e3e6c48bab62aa397b5","modified":1613772291669},{"_id":"public/2021/02/20/OCR-Tesseract-Demo/index.html","hash":"b6c9a0e1a087f3dd62d2dc39b7723aa3e3cfcb89","modified":1614203524415},{"_id":"public/categories/AI-Machine-Learning/index.html","hash":"734758de78b8e5091340e2c307db779586138361","modified":1614117240272},{"_id":"public/categories/RPA-OCR/index.html","hash":"6c9675d7ec6c8c53e9eddaae612f7d06dbc2732c","modified":1614117240272},{"_id":"public/tags/docker/index.html","hash":"158192ce0a55a0283356beb3d9197ecf5a865986","modified":1614208048142},{"_id":"public/tags/OCR/index.html","hash":"b33c695f0e9605010378a811c0ba3edff95732ae","modified":1614117240272},{"_id":"public/tags/Tesseract/index.html","hash":"842c4bee86b8324ac81c35be3309fb31b9977ea9","modified":1614117240272},{"_id":"public/tags/Docker/index.html","hash":"16d7a11d7cc379903c1bc436480e771d9196e56b","modified":1614117240272},{"_id":"public/tags/Text추출/index.html","hash":"65eaf3444bebb84f743952847407509379eede69","modified":1614117240272},{"_id":"public/2021/02/20/OCR-Tesseract-Demo/images/01_초기화면.png","hash":"29c8ee790b074eb6c5ddaafadfa6fee637d46645","modified":1614120388545},{"_id":"public/2021/02/20/OCR-Tesseract-Demo/images/02_Text추출.png","hash":"ed8a3ef85d7b6a41a1ef401f68544f02c7d6aaa1","modified":1614120388545},{"_id":"public/2021/01/31/hello-world/desktop-2325627_1920.jpg","hash":"8c92d6bbf47f63cf77e106bafc8fefaaf7e56d96","modified":1614120388545},{"_id":"public/2021/02/20/OCR-Tesseract-Demo/possessed-photography-jIBMSMs4_kA-unsplash.jpg","hash":"eaca09263fceebc8db9c7e3e6c48bab62aa397b5","modified":1614120388545},{"_id":"public/2021/02/19/Face-Check-In/possessed-photography-jIBMSMs4_kA-unsplash.jpg","hash":"eaca09263fceebc8db9c7e3e6c48bab62aa397b5","modified":1614120388545},{"_id":"source/_posts/docker-install-root-dir-modify.md","hash":"c1afa8c51545c15f4edda265dd308b279fc12d2d","modified":1614203508380},{"_id":"source/_posts/docker-install-root-dir-modify/sai-kiran-anagani-Tjbk79TARiE-unsplash.jpg","hash":"35bd164835caaf9dc82ceec8ae465fec4c2118cf","modified":1614025986174},{"_id":"source/_posts/docker-install-root-dir-modify/tech-5090539_1920.jpg","hash":"4fbd57e6be53a14df85c8c6e05e2427127d2ca94","modified":1612060325756},{"_id":"public/2021/02/23/docker-install-root-dir-modify/index.html","hash":"6f5fd61932a7b38667d2c952710b9c8d852a7836","modified":1614205273923},{"_id":"public/categories/Docker-Linux/index.html","hash":"2b61ff7337f8ba1ec89994e51c4c0caa2b194e80","modified":1614117240272},{"_id":"public/tags/docker-install/index.html","hash":"435dbe8c0db4560397bbb8de3d17bd59aee89147","modified":1614205273923},{"_id":"public/tags/Root-Dir/index.html","hash":"e95b66792f9f186aefb86904542c5ec3c53c11aa","modified":1614117240272},{"_id":"public/tags/Centos/index.html","hash":"f5f6d81581647b29c458e44bf6918345f2071687","modified":1614117240272},{"_id":"public/2021/02/23/docker-install-root-dir-modify/tech-5090539_1920.jpg","hash":"4fbd57e6be53a14df85c8c6e05e2427127d2ca94","modified":1614120388545},{"_id":"public/2021/02/23/docker-install-root-dir-modify/sai-kiran-anagani-Tjbk79TARiE-unsplash.jpg","hash":"35bd164835caaf9dc82ceec8ae465fec4c2118cf","modified":1614120388545},{"_id":"source/_posts/test.md","hash":"be02bee296138c0aaa70387ac1c4ad873061c1a5","modified":1614205110743},{"_id":"source/_posts/test2.md","hash":"b14dd7826f02f810db6385bb8830f22fe2d8e743","modified":1614132021635},{"_id":"public/2021/02/24/test2/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1614137068304},{"_id":"public/2021/02/24/test/index.html","hash":"536d8e5aaca541e8daa133ce8a9819ff56b2c5fb","modified":1614120388545},{"_id":"public/categories/blog-hexo/index.html","hash":"621ced6b2e458f52e780c8408ea11fad88c98945","modified":1614203040764},{"_id":"public/categories/markdown-발표/index.html","hash":"6208653af766bcd8d20d5ea6fdf8fce308c8dfcb","modified":1614203040764},{"_id":"public/categories/ai-machine-learning/index.html","hash":"515afe71533daa8d5a35f048b1530916fc29cfa8","modified":1614203040764},{"_id":"public/categories/rpa-ocr/index.html","hash":"db999de5d4aed536566f9cbfd7ce65b8539cd4a4","modified":1614203040764},{"_id":"public/categories/docker-linux/index.html","hash":"b2a706b99cad1586e9a3e6060cee2cf97f509397","modified":1614203040764},{"_id":"public/categories/test1/index.html","hash":"680d4c304a0436818fb6139166903c08212aef89","modified":1614138338501},{"_id":"public/tags/ocr/index.html","hash":"79960cbf070a9563802133a53b748d87dc44d648","modified":1614208048142},{"_id":"public/tags/tesseract/index.html","hash":"3a1962d6b938758bf23299acb980d4e9680aeab3","modified":1614208048142},{"_id":"public/tags/text추출/index.html","hash":"2cd2e8e15881f16ebcf7caa811a14bf192760b5c","modified":1614208048142},{"_id":"public/tags/root-dir/index.html","hash":"45a8af3a234b4e709450007fe31135ae56fb6a61","modified":1614208048142},{"_id":"public/tags/centos/index.html","hash":"20705e51c06bd813929d0b079f84f83c1dadf6ec","modified":1614208048142},{"_id":"source/_posts/test3.md","hash":"38a1b7073db8267bb42e13e0b011bc01cd75e3ce","modified":1614133935892},{"_id":"themes/beantech/layout/categories.ejs","hash":"1740cc8f7bc1f85ea6fe089c40d434a41e826e18","modified":1614123959012},{"_id":"public/2021/02/24/test3/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1614137068304},{"_id":"public/categories/test1/test1-1/index.html","hash":"fd4eca262f42a05064435cd18530a09969787ed5","modified":1614138338501},{"_id":"public/categories/test1/test1-2/index.html","hash":"6b0fba2d160195bee33724b2eb324cf09e17f848","modified":1614138338501},{"_id":"public/categories/a/index.html","hash":"71e629c1bcba00491c036d08965eebc2f628baef","modified":1614123967645},{"_id":"public/categories/a/b/index.html","hash":"c0dbf964bfa2fd6b24ae7293fbbc2fe9314914c6","modified":1614123967645},{"_id":"themes/beantech/layout/category.ejs","hash":"13e31714350ca05d10f77d452e15da88c9d179c0","modified":1614203263269},{"_id":"public/categories/test3/index.html","hash":"6732eac65bba3921d926ab49beebac64b3dfb896","modified":1614138338501},{"_id":"source/img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.jpg","hash":"bec9f5b5873c473019740b03603a8109d13760c3","modified":1614203012211},{"_id":"public/img/header_img/home-bg-beautiful-shot-cars-road-blue-sky.jpg","hash":"bec9f5b5873c473019740b03603a8109d13760c3","modified":1614203040764},{"_id":"public/categories/ai/index.html","hash":"8e33e25925a22b6a81f998d5740aa16a05550602","modified":1614205273923},{"_id":"public/categories/ocr/index.html","hash":"4a4bca56a4c5767f881200074e98580a646f5cd8","modified":1614205273923},{"_id":"public/categories/docker/index.html","hash":"8f9864319dc888329698ba071bf8b85ad41e69cb","modified":1614205273923},{"_id":"public/categories/blog/index.html","hash":"5ab9e293ce90fc08a4ed035b4fe9c5df9a279429","modified":1614205273923},{"_id":"public/categories/presentation/index.html","hash":"3c76e05f5f4fcadf4156fd232a85a986d80b621b","modified":1614205273923},{"_id":"source/_posts/bug-patch-tuning.md","hash":"94ad9d6bfd127a3b0fa067ee71679b5879d7f306","modified":1614208023206},{"_id":"source/_posts/hexo-install-guide-1/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1610892800838},{"_id":"source/_posts/bug-patch-tuning/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1610892800838},{"_id":"public/2021/02/25/bug-patch-tuning/index.html","hash":"52495fd9cc9003f672c2630fbe6380b6b1529d43","modified":1614208048142},{"_id":"public/tags/hexo-bug-patch/index.html","hash":"3161fa157c71d784d0be1fd40f0f04425dead2c5","modified":1614205273923},{"_id":"public/tags/category-ejs/index.html","hash":"ec103c44974b24e6b350b9d107fbe80a56dc4bfa","modified":1614205273923},{"_id":"public/2021/02/25/bug-patch-tuning/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1614205273923},{"_id":"public/2021/01/31/hexo-install-guide-1/tag-bg.png","hash":"e83cd7b04ff85bcbc9bd3ebf5e57a55166e82568","modified":1614205273923}],"Category":[{"name":"BLOG, HEXO","_id":"ckkpw59vu0006b0spf37d6e8r"},{"name":"MARKDOWN, 발표","_id":"ckkpweqhw0001oksp6zo58oy4"},{"name":"AI","_id":"cklbrbvxe0001nsspak0u4br6"},{"name":"ML","parent":"cklbrbvxe0001nsspak0u4br6","_id":"cklbrbvxh0004nsspeh4t7bbr"},{"name":"AI, ML","_id":"cklcsscb3000bnssp06cohyyv"},{"name":"AI, Machine Learning","_id":"cklcupz0c0004x4spfpdrc4in"},{"name":"RPA, OCR","_id":"cklcuslfx0008x4sp01v0fosh"},{"name":"Docker, Linux","_id":"cklh2210p0001ccspeg1pehzh"},{"name":"TEST1","_id":"cklil459q0000e8sp2i6a43lb"},{"name":"test1","_id":"cklimii5n0000essp8o856b33"},{"name":"test1_1","parent":"cklimii5n0000essp8o856b33","_id":"cklimnbkm0000qwsphusqayoo"},{"name":"test1_2","parent":"cklimii5n0000essp8o856b33","_id":"cklimnem30002qwspbb7w5tei"},{"name":"A","_id":"cklimxp1h0001pksp80knedwr"},{"name":"B","parent":"cklimxp1h0001pksp80knedwr","_id":"cklimxp1i0002pksp1311dp7p"},{"name":"test3","_id":"cklitmnqd0000dssp5edrensb"},{"name":"OCR","_id":"ckljz3nfm0000i0sp3ujvawm0"},{"name":"Docker","_id":"ckljz3nfu0002i0sp8e4id044"},{"name":"Blog","_id":"ckljz3nfw0003i0sp8vro2jb5"},{"name":"Presentation","_id":"ckljz3nfw0005i0sphn2238r4"}],"Data":[],"Page":[{"layout":"404","description":"Page Not Found","header-img":"img/404-bg.jpg","_content":"","source":"404.md","raw":"---\nlayout: 404\ndescription: \"Page Not Found\"\nheader-img: \"img/404-bg.jpg\"\n---\n","date":"2021-01-31T14:31:08.149Z","updated":"2021-01-31T14:31:08.149Z","path":"404.html","title":"","comments":1,"_id":"ckkpw59vh0000b0spdtrmf3ov","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"about","title":"About Me","date":"2021-01-31T01:43:33.000Z","description":"Where there's a will, there's a way!","header-img":"img/header_img/aboutMe-swiss-bg.jpg","comments":1,"_content":"\n> 상상하라 그러면 이루어질 것이다!\n","source":"about/index.md","raw":"---\nlayout: \"about\"\ntitle: \"About Me\"\ndate: 2021-01-31 10:43:33\ndescription: \"Where there's a will, there's a way!\"\nheader-img: \"img/header_img/aboutMe-swiss-bg.jpg\"\ncomments: true\n---\n\n> 상상하라 그러면 이루어질 것이다!\n","updated":"2021-01-31T01:56:11.018Z","path":"about/index.html","_id":"ckkpw59vl0001b0sp9jvab837","content":"<blockquote>\n<p>상상하라 그러면 이루어질 것이다!</p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>상상하라 그러면 이루어질 것이다!</p>\n</blockquote>\n"},{"layout":"archive","title":"Archives","header-img":"img/header_img/archive-bg.jpg","comments":0,"date":"2021-01-31T11:49:56.000Z","description":"Hey, this is archives","_content":"","source":"archive/index.md","raw":"---\nlayout: \"archive\"\ntitle: \"Archives\"\nheader-img: \"img/header_img/archive-bg.jpg\"\ncomments: false\ndate: 2021-01-31 20:49:56\ndescription: \"Hey, this is archives\"\n---\n","updated":"2021-01-31T01:56:57.667Z","path":"archive/index.html","_id":"ckkpw59vo0002b0sp85ss3sqn","content":"","site":{"data":{}},"excerpt":"","more":""},{"layout":"tags","title":"Tags","description":"Hey, this is Tags.","header-img":"img/header_img/tag-bg.png","_content":"","source":"tags/index.md","raw":"---\nlayout: \"tags\"\ntitle: \"Tags\"\ndescription: \"Hey, this is Tags.\"\nheader-img: \"img/header_img/tag-bg.png\"\n---\n","date":"2021-01-17T14:13:20.852Z","updated":"2021-01-17T14:13:20.852Z","path":"tags/index.html","comments":1,"_id":"ckkpw59vr0004b0spawx0cswi","content":"","site":{"data":{}},"excerpt":"","more":""},{"_content":"google-site-verification: google54fa4245b3962d7d.html","source":"google54fa4245b3962d7d.html","raw":"google-site-verification: google54fa4245b3962d7d.html","date":"2021-02-03T21:11:18.037Z","updated":"2021-02-03T20:59:40.609Z","path":"google54fa4245b3962d7d.html","title":"","comments":1,"layout":"page","_id":"ckkpxfvk50000r8sphsz92f2a","content":"google-site-verification: google54fa4245b3962d7d.html","site":{"data":{}},"excerpt":"","more":"google-site-verification: google54fa4245b3962d7d.html"}],"Post":[{"title":"Hello World","header-img":"desktop-2325627_1920.jpg","_content":"Welcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","source":"_posts/hello-world.md","raw":"---\ntitle: Hello World\nheader-img: \"desktop-2325627_1920.jpg\"\n---\nWelcome to [Hexo](https://hexo.io/)! This is your very first post. Check [documentation](https://hexo.io/docs/) for more info. If you get any problems when using Hexo, you can find the answer in [troubleshooting](https://hexo.io/docs/troubleshooting.html) or you can ask me on [GitHub](https://github.com/hexojs/hexo/issues).\n\n## Quick Start\n\n### Create a new post\n\n``` bash\n$ hexo new \"My New Post\"\n```\n\nMore info: [Writing](https://hexo.io/docs/writing.html)\n\n### Run server\n\n``` bash\n$ hexo server\n```\n\nMore info: [Server](https://hexo.io/docs/server.html)\n\n### Generate static files\n\n``` bash\n$ hexo generate\n```\n\nMore info: [Generating](https://hexo.io/docs/generating.html)\n\n### Deploy to remote sites\n\n``` bash\n$ hexo deploy\n```\n\nMore info: [Deployment](https://hexo.io/docs/one-command-deployment.html)\n","slug":"hello-world","published":1,"date":"2021-01-31T13:47:22.829Z","updated":"2021-02-19T22:09:23.644Z","_id":"ckkpw59vo0003b0sp8fv2fkb1","comments":1,"layout":"post","photos":[],"link":"","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n","site":{"data":{}},"excerpt":"","more":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"Hexo Blog 스킨 적용 및 Github 배포","catalog":true,"date":"2021-01-31T00:45:44.000Z","subtitle":"Hexo 블로그 테마 다운로드, 설치, Github 배포까지!","header-img":"tag-bg.png","_content":"\n## 1. git/npm windows 설치\n> git과 npm이 사전에 설치되어 있어야한다.  \n\n\n## 2. hexo (기본 가이드 한글로 번역됨)  \n- https://hexo.io/ko/docs/   \n```\nnpm install hexo-cli -g --save\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\n```\n\n\n## 3. 테마 repo clone\n- https://github.com/YenYuHsuan/hexo-theme-beantech  \n\n\n## 4. 경로진입\n> cd hexo-beantech  \n\n\n## 5. node 패키지 설치\n```\nnpm install\n```\n\n\n## 6. 실행\n- hexo serve  \n- localhost:4000 확인  \n\n\n## 7. category 기능 활성화:\n- _config.yml > widgets 부분 category 주석풀기 + post에 작성시 category 추가  \n\n\n## 8. 기초세팅\n- _config.yml 설정(https://github.com/YenYuHsuan/hexo-theme-beantech 따라하기)  \n\n\n## 9. post작성 및 배포\n```\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n\n## 10. 버그 패치\n1) hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생  \n2) hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  \n3) forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  \n4) theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  \n\n\n## 11. tag/category 입력\n```\ntags:\n- Hexo\n- Blog\n# or tags: [\"A\", \"B\"]\ncatagories:\n- Hexo\n```\n\n\n## 12. 무료 이미지 다운로드\n> https://www.freepik.com\n> https://pixabay.com/\n> https://unsplash.com/\n<br>\n","source":"_posts/hexo-install-guide-1.md","raw":"---\ntitle: Hexo blog 스킨 적용 및 github 배포\ncatalog: true\ndate: 2021-01-31 09:45:44\nsubtitle: Hexo 블로그 테마 다운로드, 설치, Github 배포까지!\nheader-img: \"tag-bg.png\"\ntags: [\"hexo\", \"hexo blog\", \"hexo install\"]\ncategories:\n- Blog\n---\n\n## 1. git/npm windows 설치\n> git과 npm이 사전에 설치되어 있어야한다.  \n\n\n## 2. hexo (기본 가이드 한글로 번역됨)  \n- https://hexo.io/ko/docs/   \n```\nnpm install hexo-cli -g --save\nnpm install hexo-server --save\nnpm install hexo-deployer-git --save\n```\n\n\n## 3. 테마 repo clone\n- https://github.com/YenYuHsuan/hexo-theme-beantech  \n\n\n## 4. 경로진입\n> cd hexo-beantech  \n\n\n## 5. node 패키지 설치\n```\nnpm install\n```\n\n\n## 6. 실행\n- hexo serve  \n- localhost:4000 확인  \n\n\n## 7. category 기능 활성화:\n- _config.yml > widgets 부분 category 주석풀기 + post에 작성시 category 추가  \n\n\n## 8. 기초세팅\n- _config.yml 설정(https://github.com/YenYuHsuan/hexo-theme-beantech 따라하기)  \n\n\n## 9. post작성 및 배포\n```\nhexo new post \"<post name>\" # you can change post to another layout if you want\nhexo clean && hexo generate # generate the static file\nhexo server # run hexo in local environment\nhexo deploy # hexo will push the static files automatically into the specific branch(gh-pages) of your repo!\n```\n\n\n## 10. 버그 패치\n1) hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생  \n2) hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  \n3) forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  \n4) theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  \n\n\n## 11. tag/category 입력\n```\ntags:\n- Hexo\n- Blog\n# or tags: [\"A\", \"B\"]\ncatagories:\n- Hexo\n```\n\n\n## 12. 무료 이미지 다운로드\n> https://www.freepik.com\n> https://pixabay.com/\n> https://unsplash.com/\n<br>\n","slug":"hexo-install-guide-1","published":1,"updated":"2021-02-24T22:11:11.941Z","_id":"ckkpw59vs0005b0sp68vzb9e3","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"1-git-npm-windows-설치\"><a href=\"#1-git-npm-windows-설치\" class=\"headerlink\" title=\"1. git/npm windows 설치\"></a>1. git/npm windows 설치</h2><blockquote>\n<p>git과 npm이 사전에 설치되어 있어야한다.  </p>\n</blockquote>\n<h2 id=\"2-hexo-기본-가이드-한글로-번역됨\"><a href=\"#2-hexo-기본-가이드-한글로-번역됨\" class=\"headerlink\" title=\"2. hexo (기본 가이드 한글로 번역됨)\"></a>2. hexo (기본 가이드 한글로 번역됨)</h2><ul>\n<li><a href=\"https://hexo.io/ko/docs/\">https://hexo.io/ko/docs/</a>   <figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g <span class=\"comment\">--save</span></span><br><span class=\"line\">npm install hexo-<span class=\"keyword\">server</span> <span class=\"comment\">--save</span></span><br><span class=\"line\">npm install hexo-deployer-git <span class=\"comment\">--save</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"3-테마-repo-clone\"><a href=\"#3-테마-repo-clone\" class=\"headerlink\" title=\"3. 테마 repo clone\"></a>3. 테마 repo clone</h2><ul>\n<li><a href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\">https://github.com/YenYuHsuan/hexo-theme-beantech</a>  </li>\n</ul>\n<h2 id=\"4-경로진입\"><a href=\"#4-경로진입\" class=\"headerlink\" title=\"4. 경로진입\"></a>4. 경로진입</h2><blockquote>\n<p>cd hexo-beantech  </p>\n</blockquote>\n<h2 id=\"5-node-패키지-설치\"><a href=\"#5-node-패키지-설치\" class=\"headerlink\" title=\"5. node 패키지 설치\"></a>5. node 패키지 설치</h2><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-실행\"><a href=\"#6-실행\" class=\"headerlink\" title=\"6. 실행\"></a>6. 실행</h2><ul>\n<li>hexo serve  </li>\n<li>localhost:4000 확인  </li>\n</ul>\n<h2 id=\"7-category-기능-활성화\"><a href=\"#7-category-기능-활성화\" class=\"headerlink\" title=\"7. category 기능 활성화:\"></a>7. category 기능 활성화:</h2><ul>\n<li>_config.yml &gt; widgets 부분 category 주석풀기 + post에 작성시 category 추가  </li>\n</ul>\n<h2 id=\"8-기초세팅\"><a href=\"#8-기초세팅\" class=\"headerlink\" title=\"8. 기초세팅\"></a>8. 기초세팅</h2><ul>\n<li>_config.yml 설정(<a href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\">https://github.com/YenYuHsuan/hexo-theme-beantech</a> 따라하기)  </li>\n</ul>\n<h2 id=\"9-post작성-및-배포\"><a href=\"#9-post작성-및-배포\" class=\"headerlink\" title=\"9. post작성 및 배포\"></a>9. post작성 및 배포</h2><figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo <span class=\"keyword\">new</span> post <span class=\"string\">&quot;&lt;post name&gt;&quot;</span> # you can change post to another layout <span class=\"keyword\">if</span> you want</span><br><span class=\"line\">hexo clean &amp;&amp; hexo <span class=\"keyword\">generate</span> # <span class=\"keyword\">generate</span> the <span class=\"keyword\">static</span> file</span><br><span class=\"line\">hexo server # run hexo in <span class=\"keyword\">local</span> environment</span><br><span class=\"line\">hexo deploy # hexo will push the <span class=\"keyword\">static</span> files automatically into the specific branch(gh-pages) of your repo!</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-버그-패치\"><a href=\"#10-버그-패치\" class=\"headerlink\" title=\"10. 버그 패치\"></a>10. 버그 패치</h2><ol>\n<li>hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생  </li>\n<li>hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  </li>\n<li>forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  </li>\n<li>theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  </li>\n</ol>\n<h2 id=\"11-tag-category-입력\"><a href=\"#11-tag-category-입력\" class=\"headerlink\" title=\"11. tag/category 입력\"></a>11. tag/category 입력</h2><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">tags:</span></span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- Blog</span><br><span class=\"line\"># or tags: [&quot;A&quot;, &quot;B&quot;]</span><br><span class=\"line\">catagories:</span><br><span class=\"line\">- Hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-무료-이미지-다운로드\"><a href=\"#12-무료-이미지-다운로드\" class=\"headerlink\" title=\"12. 무료 이미지 다운로드\"></a>12. 무료 이미지 다운로드</h2><blockquote>\n<p><a href=\"https://www.freepik.com/\">https://www.freepik.com</a><br><a href=\"https://pixabay.com/\">https://pixabay.com/</a><br><a href=\"https://unsplash.com/\">https://unsplash.com/</a><br><br></p>\n</blockquote>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"1-git-npm-windows-설치\"><a href=\"#1-git-npm-windows-설치\" class=\"headerlink\" title=\"1. git/npm windows 설치\"></a>1. git/npm windows 설치</h2><blockquote>\n<p>git과 npm이 사전에 설치되어 있어야한다.  </p>\n</blockquote>\n<h2 id=\"2-hexo-기본-가이드-한글로-번역됨\"><a href=\"#2-hexo-기본-가이드-한글로-번역됨\" class=\"headerlink\" title=\"2. hexo (기본 가이드 한글로 번역됨)\"></a>2. hexo (기본 가이드 한글로 번역됨)</h2><ul>\n<li><a href=\"https://hexo.io/ko/docs/\">https://hexo.io/ko/docs/</a>   <figure class=\"highlight pgsql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-cli -g <span class=\"comment\">--save</span></span><br><span class=\"line\">npm install hexo-<span class=\"keyword\">server</span> <span class=\"comment\">--save</span></span><br><span class=\"line\">npm install hexo-deployer-git <span class=\"comment\">--save</span></span><br></pre></td></tr></table></figure>\n\n</li>\n</ul>\n<h2 id=\"3-테마-repo-clone\"><a href=\"#3-테마-repo-clone\" class=\"headerlink\" title=\"3. 테마 repo clone\"></a>3. 테마 repo clone</h2><ul>\n<li><a href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\">https://github.com/YenYuHsuan/hexo-theme-beantech</a>  </li>\n</ul>\n<h2 id=\"4-경로진입\"><a href=\"#4-경로진입\" class=\"headerlink\" title=\"4. 경로진입\"></a>4. 경로진입</h2><blockquote>\n<p>cd hexo-beantech  </p>\n</blockquote>\n<h2 id=\"5-node-패키지-설치\"><a href=\"#5-node-패키지-설치\" class=\"headerlink\" title=\"5. node 패키지 설치\"></a>5. node 패키지 설치</h2><figure class=\"highlight cmake\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm <span class=\"keyword\">install</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6-실행\"><a href=\"#6-실행\" class=\"headerlink\" title=\"6. 실행\"></a>6. 실행</h2><ul>\n<li>hexo serve  </li>\n<li>localhost:4000 확인  </li>\n</ul>\n<h2 id=\"7-category-기능-활성화\"><a href=\"#7-category-기능-활성화\" class=\"headerlink\" title=\"7. category 기능 활성화:\"></a>7. category 기능 활성화:</h2><ul>\n<li>_config.yml &gt; widgets 부분 category 주석풀기 + post에 작성시 category 추가  </li>\n</ul>\n<h2 id=\"8-기초세팅\"><a href=\"#8-기초세팅\" class=\"headerlink\" title=\"8. 기초세팅\"></a>8. 기초세팅</h2><ul>\n<li>_config.yml 설정(<a href=\"https://github.com/YenYuHsuan/hexo-theme-beantech\">https://github.com/YenYuHsuan/hexo-theme-beantech</a> 따라하기)  </li>\n</ul>\n<h2 id=\"9-post작성-및-배포\"><a href=\"#9-post작성-및-배포\" class=\"headerlink\" title=\"9. post작성 및 배포\"></a>9. post작성 및 배포</h2><figure class=\"highlight verilog\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo <span class=\"keyword\">new</span> post <span class=\"string\">&quot;&lt;post name&gt;&quot;</span> # you can change post to another layout <span class=\"keyword\">if</span> you want</span><br><span class=\"line\">hexo clean &amp;&amp; hexo <span class=\"keyword\">generate</span> # <span class=\"keyword\">generate</span> the <span class=\"keyword\">static</span> file</span><br><span class=\"line\">hexo server # run hexo in <span class=\"keyword\">local</span> environment</span><br><span class=\"line\">hexo deploy # hexo will push the <span class=\"keyword\">static</span> files automatically into the specific branch(gh-pages) of your repo!</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10-버그-패치\"><a href=\"#10-버그-패치\" class=\"headerlink\" title=\"10. 버그 패치\"></a>10. 버그 패치</h2><ol>\n<li>hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생  </li>\n<li>hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  </li>\n<li>forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  </li>\n<li>theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  </li>\n</ol>\n<h2 id=\"11-tag-category-입력\"><a href=\"#11-tag-category-입력\" class=\"headerlink\" title=\"11. tag/category 입력\"></a>11. tag/category 입력</h2><figure class=\"highlight subunit\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">tags:</span></span><br><span class=\"line\">- Hexo</span><br><span class=\"line\">- Blog</span><br><span class=\"line\"># or tags: [&quot;A&quot;, &quot;B&quot;]</span><br><span class=\"line\">catagories:</span><br><span class=\"line\">- Hexo</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12-무료-이미지-다운로드\"><a href=\"#12-무료-이미지-다운로드\" class=\"headerlink\" title=\"12. 무료 이미지 다운로드\"></a>12. 무료 이미지 다운로드</h2><blockquote>\n<p><a href=\"https://www.freepik.com/\">https://www.freepik.com</a><br><a href=\"https://pixabay.com/\">https://pixabay.com/</a><br><a href=\"https://unsplash.com/\">https://unsplash.com/</a><br><br></p>\n</blockquote>\n"},{"title":"Markdown 기반 Slide Show 'Marp' 사용법","catalog":true,"date":"2021-01-31T00:45:44.000Z","subtitle":"사용법을 익히고 가이드작성까지 1시간이면 충분~!","header-img":"desktop-2325627_1920.jpg","_content":"\n\n## https://marp-slide-guide.netlify.app/\n\n\n\n\n\n\n\n\n","source":"_posts/marp-guide.md","raw":"---\ntitle: Markdown 기반 Slide Show 'Marp' 사용법\ncatalog: true\ndate: 2021-01-31 09:45:44\nsubtitle: 사용법을 익히고 가이드작성까지 1시간이면 충분~!\nheader-img: \"desktop-2325627_1920.jpg\"\ntags: [\"marp\", \"markdown\", \"slide\"]\ncategories:\n- Presentation\n---\n\n\n## https://marp-slide-guide.netlify.app/\n\n\n\n\n\n\n\n\n","slug":"marp-guide","published":1,"updated":"2021-02-24T21:51:18.743Z","_id":"ckkpweqhs0000okspf0frfdk1","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"https-marp-slide-guide-netlify-app\"><a href=\"#https-marp-slide-guide-netlify-app\" class=\"headerlink\" title=\"https://marp-slide-guide.netlify.app/\"></a><a href=\"https://marp-slide-guide.netlify.app/\">https://marp-slide-guide.netlify.app/</a></h2>","site":{"data":{}},"excerpt":"","more":"<h2 id=\"https-marp-slide-guide-netlify-app\"><a href=\"#https-marp-slide-guide-netlify-app\" class=\"headerlink\" title=\"https://marp-slide-guide.netlify.app/\"></a><a href=\"https://marp-slide-guide.netlify.app/\">https://marp-slide-guide.netlify.app/</a></h2>"},{"title":"Face Check in 구현","subtitle":"안면인식과 모션인식을 통한 출석관리 시스템 구현","catalog":true,"date":"2021-02-19T03:42:22.000Z","header-img":"possessed-photography-jIBMSMs4_kA-unsplash.jpg","_content":"\n\n# 개요\n\n- 안면인식 + 동작감지 = (비접촉) 출석체크  \n\n안면인식과 동작감지 기술을 이용하여 비 접촉 출석체크 시스템을 구현해보았다. 오픈소스의 대중화와 머신러닝 프레임워크의 발전, 그리고 AI 민주화시대를 앞당기는 기업들의 노력으로, 앞으로 이런 수준의 서비스들은 추가적인 연구없이 현재 공개되어 있는 기술들로 충분히 구현 가능하다.  \n\n![width:800px height:500px](./images/01_출석체크.jpg)  \n\n\n## Teachable Machine(2.0)\n\n- https://teachablemachine.withgoogle.com/  \n- 일반인도 머신러닝 서비스를 만들수 있는 플랫폼을 제공(2019년/Google)  \n- 학습~배포(json/api)  \n![width:450px height:250px](./images/02_google_teachableMachine.jpg)  \n- 관련 파생 서비스: 관상가양반(https://yourface.ga/)  \n- 단점: 세세한 튜닝(최적화) 불가능->안면인식 성능 낮음\n\n\n## 안면인식 OpenSource\n\n### FaceApi\n- Javascript 구현체(tensorflow.js + node.js)  \n- github : https://github.com/justadudewhohacks/face-api.js/  \n![width:500px height:300px](./images/03_face-api.jpg)  \n- 다양한 기능(face-tracking, recognition...) 내장하고 있지만 속도가 느림  \n\n\n### Facenet(2015년/Google)\n- Facenet: Embedding(백만명 사진 학습>특징 임베딩 벡터>98~99%)  \n![width:300px height:200px](./images/04_Facenet.jpg)  \n- 블로그: https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/  \n- 논문: https://arxiv.org/abs/1503.03832  \n\n---\n\n# 시스템 구성/파이프라인\n\n- 시스템 구성  \n![](./images/05_Pipeline.jpg)  \n\n- 작업절차: 안면인식(keras)>동작인식(Teach)>두 모델 기능병합(HTML5,JS)>배포(Docker/Flask)  \n\nFace Model(안면인식)은 Google Colab환경에서 학습하였다. Facenet 모델의 Embedding 벡터와 지도학습 방법인 서포터벡터머신(SVC)을 사용하여 얼굴예측 모델을 구현하여, 구현체를 H5(Keras 모델), Pickle(Skit-Learn 모델) 파일 형태로 출력한다. Pose Model(동작감지)은 Google Teachable Machine을 사용하여 팔의 동작(O,X,캡쳐,대기)을 학습시키고, 모델을 Json형태로 출력하였다.  \n\n서버에 설치는 Docker(Container 가상화 기술)를 사용하여 환경을 구성하였다. Docker를 사용하면 OS환경(Windows/Linux등)과 상관없이 개발환경 그대로 배포환경으로 옮길 수 있다는 장점이 있다. 또한 필요한 Library를 시스템 설치 없이 다운로드후 구동방식으로 동작 시킬 수 있기 때문에 개발 생산성도 좋아진다. Docker를 빌드하기 위해서는 yml 파일이나 Dockerfile이 필요한데, 여기서는 Dockerfile을 사용하였고 Base 이미지로 Keras(Tensorflow)/Flask 이미지 서버를 구성한 뒤, ML(Machine Learning) 출력파일을 올려서 컨테이너를 구성하였다.  \n\n배포서버의 도메인이 Https(Nginx) 로 구성되어 있어서, 웹서버(Nginx) 뒤에 WAS서버 형태로 시스템을 붙여야 했다. Flask ML 서버를 port를 분리하여 구동 시키고 Nginx의 URI 라우팅(Location 설정)을 수정하여 구성하였다. Flask는 Python 웹 애플리케이션 서버 역할을 하면서 동시에 웹서버(html, js 배포) 역할을 할 수 있기때문에, Flask 서버에 Html/Javascript 소스도 배포하였다. 이렇게 해서 화면단의 요청을 ML서버가 직접 받도록 구성하여 CORS(Cross-Origin Resource Sharing) 및 Https/Http 혼용사용 문제도 해결하였다. \n\n---\n\n# 활용기술\n\n## 안면인식(FaceNet)\n- 사진(150명) Agumentation > Embedding(특징벡터) > SVC(서포트벡터머신) > 예측\n![](./images/06_agumentation.jpg)\n\nFacenet 모델은 기존 사람의 얼굴 윤곽을 잡아서 학습시키는 랜드마크 방식과 다르게, 사람 얼굴의 특정정보를 Embedding이라는 기하학적 공간에 사상시켜 훈련한데에 있다. 유명인 백만명을 학습시켜 Anchor 본인과 같은 사람의 사진이면 Positive로 보고 유클리드 공간상의 거리를 좁히고, 다른 사람이면 Negative로 보고 거리를 멀게 하도록 학습시키는 방식으로 Embedding 벡터를 훈련시켰다. 이 모델의 Embedding벡터를 사람 얼굴 특징 벡터로 Pre-Training 벡터로 사용하여 새로운 얼굴들을 추가 학습시키는 방법으로 활용 가능하다.\n\n\n### 학습 절차  \n![](./images/10_Train_process.jpg)\n\n머신러닝 학습을 위해서는 여러 장의 사진이 필요하기 때문에, 사진을 복제/변형하여 추가(20장)로 훈련 데이터를 확보한다. 이후 얼굴추출 Library를 이용하여 좌표에 해당하는 이미지를 Slice한다. 이후 오픈소스로 존재하는 Facenet Embedding 벡터를 통과시켜 얼굴 특징점을 수치화한 Vector를 추출한 뒤 본격적인 학습과정이 수행된다. 수치 데이터의 분포가 일정하게 정규화 한 뒤, 사람별로 Labeling 과정을 거치고 지도학습 모델중의 하나인 서포터벡터머신(SVC)으로 훈련시켰다. \n학습모델은 변경이 가능하고 딥러닝 모델을 사용하려면 사진 개수가 충분히 많아야 한다. 훈련Set 사진으로 학습시킨 뒤 테스트Set 사진으로 성능을 보면 99.8%로 거의 100%가깝게 나왔지만, 실제로 웹캠으로 시연을 해보면, 성능이 다소 떨어지는데 이는 사진이 현재 얼굴과 많이 다르거나, 웹캠의 해상도 조명등의 영향 때문인데 조명으로 인한 성능차이는 전처리 기능을 보강하여 추가 개선 가능하다.\n\n\n- Embedding Feacture 추출소스(Facenet->predict)\n```\ndef get_embedding(model, face_pixels):\n    face_pixels = face_pixels.astype('float32')\n    mean, std = face_pixels.mean(), face_pixels.std()\n    face_pixels = (face_pixels - mean) / std\n    samples = expand_dims(face_pixels, axis=0)\n    yhat = model.predict(samples) # make prediction to get embedding\n    return yhat[0]\n```\n\n---\n\n## 동작감지(Teachable Machine)\n![width:900px height:500px](./images/07_Teach_pose.jpg)  \n\n구글 Teachable Machine은 이미지/사운드/동작 이 세가지 학습방식을 지원하고, 일반인도 충분히 머신러닝 훈련 및 배포까지 가능한 환경을 제공하는 플랫폼이다. 이를 이용하여 팔의 동작 (O,X,캡쳐-두팔,대기)을 학습시켰다. 해당 플랫폼을 활용하여 만든 서비스 사례 중 하나가 ‘관상가 양반’(https://yourface.ga/)이다.\n바야흐로 AI 민주화(democratization) 시대가 열리고 있다. 우리도 이제 발맞춰 민첩하게 대응하고 목표를 추진할 수 있는 인력양성이 필요한 시점인 것 같다.\n\n\n---\n\n## Docker(Flask Web/ML Server)  \n![width:600px height:200px](./images/08_docker.jpg) ![width:400px height:200px](./images/9_docker_layer.jpg)   \n- docker base img: https://hub.docker.com/repository/docker/jukyellow/keras-flask-img  \n- base img 생성방법: https://github.com/jukyellow/artificial-intelligence-study/tree/master/11_Serving/keras-flask-img  \n\n---\n\n# 레퍼런스 \n\n- (Facenet + SVC 이미지 학습) https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/  \n- (Facenet Pre-Train model) https://www.microsoft.com/en-us/research/project/ms-celeb-1m-challenge-recognizing-one-million-celebrities-real-world/  \n- (Jquery MultiPart-Form Ajax) https://mkyong.com/jquery/jquery-ajax-submit-a-multipart-form/  \n- (Google Teachable Machine) https://teachablemachine.withgoogle.com/  \n\n\n\n\n","source":"_posts/Face-Check-In.md","raw":"---\ntitle: Face Check In 구현\nsubtitle: 안면인식과 모션인식을 통한 출석관리 시스템 구현\ncatalog: true\ndate: 2021-02-19 12:42:22\nheader-img: \"possessed-photography-jIBMSMs4_kA-unsplash.jpg\"\ntags: [\"facenet\" , \"google teachable machine\", \"face recognition\", \"docker\"]\ncategories:\n- AI\n---\n\n\n# 개요\n\n- 안면인식 + 동작감지 = (비접촉) 출석체크  \n\n안면인식과 동작감지 기술을 이용하여 비 접촉 출석체크 시스템을 구현해보았다. 오픈소스의 대중화와 머신러닝 프레임워크의 발전, 그리고 AI 민주화시대를 앞당기는 기업들의 노력으로, 앞으로 이런 수준의 서비스들은 추가적인 연구없이 현재 공개되어 있는 기술들로 충분히 구현 가능하다.  \n\n![width:800px height:500px](./images/01_출석체크.jpg)  \n\n\n## Teachable Machine(2.0)\n\n- https://teachablemachine.withgoogle.com/  \n- 일반인도 머신러닝 서비스를 만들수 있는 플랫폼을 제공(2019년/Google)  \n- 학습~배포(json/api)  \n![width:450px height:250px](./images/02_google_teachableMachine.jpg)  \n- 관련 파생 서비스: 관상가양반(https://yourface.ga/)  \n- 단점: 세세한 튜닝(최적화) 불가능->안면인식 성능 낮음\n\n\n## 안면인식 OpenSource\n\n### FaceApi\n- Javascript 구현체(tensorflow.js + node.js)  \n- github : https://github.com/justadudewhohacks/face-api.js/  \n![width:500px height:300px](./images/03_face-api.jpg)  \n- 다양한 기능(face-tracking, recognition...) 내장하고 있지만 속도가 느림  \n\n\n### Facenet(2015년/Google)\n- Facenet: Embedding(백만명 사진 학습>특징 임베딩 벡터>98~99%)  \n![width:300px height:200px](./images/04_Facenet.jpg)  \n- 블로그: https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/  \n- 논문: https://arxiv.org/abs/1503.03832  \n\n---\n\n# 시스템 구성/파이프라인\n\n- 시스템 구성  \n![](./images/05_Pipeline.jpg)  \n\n- 작업절차: 안면인식(keras)>동작인식(Teach)>두 모델 기능병합(HTML5,JS)>배포(Docker/Flask)  \n\nFace Model(안면인식)은 Google Colab환경에서 학습하였다. Facenet 모델의 Embedding 벡터와 지도학습 방법인 서포터벡터머신(SVC)을 사용하여 얼굴예측 모델을 구현하여, 구현체를 H5(Keras 모델), Pickle(Skit-Learn 모델) 파일 형태로 출력한다. Pose Model(동작감지)은 Google Teachable Machine을 사용하여 팔의 동작(O,X,캡쳐,대기)을 학습시키고, 모델을 Json형태로 출력하였다.  \n\n서버에 설치는 Docker(Container 가상화 기술)를 사용하여 환경을 구성하였다. Docker를 사용하면 OS환경(Windows/Linux등)과 상관없이 개발환경 그대로 배포환경으로 옮길 수 있다는 장점이 있다. 또한 필요한 Library를 시스템 설치 없이 다운로드후 구동방식으로 동작 시킬 수 있기 때문에 개발 생산성도 좋아진다. Docker를 빌드하기 위해서는 yml 파일이나 Dockerfile이 필요한데, 여기서는 Dockerfile을 사용하였고 Base 이미지로 Keras(Tensorflow)/Flask 이미지 서버를 구성한 뒤, ML(Machine Learning) 출력파일을 올려서 컨테이너를 구성하였다.  \n\n배포서버의 도메인이 Https(Nginx) 로 구성되어 있어서, 웹서버(Nginx) 뒤에 WAS서버 형태로 시스템을 붙여야 했다. Flask ML 서버를 port를 분리하여 구동 시키고 Nginx의 URI 라우팅(Location 설정)을 수정하여 구성하였다. Flask는 Python 웹 애플리케이션 서버 역할을 하면서 동시에 웹서버(html, js 배포) 역할을 할 수 있기때문에, Flask 서버에 Html/Javascript 소스도 배포하였다. 이렇게 해서 화면단의 요청을 ML서버가 직접 받도록 구성하여 CORS(Cross-Origin Resource Sharing) 및 Https/Http 혼용사용 문제도 해결하였다. \n\n---\n\n# 활용기술\n\n## 안면인식(FaceNet)\n- 사진(150명) Agumentation > Embedding(특징벡터) > SVC(서포트벡터머신) > 예측\n![](./images/06_agumentation.jpg)\n\nFacenet 모델은 기존 사람의 얼굴 윤곽을 잡아서 학습시키는 랜드마크 방식과 다르게, 사람 얼굴의 특정정보를 Embedding이라는 기하학적 공간에 사상시켜 훈련한데에 있다. 유명인 백만명을 학습시켜 Anchor 본인과 같은 사람의 사진이면 Positive로 보고 유클리드 공간상의 거리를 좁히고, 다른 사람이면 Negative로 보고 거리를 멀게 하도록 학습시키는 방식으로 Embedding 벡터를 훈련시켰다. 이 모델의 Embedding벡터를 사람 얼굴 특징 벡터로 Pre-Training 벡터로 사용하여 새로운 얼굴들을 추가 학습시키는 방법으로 활용 가능하다.\n\n\n### 학습 절차  \n![](./images/10_Train_process.jpg)\n\n머신러닝 학습을 위해서는 여러 장의 사진이 필요하기 때문에, 사진을 복제/변형하여 추가(20장)로 훈련 데이터를 확보한다. 이후 얼굴추출 Library를 이용하여 좌표에 해당하는 이미지를 Slice한다. 이후 오픈소스로 존재하는 Facenet Embedding 벡터를 통과시켜 얼굴 특징점을 수치화한 Vector를 추출한 뒤 본격적인 학습과정이 수행된다. 수치 데이터의 분포가 일정하게 정규화 한 뒤, 사람별로 Labeling 과정을 거치고 지도학습 모델중의 하나인 서포터벡터머신(SVC)으로 훈련시켰다. \n학습모델은 변경이 가능하고 딥러닝 모델을 사용하려면 사진 개수가 충분히 많아야 한다. 훈련Set 사진으로 학습시킨 뒤 테스트Set 사진으로 성능을 보면 99.8%로 거의 100%가깝게 나왔지만, 실제로 웹캠으로 시연을 해보면, 성능이 다소 떨어지는데 이는 사진이 현재 얼굴과 많이 다르거나, 웹캠의 해상도 조명등의 영향 때문인데 조명으로 인한 성능차이는 전처리 기능을 보강하여 추가 개선 가능하다.\n\n\n- Embedding Feacture 추출소스(Facenet->predict)\n```\ndef get_embedding(model, face_pixels):\n    face_pixels = face_pixels.astype('float32')\n    mean, std = face_pixels.mean(), face_pixels.std()\n    face_pixels = (face_pixels - mean) / std\n    samples = expand_dims(face_pixels, axis=0)\n    yhat = model.predict(samples) # make prediction to get embedding\n    return yhat[0]\n```\n\n---\n\n## 동작감지(Teachable Machine)\n![width:900px height:500px](./images/07_Teach_pose.jpg)  \n\n구글 Teachable Machine은 이미지/사운드/동작 이 세가지 학습방식을 지원하고, 일반인도 충분히 머신러닝 훈련 및 배포까지 가능한 환경을 제공하는 플랫폼이다. 이를 이용하여 팔의 동작 (O,X,캡쳐-두팔,대기)을 학습시켰다. 해당 플랫폼을 활용하여 만든 서비스 사례 중 하나가 ‘관상가 양반’(https://yourface.ga/)이다.\n바야흐로 AI 민주화(democratization) 시대가 열리고 있다. 우리도 이제 발맞춰 민첩하게 대응하고 목표를 추진할 수 있는 인력양성이 필요한 시점인 것 같다.\n\n\n---\n\n## Docker(Flask Web/ML Server)  \n![width:600px height:200px](./images/08_docker.jpg) ![width:400px height:200px](./images/9_docker_layer.jpg)   \n- docker base img: https://hub.docker.com/repository/docker/jukyellow/keras-flask-img  \n- base img 생성방법: https://github.com/jukyellow/artificial-intelligence-study/tree/master/11_Serving/keras-flask-img  \n\n---\n\n# 레퍼런스 \n\n- (Facenet + SVC 이미지 학습) https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/  \n- (Facenet Pre-Train model) https://www.microsoft.com/en-us/research/project/ms-celeb-1m-challenge-recognizing-one-million-celebrities-real-world/  \n- (Jquery MultiPart-Form Ajax) https://mkyong.com/jquery/jquery-ajax-submit-a-multipart-form/  \n- (Google Teachable Machine) https://teachablemachine.withgoogle.com/  \n\n\n\n\n","slug":"Face-Check-In","published":1,"updated":"2021-02-24T21:51:44.559Z","_id":"cklbrbvx80000nssp8p4gdi14","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h1><ul>\n<li>안면인식 + 동작감지 = (비접촉) 출석체크  </li>\n</ul>\n<p>안면인식과 동작감지 기술을 이용하여 비 접촉 출석체크 시스템을 구현해보았다. 오픈소스의 대중화와 머신러닝 프레임워크의 발전, 그리고 AI 민주화시대를 앞당기는 기업들의 노력으로, 앞으로 이런 수준의 서비스들은 추가적인 연구없이 현재 공개되어 있는 기술들로 충분히 구현 가능하다.  </p>\n<p><img src=\"./images/01_%EC%B6%9C%EC%84%9D%EC%B2%B4%ED%81%AC.jpg\" alt=\"width:800px height:500px\">  </p>\n<h2 id=\"Teachable-Machine-2-0\"><a href=\"#Teachable-Machine-2-0\" class=\"headerlink\" title=\"Teachable Machine(2.0)\"></a>Teachable Machine(2.0)</h2><ul>\n<li><a href=\"https://teachablemachine.withgoogle.com/\">https://teachablemachine.withgoogle.com/</a>  </li>\n<li>일반인도 머신러닝 서비스를 만들수 있는 플랫폼을 제공(2019년/Google)  </li>\n<li>학습~배포(json/api)<br><img src=\"./images/02_google_teachableMachine.jpg\" alt=\"width:450px height:250px\">  </li>\n<li>관련 파생 서비스: 관상가양반(<a href=\"https://yourface.ga/\">https://yourface.ga/</a>)  </li>\n<li>단점: 세세한 튜닝(최적화) 불가능-&gt;안면인식 성능 낮음</li>\n</ul>\n<h2 id=\"안면인식-OpenSource\"><a href=\"#안면인식-OpenSource\" class=\"headerlink\" title=\"안면인식 OpenSource\"></a>안면인식 OpenSource</h2><h3 id=\"FaceApi\"><a href=\"#FaceApi\" class=\"headerlink\" title=\"FaceApi\"></a>FaceApi</h3><ul>\n<li>Javascript 구현체(tensorflow.js + node.js)  </li>\n<li>github : <a href=\"https://github.com/justadudewhohacks/face-api.js/\">https://github.com/justadudewhohacks/face-api.js/</a><br><img src=\"./images/03_face-api.jpg\" alt=\"width:500px height:300px\">  </li>\n<li>다양한 기능(face-tracking, recognition…) 내장하고 있지만 속도가 느림  </li>\n</ul>\n<h3 id=\"Facenet-2015년-Google\"><a href=\"#Facenet-2015년-Google\" class=\"headerlink\" title=\"Facenet(2015년/Google)\"></a>Facenet(2015년/Google)</h3><ul>\n<li>Facenet: Embedding(백만명 사진 학습&gt;특징 임베딩 벡터&gt;98~99%)<br><img src=\"./images/04_Facenet.jpg\" alt=\"width:300px height:200px\">  </li>\n<li>블로그: <a href=\"https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/\">https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/</a>  </li>\n<li>논문: <a href=\"https://arxiv.org/abs/1503.03832\">https://arxiv.org/abs/1503.03832</a>  </li>\n</ul>\n<hr>\n<h1 id=\"시스템-구성-파이프라인\"><a href=\"#시스템-구성-파이프라인\" class=\"headerlink\" title=\"시스템 구성/파이프라인\"></a>시스템 구성/파이프라인</h1><ul>\n<li><p>시스템 구성<br><img src=\"./images/05_Pipeline.jpg\">  </p>\n</li>\n<li><p>작업절차: 안면인식(keras)&gt;동작인식(Teach)&gt;두 모델 기능병합(HTML5,JS)&gt;배포(Docker/Flask)  </p>\n</li>\n</ul>\n<p>Face Model(안면인식)은 Google Colab환경에서 학습하였다. Facenet 모델의 Embedding 벡터와 지도학습 방법인 서포터벡터머신(SVC)을 사용하여 얼굴예측 모델을 구현하여, 구현체를 H5(Keras 모델), Pickle(Skit-Learn 모델) 파일 형태로 출력한다. Pose Model(동작감지)은 Google Teachable Machine을 사용하여 팔의 동작(O,X,캡쳐,대기)을 학습시키고, 모델을 Json형태로 출력하였다.  </p>\n<p>서버에 설치는 Docker(Container 가상화 기술)를 사용하여 환경을 구성하였다. Docker를 사용하면 OS환경(Windows/Linux등)과 상관없이 개발환경 그대로 배포환경으로 옮길 수 있다는 장점이 있다. 또한 필요한 Library를 시스템 설치 없이 다운로드후 구동방식으로 동작 시킬 수 있기 때문에 개발 생산성도 좋아진다. Docker를 빌드하기 위해서는 yml 파일이나 Dockerfile이 필요한데, 여기서는 Dockerfile을 사용하였고 Base 이미지로 Keras(Tensorflow)/Flask 이미지 서버를 구성한 뒤, ML(Machine Learning) 출력파일을 올려서 컨테이너를 구성하였다.  </p>\n<p>배포서버의 도메인이 Https(Nginx) 로 구성되어 있어서, 웹서버(Nginx) 뒤에 WAS서버 형태로 시스템을 붙여야 했다. Flask ML 서버를 port를 분리하여 구동 시키고 Nginx의 URI 라우팅(Location 설정)을 수정하여 구성하였다. Flask는 Python 웹 애플리케이션 서버 역할을 하면서 동시에 웹서버(html, js 배포) 역할을 할 수 있기때문에, Flask 서버에 Html/Javascript 소스도 배포하였다. 이렇게 해서 화면단의 요청을 ML서버가 직접 받도록 구성하여 CORS(Cross-Origin Resource Sharing) 및 Https/Http 혼용사용 문제도 해결하였다. </p>\n<hr>\n<h1 id=\"활용기술\"><a href=\"#활용기술\" class=\"headerlink\" title=\"활용기술\"></a>활용기술</h1><h2 id=\"안면인식-FaceNet\"><a href=\"#안면인식-FaceNet\" class=\"headerlink\" title=\"안면인식(FaceNet)\"></a>안면인식(FaceNet)</h2><ul>\n<li>사진(150명) Agumentation &gt; Embedding(특징벡터) &gt; SVC(서포트벡터머신) &gt; 예측<br><img src=\"./images/06_agumentation.jpg\"></li>\n</ul>\n<p>Facenet 모델은 기존 사람의 얼굴 윤곽을 잡아서 학습시키는 랜드마크 방식과 다르게, 사람 얼굴의 특정정보를 Embedding이라는 기하학적 공간에 사상시켜 훈련한데에 있다. 유명인 백만명을 학습시켜 Anchor 본인과 같은 사람의 사진이면 Positive로 보고 유클리드 공간상의 거리를 좁히고, 다른 사람이면 Negative로 보고 거리를 멀게 하도록 학습시키는 방식으로 Embedding 벡터를 훈련시켰다. 이 모델의 Embedding벡터를 사람 얼굴 특징 벡터로 Pre-Training 벡터로 사용하여 새로운 얼굴들을 추가 학습시키는 방법으로 활용 가능하다.</p>\n<h3 id=\"학습-절차\"><a href=\"#학습-절차\" class=\"headerlink\" title=\"학습 절차\"></a>학습 절차</h3><p><img src=\"./images/10_Train_process.jpg\"></p>\n<p>머신러닝 학습을 위해서는 여러 장의 사진이 필요하기 때문에, 사진을 복제/변형하여 추가(20장)로 훈련 데이터를 확보한다. 이후 얼굴추출 Library를 이용하여 좌표에 해당하는 이미지를 Slice한다. 이후 오픈소스로 존재하는 Facenet Embedding 벡터를 통과시켜 얼굴 특징점을 수치화한 Vector를 추출한 뒤 본격적인 학습과정이 수행된다. 수치 데이터의 분포가 일정하게 정규화 한 뒤, 사람별로 Labeling 과정을 거치고 지도학습 모델중의 하나인 서포터벡터머신(SVC)으로 훈련시켰다.<br>학습모델은 변경이 가능하고 딥러닝 모델을 사용하려면 사진 개수가 충분히 많아야 한다. 훈련Set 사진으로 학습시킨 뒤 테스트Set 사진으로 성능을 보면 99.8%로 거의 100%가깝게 나왔지만, 실제로 웹캠으로 시연을 해보면, 성능이 다소 떨어지는데 이는 사진이 현재 얼굴과 많이 다르거나, 웹캠의 해상도 조명등의 영향 때문인데 조명으로 인한 성능차이는 전처리 기능을 보강하여 추가 개선 가능하다.</p>\n<ul>\n<li>Embedding Feacture 추출소스(Facenet-&gt;predict)<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def get_embedding(model, face_pixels):</span><br><span class=\"line\">    face_pixels = face_pixels.astype(&#x27;float32&#x27;)</span><br><span class=\"line\">    <span class=\"built_in\">mean</span>, <span class=\"built_in\">std</span> = face_pixels.<span class=\"built_in\">mean</span>(), face_pixels.<span class=\"built_in\">std</span>()</span><br><span class=\"line\">    face_pixels = (face_pixels - <span class=\"built_in\">mean</span>) / <span class=\"built_in\">std</span></span><br><span class=\"line\">    samples = expand_dims(face_pixels, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    yhat = model.predict(samples) # make prediction to <span class=\"built_in\">get</span> embedding</span><br><span class=\"line\">    <span class=\"built_in\">return</span> yhat[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"동작감지-Teachable-Machine\"><a href=\"#동작감지-Teachable-Machine\" class=\"headerlink\" title=\"동작감지(Teachable Machine)\"></a>동작감지(Teachable Machine)</h2><p><img src=\"./images/07_Teach_pose.jpg\" alt=\"width:900px height:500px\">  </p>\n<p>구글 Teachable Machine은 이미지/사운드/동작 이 세가지 학습방식을 지원하고, 일반인도 충분히 머신러닝 훈련 및 배포까지 가능한 환경을 제공하는 플랫폼이다. 이를 이용하여 팔의 동작 (O,X,캡쳐-두팔,대기)을 학습시켰다. 해당 플랫폼을 활용하여 만든 서비스 사례 중 하나가 ‘관상가 양반’(<a href=\"https://yourface.ga/)%EC%9D%B4%EB%8B%A4\">https://yourface.ga/)이다</a>.<br>바야흐로 AI 민주화(democratization) 시대가 열리고 있다. 우리도 이제 발맞춰 민첩하게 대응하고 목표를 추진할 수 있는 인력양성이 필요한 시점인 것 같다.</p>\n<hr>\n<h2 id=\"Docker-Flask-Web-ML-Server\"><a href=\"#Docker-Flask-Web-ML-Server\" class=\"headerlink\" title=\"Docker(Flask Web/ML Server)\"></a>Docker(Flask Web/ML Server)</h2><p><img src=\"./images/08_docker.jpg\" alt=\"width:600px height:200px\"> <img src=\"./images/9_docker_layer.jpg\" alt=\"width:400px height:200px\">   </p>\n<ul>\n<li>docker base img: <a href=\"https://hub.docker.com/repository/docker/jukyellow/keras-flask-img\">https://hub.docker.com/repository/docker/jukyellow/keras-flask-img</a>  </li>\n<li>base img 생성방법: <a href=\"https://github.com/jukyellow/artificial-intelligence-study/tree/master/11_Serving/keras-flask-img\">https://github.com/jukyellow/artificial-intelligence-study/tree/master/11_Serving/keras-flask-img</a>  </li>\n</ul>\n<hr>\n<h1 id=\"레퍼런스\"><a href=\"#레퍼런스\" class=\"headerlink\" title=\"레퍼런스\"></a>레퍼런스</h1><ul>\n<li>(Facenet + SVC 이미지 학습) <a href=\"https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/\">https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/</a>  </li>\n<li>(Facenet Pre-Train model) <a href=\"https://www.microsoft.com/en-us/research/project/ms-celeb-1m-challenge-recognizing-one-million-celebrities-real-world/\">https://www.microsoft.com/en-us/research/project/ms-celeb-1m-challenge-recognizing-one-million-celebrities-real-world/</a>  </li>\n<li>(Jquery MultiPart-Form Ajax) <a href=\"https://mkyong.com/jquery/jquery-ajax-submit-a-multipart-form/\">https://mkyong.com/jquery/jquery-ajax-submit-a-multipart-form/</a>  </li>\n<li>(Google Teachable Machine) <a href=\"https://teachablemachine.withgoogle.com/\">https://teachablemachine.withgoogle.com/</a>  </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h1><ul>\n<li>안면인식 + 동작감지 = (비접촉) 출석체크  </li>\n</ul>\n<p>안면인식과 동작감지 기술을 이용하여 비 접촉 출석체크 시스템을 구현해보았다. 오픈소스의 대중화와 머신러닝 프레임워크의 발전, 그리고 AI 민주화시대를 앞당기는 기업들의 노력으로, 앞으로 이런 수준의 서비스들은 추가적인 연구없이 현재 공개되어 있는 기술들로 충분히 구현 가능하다.  </p>\n<p><img src=\"./images/01_%EC%B6%9C%EC%84%9D%EC%B2%B4%ED%81%AC.jpg\" alt=\"width:800px height:500px\">  </p>\n<h2 id=\"Teachable-Machine-2-0\"><a href=\"#Teachable-Machine-2-0\" class=\"headerlink\" title=\"Teachable Machine(2.0)\"></a>Teachable Machine(2.0)</h2><ul>\n<li><a href=\"https://teachablemachine.withgoogle.com/\">https://teachablemachine.withgoogle.com/</a>  </li>\n<li>일반인도 머신러닝 서비스를 만들수 있는 플랫폼을 제공(2019년/Google)  </li>\n<li>학습~배포(json/api)<br><img src=\"./images/02_google_teachableMachine.jpg\" alt=\"width:450px height:250px\">  </li>\n<li>관련 파생 서비스: 관상가양반(<a href=\"https://yourface.ga/\">https://yourface.ga/</a>)  </li>\n<li>단점: 세세한 튜닝(최적화) 불가능-&gt;안면인식 성능 낮음</li>\n</ul>\n<h2 id=\"안면인식-OpenSource\"><a href=\"#안면인식-OpenSource\" class=\"headerlink\" title=\"안면인식 OpenSource\"></a>안면인식 OpenSource</h2><h3 id=\"FaceApi\"><a href=\"#FaceApi\" class=\"headerlink\" title=\"FaceApi\"></a>FaceApi</h3><ul>\n<li>Javascript 구현체(tensorflow.js + node.js)  </li>\n<li>github : <a href=\"https://github.com/justadudewhohacks/face-api.js/\">https://github.com/justadudewhohacks/face-api.js/</a><br><img src=\"./images/03_face-api.jpg\" alt=\"width:500px height:300px\">  </li>\n<li>다양한 기능(face-tracking, recognition…) 내장하고 있지만 속도가 느림  </li>\n</ul>\n<h3 id=\"Facenet-2015년-Google\"><a href=\"#Facenet-2015년-Google\" class=\"headerlink\" title=\"Facenet(2015년/Google)\"></a>Facenet(2015년/Google)</h3><ul>\n<li>Facenet: Embedding(백만명 사진 학습&gt;특징 임베딩 벡터&gt;98~99%)<br><img src=\"./images/04_Facenet.jpg\" alt=\"width:300px height:200px\">  </li>\n<li>블로그: <a href=\"https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/\">https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/</a>  </li>\n<li>논문: <a href=\"https://arxiv.org/abs/1503.03832\">https://arxiv.org/abs/1503.03832</a>  </li>\n</ul>\n<hr>\n<h1 id=\"시스템-구성-파이프라인\"><a href=\"#시스템-구성-파이프라인\" class=\"headerlink\" title=\"시스템 구성/파이프라인\"></a>시스템 구성/파이프라인</h1><ul>\n<li><p>시스템 구성<br><img src=\"./images/05_Pipeline.jpg\">  </p>\n</li>\n<li><p>작업절차: 안면인식(keras)&gt;동작인식(Teach)&gt;두 모델 기능병합(HTML5,JS)&gt;배포(Docker/Flask)  </p>\n</li>\n</ul>\n<p>Face Model(안면인식)은 Google Colab환경에서 학습하였다. Facenet 모델의 Embedding 벡터와 지도학습 방법인 서포터벡터머신(SVC)을 사용하여 얼굴예측 모델을 구현하여, 구현체를 H5(Keras 모델), Pickle(Skit-Learn 모델) 파일 형태로 출력한다. Pose Model(동작감지)은 Google Teachable Machine을 사용하여 팔의 동작(O,X,캡쳐,대기)을 학습시키고, 모델을 Json형태로 출력하였다.  </p>\n<p>서버에 설치는 Docker(Container 가상화 기술)를 사용하여 환경을 구성하였다. Docker를 사용하면 OS환경(Windows/Linux등)과 상관없이 개발환경 그대로 배포환경으로 옮길 수 있다는 장점이 있다. 또한 필요한 Library를 시스템 설치 없이 다운로드후 구동방식으로 동작 시킬 수 있기 때문에 개발 생산성도 좋아진다. Docker를 빌드하기 위해서는 yml 파일이나 Dockerfile이 필요한데, 여기서는 Dockerfile을 사용하였고 Base 이미지로 Keras(Tensorflow)/Flask 이미지 서버를 구성한 뒤, ML(Machine Learning) 출력파일을 올려서 컨테이너를 구성하였다.  </p>\n<p>배포서버의 도메인이 Https(Nginx) 로 구성되어 있어서, 웹서버(Nginx) 뒤에 WAS서버 형태로 시스템을 붙여야 했다. Flask ML 서버를 port를 분리하여 구동 시키고 Nginx의 URI 라우팅(Location 설정)을 수정하여 구성하였다. Flask는 Python 웹 애플리케이션 서버 역할을 하면서 동시에 웹서버(html, js 배포) 역할을 할 수 있기때문에, Flask 서버에 Html/Javascript 소스도 배포하였다. 이렇게 해서 화면단의 요청을 ML서버가 직접 받도록 구성하여 CORS(Cross-Origin Resource Sharing) 및 Https/Http 혼용사용 문제도 해결하였다. </p>\n<hr>\n<h1 id=\"활용기술\"><a href=\"#활용기술\" class=\"headerlink\" title=\"활용기술\"></a>활용기술</h1><h2 id=\"안면인식-FaceNet\"><a href=\"#안면인식-FaceNet\" class=\"headerlink\" title=\"안면인식(FaceNet)\"></a>안면인식(FaceNet)</h2><ul>\n<li>사진(150명) Agumentation &gt; Embedding(특징벡터) &gt; SVC(서포트벡터머신) &gt; 예측<br><img src=\"./images/06_agumentation.jpg\"></li>\n</ul>\n<p>Facenet 모델은 기존 사람의 얼굴 윤곽을 잡아서 학습시키는 랜드마크 방식과 다르게, 사람 얼굴의 특정정보를 Embedding이라는 기하학적 공간에 사상시켜 훈련한데에 있다. 유명인 백만명을 학습시켜 Anchor 본인과 같은 사람의 사진이면 Positive로 보고 유클리드 공간상의 거리를 좁히고, 다른 사람이면 Negative로 보고 거리를 멀게 하도록 학습시키는 방식으로 Embedding 벡터를 훈련시켰다. 이 모델의 Embedding벡터를 사람 얼굴 특징 벡터로 Pre-Training 벡터로 사용하여 새로운 얼굴들을 추가 학습시키는 방법으로 활용 가능하다.</p>\n<h3 id=\"학습-절차\"><a href=\"#학습-절차\" class=\"headerlink\" title=\"학습 절차\"></a>학습 절차</h3><p><img src=\"./images/10_Train_process.jpg\"></p>\n<p>머신러닝 학습을 위해서는 여러 장의 사진이 필요하기 때문에, 사진을 복제/변형하여 추가(20장)로 훈련 데이터를 확보한다. 이후 얼굴추출 Library를 이용하여 좌표에 해당하는 이미지를 Slice한다. 이후 오픈소스로 존재하는 Facenet Embedding 벡터를 통과시켜 얼굴 특징점을 수치화한 Vector를 추출한 뒤 본격적인 학습과정이 수행된다. 수치 데이터의 분포가 일정하게 정규화 한 뒤, 사람별로 Labeling 과정을 거치고 지도학습 모델중의 하나인 서포터벡터머신(SVC)으로 훈련시켰다.<br>학습모델은 변경이 가능하고 딥러닝 모델을 사용하려면 사진 개수가 충분히 많아야 한다. 훈련Set 사진으로 학습시킨 뒤 테스트Set 사진으로 성능을 보면 99.8%로 거의 100%가깝게 나왔지만, 실제로 웹캠으로 시연을 해보면, 성능이 다소 떨어지는데 이는 사진이 현재 얼굴과 많이 다르거나, 웹캠의 해상도 조명등의 영향 때문인데 조명으로 인한 성능차이는 전처리 기능을 보강하여 추가 개선 가능하다.</p>\n<ul>\n<li>Embedding Feacture 추출소스(Facenet-&gt;predict)<figure class=\"highlight maxima\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">def get_embedding(model, face_pixels):</span><br><span class=\"line\">    face_pixels = face_pixels.astype(&#x27;float32&#x27;)</span><br><span class=\"line\">    <span class=\"built_in\">mean</span>, <span class=\"built_in\">std</span> = face_pixels.<span class=\"built_in\">mean</span>(), face_pixels.<span class=\"built_in\">std</span>()</span><br><span class=\"line\">    face_pixels = (face_pixels - <span class=\"built_in\">mean</span>) / <span class=\"built_in\">std</span></span><br><span class=\"line\">    samples = expand_dims(face_pixels, axis=<span class=\"number\">0</span>)</span><br><span class=\"line\">    yhat = model.predict(samples) # make prediction to <span class=\"built_in\">get</span> embedding</span><br><span class=\"line\">    <span class=\"built_in\">return</span> yhat[<span class=\"number\">0</span>]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"동작감지-Teachable-Machine\"><a href=\"#동작감지-Teachable-Machine\" class=\"headerlink\" title=\"동작감지(Teachable Machine)\"></a>동작감지(Teachable Machine)</h2><p><img src=\"./images/07_Teach_pose.jpg\" alt=\"width:900px height:500px\">  </p>\n<p>구글 Teachable Machine은 이미지/사운드/동작 이 세가지 학습방식을 지원하고, 일반인도 충분히 머신러닝 훈련 및 배포까지 가능한 환경을 제공하는 플랫폼이다. 이를 이용하여 팔의 동작 (O,X,캡쳐-두팔,대기)을 학습시켰다. 해당 플랫폼을 활용하여 만든 서비스 사례 중 하나가 ‘관상가 양반’(<a href=\"https://yourface.ga/)%EC%9D%B4%EB%8B%A4\">https://yourface.ga/)이다</a>.<br>바야흐로 AI 민주화(democratization) 시대가 열리고 있다. 우리도 이제 발맞춰 민첩하게 대응하고 목표를 추진할 수 있는 인력양성이 필요한 시점인 것 같다.</p>\n<hr>\n<h2 id=\"Docker-Flask-Web-ML-Server\"><a href=\"#Docker-Flask-Web-ML-Server\" class=\"headerlink\" title=\"Docker(Flask Web/ML Server)\"></a>Docker(Flask Web/ML Server)</h2><p><img src=\"./images/08_docker.jpg\" alt=\"width:600px height:200px\"> <img src=\"./images/9_docker_layer.jpg\" alt=\"width:400px height:200px\">   </p>\n<ul>\n<li>docker base img: <a href=\"https://hub.docker.com/repository/docker/jukyellow/keras-flask-img\">https://hub.docker.com/repository/docker/jukyellow/keras-flask-img</a>  </li>\n<li>base img 생성방법: <a href=\"https://github.com/jukyellow/artificial-intelligence-study/tree/master/11_Serving/keras-flask-img\">https://github.com/jukyellow/artificial-intelligence-study/tree/master/11_Serving/keras-flask-img</a>  </li>\n</ul>\n<hr>\n<h1 id=\"레퍼런스\"><a href=\"#레퍼런스\" class=\"headerlink\" title=\"레퍼런스\"></a>레퍼런스</h1><ul>\n<li>(Facenet + SVC 이미지 학습) <a href=\"https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/\">https://machinelearningmastery.com/how-to-develop-a-face-recognition-system-using-facenet-in-keras-and-an-svm-classifier/</a>  </li>\n<li>(Facenet Pre-Train model) <a href=\"https://www.microsoft.com/en-us/research/project/ms-celeb-1m-challenge-recognizing-one-million-celebrities-real-world/\">https://www.microsoft.com/en-us/research/project/ms-celeb-1m-challenge-recognizing-one-million-celebrities-real-world/</a>  </li>\n<li>(Jquery MultiPart-Form Ajax) <a href=\"https://mkyong.com/jquery/jquery-ajax-submit-a-multipart-form/\">https://mkyong.com/jquery/jquery-ajax-submit-a-multipart-form/</a>  </li>\n<li>(Google Teachable Machine) <a href=\"https://teachablemachine.withgoogle.com/\">https://teachablemachine.withgoogle.com/</a>  </li>\n</ul>\n"},{"title":"OCR-Tesseract-Demo","subtitle":"OCR 오픈소스 tesseract(Docker)를 이용한 데모 페이지 개발","catalog":true,"date":"2021-02-19T21:59:11.000Z","header-img":"possessed-photography-jIBMSMs4_kA-unsplash.jpg","_content":"  \n  \n- 현재 인터넷에 공개되 있는 'Tesseract 데모 페이지 구현 블로그'는 구 레파지토리(google) 버전이라 실행이 불가능하다. 하여 최신 레파지토리(github) 기준으로 동작가능한 데모 페이지로 오류를 수정하여 내용을 공개한다.  \n- 또한, 기존 블로그는 모바일 환경을 지원하지 않지만, 모바일에서 카메라 캡처->Text추출 가능한 소스로 업데이트 예정이다.  \n\n# 실행화면\n- 초기화면  \n![](./images/01_초기화면.png)  \n- Text 추출 결과  \n![](./images/02_Text추출.png)  \n\n# tesseract 다운로드\n\n## 도커 이미지 다운로드\n- https://tesseract-ocr.github.io/  \n- https://tesseract-ocr.github.io/tessdoc/  \n- https://tesseract-ocr.github.io/tessdoc/4.0-Docker-Containers.html  \n> Tesseract 4 OCR Runtime Environment - Docker Container  \n> (레파지토리) https://github.com/tesseract-shadow/tesseract-ocr-re  \n\n## image 다운로드\n```\ndocker pull tesseractshadow/tesseract4re .\n```\n\n## 샘플 테스트 (복사 & 실행)\n- test.sh  \n\n```\ndocker cp ./ocr-files/phototest.tif t4re:/home/work/$TASK_TMP_DIR/\ndocker exec -it t4re /bin/bash -c \"mkdir -p ./$TASK_TMP_DIR/out/; cd ./$TASK_TMP_DIR/out/; tesseract ../phototest.tif phototest -l eng --psm 1 --oem 3 txt pdf hocr\"\n```\n\n---\n\n# 데모 페이지\n\n## pytesseract 설치 및 Flask 웹서버 연동\n- 출처: https://realpython.com/setting-up-a-simple-ocr-server/#web-server-time \n- (source) https://github.com/ybur-yug/python_ocr_tutorial  \n> (tesseract 설치/구동까지는 1번참고, 해당 자료는 tesseract 구레파지토리를 사용하는 옛날버전인듯)  \n> pytesseract를 설치하는 부분은 1)번 + 별도 dockerfile로 구성  \n\n---\n\n## 도커실행\n- 5000: ocr tesseract flask port  \n```\ndocker build -t ocr_tesseract_web .\ndocker run --name ocr_tesseract_web --publish 5000:5000 -it ocr_tesseract_web\n```\n\n---\n\n## dockerfile\n- tesseractshadow/tesseract4re + Flask 웹서버 구동을 위해서 일부 오류수정 추가\n```\n# start with a base image\n# FROM ubuntu:14.04\nFROM tesseractshadow/tesseract4re\n\n## install dependencies\nRUN apt-get update\nRUN apt-get install -y liblog4cplus-dev\nRUN apt-get install -y python python-pip\n\nRUN ls\nWORKDIR /\nRUN ls\nADD requirements.txt /\nRUN pip install -r requirements.txt\n\n# pil error : decoder jpeg not available\nRUN pip uninstall Pillow -y\nRUN apt-get install -y libjpeg-dev\nRUN pip install Pillow\n\n# update working directories\nADD ./flask_server /flask_server\nWORKDIR /flask_server\n\n#EXPOSE 5000\nCMD [\"python\", \"app.py\"]\n```\n\n--- \n\n## Flask app\n- app.py  \n```\n@app.route('/')\ndef main():\n    return render_template('index.html')\n\n@app.route('/v{}/ocr'.format(_VERSION), methods=[\"POST\"])\ndef ocr():\n    print('--call ocr processing --')\n    try:\n        if request.files.get(\"image\"):\n            print('--read image --')\n            # read the image in PIL format\n            image = request.files[\"image\"].read()\n            image = Image.open(io.BytesIO(image))\n            print('RECV:', image.format, image.size, image.mode)\n\n            output = process_image2(image)\n            print('output:', output)\n            return jsonify({\"output\": output})\n        else:\n            return jsonify({\"error\": \"only .jpg files, please\"})\n    except Exception as e:\n        print('ocr processing exception:' , e)\n        print(traceback.format_exc())\n        return jsonify(\n            {\"error\": str(e)}\n        )\n```\n- javascript  \n```\n$('#submit').on('click', function(event){\n\t$(\"#results\").hide()\n\tvar data = new FormData();\n\t\n\tif(is_mobile){\n\t\tvar cFile = getCaptureImg();\n\t\tdata.append(\"image\", cFile);\n\t}else{\t\t\t\n\t\tvar file = $('#file')[0].files[0];\n\t\tdata.append(\"image\", file);\n\t}\n\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: \"/v1/ocr\",\n\t  enctype: 'multipart/form-data',\n\t  data : data,\n\t  processData: false,\n\t  contentType: false,\n\t  cache: false,\n\t  timeout: 600000,\n\t  success: function(result) {\n\t\tconsole.log(result);\n\t\t$(\"#post-form\").hide()\n\t\t$(\"#retry\").show()\n\t\t$(\"#results\").show()\n\t\t$(\"#results-data\").html(\"<div class='well'>\"+result[\"output\"]+\"</div>\");\n\t  },\n\t  error: function(error) {\n\t\tconsole.log(error);\n\t  }\n\t});\n});\n```\n\n---\n\n# Source\n- 전체 source: https://github.com/jukyellow/artificial-intelligence-study/tree/master/13_ImageProcessing/OCR(Tesseract)/pytessract_dockerfike  \n- 참고: PC 크롬환경에서 테스트완료, 모바일 환경은 테스트 못함(소스는 모바일(아이폰) 환경도 가능한 모듈로 구성)  ","source":"_posts/OCR-Tesseract-Demo.md","raw":"---\ntitle: OCR-Tesseract-Demo\nsubtitle: OCR 오픈소스 tesseract(Docker)를 이용한 데모 페이지 개발\ncatalog: true\ndate: 2021-02-20 06:59:11\nheader-img: \"possessed-photography-jIBMSMs4_kA-unsplash.jpg\"\ntags: [\"OCR\" , \"Tesseract\", \"Docker\", \"Text추출\"]\ncategories:\n- OCR\n---\n  \n  \n- 현재 인터넷에 공개되 있는 'Tesseract 데모 페이지 구현 블로그'는 구 레파지토리(google) 버전이라 실행이 불가능하다. 하여 최신 레파지토리(github) 기준으로 동작가능한 데모 페이지로 오류를 수정하여 내용을 공개한다.  \n- 또한, 기존 블로그는 모바일 환경을 지원하지 않지만, 모바일에서 카메라 캡처->Text추출 가능한 소스로 업데이트 예정이다.  \n\n# 실행화면\n- 초기화면  \n![](./images/01_초기화면.png)  \n- Text 추출 결과  \n![](./images/02_Text추출.png)  \n\n# tesseract 다운로드\n\n## 도커 이미지 다운로드\n- https://tesseract-ocr.github.io/  \n- https://tesseract-ocr.github.io/tessdoc/  \n- https://tesseract-ocr.github.io/tessdoc/4.0-Docker-Containers.html  \n> Tesseract 4 OCR Runtime Environment - Docker Container  \n> (레파지토리) https://github.com/tesseract-shadow/tesseract-ocr-re  \n\n## image 다운로드\n```\ndocker pull tesseractshadow/tesseract4re .\n```\n\n## 샘플 테스트 (복사 & 실행)\n- test.sh  \n\n```\ndocker cp ./ocr-files/phototest.tif t4re:/home/work/$TASK_TMP_DIR/\ndocker exec -it t4re /bin/bash -c \"mkdir -p ./$TASK_TMP_DIR/out/; cd ./$TASK_TMP_DIR/out/; tesseract ../phototest.tif phototest -l eng --psm 1 --oem 3 txt pdf hocr\"\n```\n\n---\n\n# 데모 페이지\n\n## pytesseract 설치 및 Flask 웹서버 연동\n- 출처: https://realpython.com/setting-up-a-simple-ocr-server/#web-server-time \n- (source) https://github.com/ybur-yug/python_ocr_tutorial  \n> (tesseract 설치/구동까지는 1번참고, 해당 자료는 tesseract 구레파지토리를 사용하는 옛날버전인듯)  \n> pytesseract를 설치하는 부분은 1)번 + 별도 dockerfile로 구성  \n\n---\n\n## 도커실행\n- 5000: ocr tesseract flask port  \n```\ndocker build -t ocr_tesseract_web .\ndocker run --name ocr_tesseract_web --publish 5000:5000 -it ocr_tesseract_web\n```\n\n---\n\n## dockerfile\n- tesseractshadow/tesseract4re + Flask 웹서버 구동을 위해서 일부 오류수정 추가\n```\n# start with a base image\n# FROM ubuntu:14.04\nFROM tesseractshadow/tesseract4re\n\n## install dependencies\nRUN apt-get update\nRUN apt-get install -y liblog4cplus-dev\nRUN apt-get install -y python python-pip\n\nRUN ls\nWORKDIR /\nRUN ls\nADD requirements.txt /\nRUN pip install -r requirements.txt\n\n# pil error : decoder jpeg not available\nRUN pip uninstall Pillow -y\nRUN apt-get install -y libjpeg-dev\nRUN pip install Pillow\n\n# update working directories\nADD ./flask_server /flask_server\nWORKDIR /flask_server\n\n#EXPOSE 5000\nCMD [\"python\", \"app.py\"]\n```\n\n--- \n\n## Flask app\n- app.py  \n```\n@app.route('/')\ndef main():\n    return render_template('index.html')\n\n@app.route('/v{}/ocr'.format(_VERSION), methods=[\"POST\"])\ndef ocr():\n    print('--call ocr processing --')\n    try:\n        if request.files.get(\"image\"):\n            print('--read image --')\n            # read the image in PIL format\n            image = request.files[\"image\"].read()\n            image = Image.open(io.BytesIO(image))\n            print('RECV:', image.format, image.size, image.mode)\n\n            output = process_image2(image)\n            print('output:', output)\n            return jsonify({\"output\": output})\n        else:\n            return jsonify({\"error\": \"only .jpg files, please\"})\n    except Exception as e:\n        print('ocr processing exception:' , e)\n        print(traceback.format_exc())\n        return jsonify(\n            {\"error\": str(e)}\n        )\n```\n- javascript  \n```\n$('#submit').on('click', function(event){\n\t$(\"#results\").hide()\n\tvar data = new FormData();\n\t\n\tif(is_mobile){\n\t\tvar cFile = getCaptureImg();\n\t\tdata.append(\"image\", cFile);\n\t}else{\t\t\t\n\t\tvar file = $('#file')[0].files[0];\n\t\tdata.append(\"image\", file);\n\t}\n\n\t$.ajax({\n\t  type: \"POST\",\n\t  url: \"/v1/ocr\",\n\t  enctype: 'multipart/form-data',\n\t  data : data,\n\t  processData: false,\n\t  contentType: false,\n\t  cache: false,\n\t  timeout: 600000,\n\t  success: function(result) {\n\t\tconsole.log(result);\n\t\t$(\"#post-form\").hide()\n\t\t$(\"#retry\").show()\n\t\t$(\"#results\").show()\n\t\t$(\"#results-data\").html(\"<div class='well'>\"+result[\"output\"]+\"</div>\");\n\t  },\n\t  error: function(error) {\n\t\tconsole.log(error);\n\t  }\n\t});\n});\n```\n\n---\n\n# Source\n- 전체 source: https://github.com/jukyellow/artificial-intelligence-study/tree/master/13_ImageProcessing/OCR(Tesseract)/pytessract_dockerfike  \n- 참고: PC 크롬환경에서 테스트완료, 모바일 환경은 테스트 못함(소스는 모바일(아이폰) 환경도 가능한 모듈로 구성)  ","slug":"OCR-Tesseract-Demo","published":1,"updated":"2021-02-24T21:51:04.906Z","_id":"cklcu62l40000x4sp8ded5jxt","comments":1,"layout":"post","photos":[],"link":"","content":"<ul>\n<li>현재 인터넷에 공개되 있는 ‘Tesseract 데모 페이지 구현 블로그’는 구 레파지토리(google) 버전이라 실행이 불가능하다. 하여 최신 레파지토리(github) 기준으로 동작가능한 데모 페이지로 오류를 수정하여 내용을 공개한다.  </li>\n<li>또한, 기존 블로그는 모바일 환경을 지원하지 않지만, 모바일에서 카메라 캡처-&gt;Text추출 가능한 소스로 업데이트 예정이다.  </li>\n</ul>\n<h1 id=\"실행화면\"><a href=\"#실행화면\" class=\"headerlink\" title=\"실행화면\"></a>실행화면</h1><ul>\n<li>초기화면<br><img src=\"./images/01_%EC%B4%88%EA%B8%B0%ED%99%94%EB%A9%B4.png\">  </li>\n<li>Text 추출 결과<br><img src=\"./images/02_Text%EC%B6%94%EC%B6%9C.png\">  </li>\n</ul>\n<h1 id=\"tesseract-다운로드\"><a href=\"#tesseract-다운로드\" class=\"headerlink\" title=\"tesseract 다운로드\"></a>tesseract 다운로드</h1><h2 id=\"도커-이미지-다운로드\"><a href=\"#도커-이미지-다운로드\" class=\"headerlink\" title=\"도커 이미지 다운로드\"></a>도커 이미지 다운로드</h2><ul>\n<li><a href=\"https://tesseract-ocr.github.io/\">https://tesseract-ocr.github.io/</a>  </li>\n<li><a href=\"https://tesseract-ocr.github.io/tessdoc/\">https://tesseract-ocr.github.io/tessdoc/</a>  </li>\n<li><a href=\"https://tesseract-ocr.github.io/tessdoc/4.0-Docker-Containers.html\">https://tesseract-ocr.github.io/tessdoc/4.0-Docker-Containers.html</a>  <blockquote>\n<p>Tesseract 4 OCR Runtime Environment - Docker Container<br>(레파지토리) <a href=\"https://github.com/tesseract-shadow/tesseract-ocr-re\">https://github.com/tesseract-shadow/tesseract-ocr-re</a>  </p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"image-다운로드\"><a href=\"#image-다운로드\" class=\"headerlink\" title=\"image 다운로드\"></a>image 다운로드</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> pull tesseractshadow/tesseract<span class=\"number\">4</span>re .</span><br></pre></td></tr></table></figure>\n<h2 id=\"샘플-테스트-복사-amp-실행\"><a href=\"#샘플-테스트-복사-amp-실행\" class=\"headerlink\" title=\"샘플 테스트 (복사 &amp; 실행)\"></a>샘플 테스트 (복사 &amp; 실행)</h2><ul>\n<li>test.sh  </li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp .<span class=\"regexp\">/ocr-files/</span>phototest.tif t4re:<span class=\"regexp\">/home/</span>work<span class=\"regexp\">/$TASK_TMP_DIR/</span></span><br><span class=\"line\">docker exec -it t4re <span class=\"regexp\">/bin/</span>bash -c <span class=\"string\">&quot;mkdir -p ./$TASK_TMP_DIR/out/; cd ./$TASK_TMP_DIR/out/; tesseract ../phototest.tif phototest -l eng --psm 1 --oem 3 txt pdf hocr&quot;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"데모-페이지\"><a href=\"#데모-페이지\" class=\"headerlink\" title=\"데모 페이지\"></a>데모 페이지</h1><h2 id=\"pytesseract-설치-및-Flask-웹서버-연동\"><a href=\"#pytesseract-설치-및-Flask-웹서버-연동\" class=\"headerlink\" title=\"pytesseract 설치 및 Flask 웹서버 연동\"></a>pytesseract 설치 및 Flask 웹서버 연동</h2><ul>\n<li>출처: <a href=\"https://realpython.com/setting-up-a-simple-ocr-server/#web-server-time\">https://realpython.com/setting-up-a-simple-ocr-server/#web-server-time</a> </li>\n<li>(source) <a href=\"https://github.com/ybur-yug/python_ocr_tutorial\">https://github.com/ybur-yug/python_ocr_tutorial</a>  <blockquote>\n<p>(tesseract 설치/구동까지는 1번참고, 해당 자료는 tesseract 구레파지토리를 사용하는 옛날버전인듯)<br>pytesseract를 설치하는 부분은 1)번 + 별도 dockerfile로 구성  </p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h2 id=\"도커실행\"><a href=\"#도커실행\" class=\"headerlink\" title=\"도커실행\"></a>도커실행</h2><ul>\n<li>5000: ocr tesseract flask port  <figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> build -t ocr_tesseract_web .</span><br><span class=\"line\"><span class=\"attribute\">docker</span> run --name ocr_tesseract_web --publish <span class=\"number\">5000</span>:<span class=\"number\">5000</span> -it ocr_tesseract_web</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"dockerfile\"><a href=\"#dockerfile\" class=\"headerlink\" title=\"dockerfile\"></a>dockerfile</h2><ul>\n<li>tesseractshadow/tesseract4re + Flask 웹서버 구동을 위해서 일부 오류수정 추가<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># start with a base image</span></span><br><span class=\"line\"><span class=\"comment\"># FROM ubuntu:14.04</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> tesseractshadow/tesseract4re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## install dependencies</span></span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> update</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> install -y liblog4cplus-dev</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> install -y python python-pip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> ls</span><br><span class=\"line\">WORKDIR /</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> ls</span><br><span class=\"line\"><span class=\"builtin-name\">ADD</span> requirements.txt /</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> pip install -r requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pil error : decoder jpeg not available</span></span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> pip uninstall Pillow -y</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> install -y libjpeg-dev</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> pip install Pillow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># update working directories</span></span><br><span class=\"line\"><span class=\"builtin-name\">ADD</span> ./flask_server /flask_server</span><br><span class=\"line\">WORKDIR /flask_server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#EXPOSE 5000</span></span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;app.py&quot;</span>]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"Flask-app\"><a href=\"#Flask-app\" class=\"headerlink\" title=\"Flask app\"></a>Flask app</h2><ul>\n<li>app.py  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/v&#123;&#125;/ocr&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"params\">_VERSION</span>), methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ocr</span>():</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;--call ocr processing --&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.files.get(<span class=\"string\">&quot;image&quot;</span>):</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;--read image --&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># read the image in PIL format</span></span><br><span class=\"line\">            image = request.files[<span class=\"string\">&quot;image&quot;</span>].read()</span><br><span class=\"line\">            image = Image.<span class=\"built_in\">open</span>(io.BytesIO(image))</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;RECV:&#x27;</span>, image.<span class=\"built_in\">format</span>, image.size, image.mode)</span><br><span class=\"line\"></span><br><span class=\"line\">            output = process_image2(image)</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;output:&#x27;</span>, output)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> jsonify(&#123;<span class=\"string\">&quot;output&quot;</span>: output&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> jsonify(&#123;<span class=\"string\">&quot;error&quot;</span>: <span class=\"string\">&quot;only .jpg files, please&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;ocr processing exception:&#x27;</span> , e)</span><br><span class=\"line\">        print(traceback.format_exc())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(</span><br><span class=\"line\">            &#123;<span class=\"string\">&quot;error&quot;</span>: <span class=\"built_in\">str</span>(e)&#125;</span><br><span class=\"line\">        )</span><br></pre></td></tr></table></figure></li>\n<li>javascript  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&#x27;#submit&#x27;</span>).on(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">true$(<span class=\"string\">&quot;#results&quot;</span>).hide()</span><br><span class=\"line\">true<span class=\"keyword\">var</span> data = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\">true</span><br><span class=\"line\">true<span class=\"keyword\">if</span>(is_mobile)&#123;</span><br><span class=\"line\">truetrue<span class=\"keyword\">var</span> cFile = getCaptureImg();</span><br><span class=\"line\">truetruedata.append(<span class=\"string\">&quot;image&quot;</span>, cFile);</span><br><span class=\"line\">true&#125;<span class=\"keyword\">else</span>&#123;\t\t\t</span><br><span class=\"line\">truetrue<span class=\"keyword\">var</span> file = $(<span class=\"string\">&#x27;#file&#x27;</span>)[<span class=\"number\">0</span>].files[<span class=\"number\">0</span>];</span><br><span class=\"line\">truetruedata.append(<span class=\"string\">&quot;image&quot;</span>, file);</span><br><span class=\"line\">true&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">true$.ajax(&#123;</span><br><span class=\"line\">true  type: <span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">true  url: <span class=\"string\">&quot;/v1/ocr&quot;</span>,</span><br><span class=\"line\">true  enctype: <span class=\"string\">&#x27;multipart/form-data&#x27;</span>,</span><br><span class=\"line\">true  data : data,</span><br><span class=\"line\">true  processData: <span class=\"literal\">false</span>,</span><br><span class=\"line\">true  contentType: <span class=\"literal\">false</span>,</span><br><span class=\"line\">true  cache: <span class=\"literal\">false</span>,</span><br><span class=\"line\">true  timeout: <span class=\"number\">600000</span>,</span><br><span class=\"line\">true  success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">truetrue<span class=\"built_in\">console</span>.log(result);</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#post-form&quot;</span>).hide()</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#retry&quot;</span>).show()</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#results&quot;</span>).show()</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#results-data&quot;</span>).html(<span class=\"string\">&quot;&lt;div class=&#x27;well&#x27;&gt;&quot;</span>+result[<span class=\"string\">&quot;output&quot;</span>]+<span class=\"string\">&quot;&lt;/div&gt;&quot;</span>);</span><br><span class=\"line\">true  &#125;,</span><br><span class=\"line\">true  error: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">truetrue<span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">true  &#125;</span><br><span class=\"line\">true&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h1 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source\"></a>Source</h1><ul>\n<li>전체 source: <a href=\"https://github.com/jukyellow/artificial-intelligence-study/tree/master/13_ImageProcessing/OCR(Tesseract)/pytessract_dockerfike\">https://github.com/jukyellow/artificial-intelligence-study/tree/master/13_ImageProcessing/OCR(Tesseract)/pytessract_dockerfike</a>  </li>\n<li>참고: PC 크롬환경에서 테스트완료, 모바일 환경은 테스트 못함(소스는 모바일(아이폰) 환경도 가능한 모듈로 구성)  </li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<ul>\n<li>현재 인터넷에 공개되 있는 ‘Tesseract 데모 페이지 구현 블로그’는 구 레파지토리(google) 버전이라 실행이 불가능하다. 하여 최신 레파지토리(github) 기준으로 동작가능한 데모 페이지로 오류를 수정하여 내용을 공개한다.  </li>\n<li>또한, 기존 블로그는 모바일 환경을 지원하지 않지만, 모바일에서 카메라 캡처-&gt;Text추출 가능한 소스로 업데이트 예정이다.  </li>\n</ul>\n<h1 id=\"실행화면\"><a href=\"#실행화면\" class=\"headerlink\" title=\"실행화면\"></a>실행화면</h1><ul>\n<li>초기화면<br><img src=\"./images/01_%EC%B4%88%EA%B8%B0%ED%99%94%EB%A9%B4.png\">  </li>\n<li>Text 추출 결과<br><img src=\"./images/02_Text%EC%B6%94%EC%B6%9C.png\">  </li>\n</ul>\n<h1 id=\"tesseract-다운로드\"><a href=\"#tesseract-다운로드\" class=\"headerlink\" title=\"tesseract 다운로드\"></a>tesseract 다운로드</h1><h2 id=\"도커-이미지-다운로드\"><a href=\"#도커-이미지-다운로드\" class=\"headerlink\" title=\"도커 이미지 다운로드\"></a>도커 이미지 다운로드</h2><ul>\n<li><a href=\"https://tesseract-ocr.github.io/\">https://tesseract-ocr.github.io/</a>  </li>\n<li><a href=\"https://tesseract-ocr.github.io/tessdoc/\">https://tesseract-ocr.github.io/tessdoc/</a>  </li>\n<li><a href=\"https://tesseract-ocr.github.io/tessdoc/4.0-Docker-Containers.html\">https://tesseract-ocr.github.io/tessdoc/4.0-Docker-Containers.html</a>  <blockquote>\n<p>Tesseract 4 OCR Runtime Environment - Docker Container<br>(레파지토리) <a href=\"https://github.com/tesseract-shadow/tesseract-ocr-re\">https://github.com/tesseract-shadow/tesseract-ocr-re</a>  </p>\n</blockquote>\n</li>\n</ul>\n<h2 id=\"image-다운로드\"><a href=\"#image-다운로드\" class=\"headerlink\" title=\"image 다운로드\"></a>image 다운로드</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> pull tesseractshadow/tesseract<span class=\"number\">4</span>re .</span><br></pre></td></tr></table></figure>\n<h2 id=\"샘플-테스트-복사-amp-실행\"><a href=\"#샘플-테스트-복사-amp-실행\" class=\"headerlink\" title=\"샘플 테스트 (복사 &amp; 실행)\"></a>샘플 테스트 (복사 &amp; 실행)</h2><ul>\n<li>test.sh  </li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker cp .<span class=\"regexp\">/ocr-files/</span>phototest.tif t4re:<span class=\"regexp\">/home/</span>work<span class=\"regexp\">/$TASK_TMP_DIR/</span></span><br><span class=\"line\">docker exec -it t4re <span class=\"regexp\">/bin/</span>bash -c <span class=\"string\">&quot;mkdir -p ./$TASK_TMP_DIR/out/; cd ./$TASK_TMP_DIR/out/; tesseract ../phototest.tif phototest -l eng --psm 1 --oem 3 txt pdf hocr&quot;</span></span><br></pre></td></tr></table></figure>\n<hr>\n<h1 id=\"데모-페이지\"><a href=\"#데모-페이지\" class=\"headerlink\" title=\"데모 페이지\"></a>데모 페이지</h1><h2 id=\"pytesseract-설치-및-Flask-웹서버-연동\"><a href=\"#pytesseract-설치-및-Flask-웹서버-연동\" class=\"headerlink\" title=\"pytesseract 설치 및 Flask 웹서버 연동\"></a>pytesseract 설치 및 Flask 웹서버 연동</h2><ul>\n<li>출처: <a href=\"https://realpython.com/setting-up-a-simple-ocr-server/#web-server-time\">https://realpython.com/setting-up-a-simple-ocr-server/#web-server-time</a> </li>\n<li>(source) <a href=\"https://github.com/ybur-yug/python_ocr_tutorial\">https://github.com/ybur-yug/python_ocr_tutorial</a>  <blockquote>\n<p>(tesseract 설치/구동까지는 1번참고, 해당 자료는 tesseract 구레파지토리를 사용하는 옛날버전인듯)<br>pytesseract를 설치하는 부분은 1)번 + 별도 dockerfile로 구성  </p>\n</blockquote>\n</li>\n</ul>\n<hr>\n<h2 id=\"도커실행\"><a href=\"#도커실행\" class=\"headerlink\" title=\"도커실행\"></a>도커실행</h2><ul>\n<li>5000: ocr tesseract flask port  <figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">docker</span> build -t ocr_tesseract_web .</span><br><span class=\"line\"><span class=\"attribute\">docker</span> run --name ocr_tesseract_web --publish <span class=\"number\">5000</span>:<span class=\"number\">5000</span> -it ocr_tesseract_web</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"dockerfile\"><a href=\"#dockerfile\" class=\"headerlink\" title=\"dockerfile\"></a>dockerfile</h2><ul>\n<li>tesseractshadow/tesseract4re + Flask 웹서버 구동을 위해서 일부 오류수정 추가<figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># start with a base image</span></span><br><span class=\"line\"><span class=\"comment\"># FROM ubuntu:14.04</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> tesseractshadow/tesseract4re</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">## install dependencies</span></span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> update</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> install -y liblog4cplus-dev</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> install -y python python-pip</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> ls</span><br><span class=\"line\">WORKDIR /</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> ls</span><br><span class=\"line\"><span class=\"builtin-name\">ADD</span> requirements.txt /</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> pip install -r requirements.txt</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># pil error : decoder jpeg not available</span></span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> pip uninstall Pillow -y</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> apt-<span class=\"builtin-name\">get</span> install -y libjpeg-dev</span><br><span class=\"line\"><span class=\"builtin-name\">RUN</span> pip install Pillow</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># update working directories</span></span><br><span class=\"line\"><span class=\"builtin-name\">ADD</span> ./flask_server /flask_server</span><br><span class=\"line\">WORKDIR /flask_server</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#EXPOSE 5000</span></span><br><span class=\"line\">CMD [<span class=\"string\">&quot;python&quot;</span>, <span class=\"string\">&quot;app.py&quot;</span>]</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h2 id=\"Flask-app\"><a href=\"#Flask-app\" class=\"headerlink\" title=\"Flask app\"></a>Flask app</h2><ul>\n<li>app.py  <figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">main</span>():</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/v&#123;&#125;/ocr&#x27;</span>.<span class=\"built_in\">format</span>(<span class=\"params\">_VERSION</span>), methods=[<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">ocr</span>():</span></span><br><span class=\"line\">    print(<span class=\"string\">&#x27;--call ocr processing --&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        <span class=\"keyword\">if</span> request.files.get(<span class=\"string\">&quot;image&quot;</span>):</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;--read image --&#x27;</span>)</span><br><span class=\"line\">            <span class=\"comment\"># read the image in PIL format</span></span><br><span class=\"line\">            image = request.files[<span class=\"string\">&quot;image&quot;</span>].read()</span><br><span class=\"line\">            image = Image.<span class=\"built_in\">open</span>(io.BytesIO(image))</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;RECV:&#x27;</span>, image.<span class=\"built_in\">format</span>, image.size, image.mode)</span><br><span class=\"line\"></span><br><span class=\"line\">            output = process_image2(image)</span><br><span class=\"line\">            print(<span class=\"string\">&#x27;output:&#x27;</span>, output)</span><br><span class=\"line\">            <span class=\"keyword\">return</span> jsonify(&#123;<span class=\"string\">&quot;output&quot;</span>: output&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> jsonify(&#123;<span class=\"string\">&quot;error&quot;</span>: <span class=\"string\">&quot;only .jpg files, please&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        print(<span class=\"string\">&#x27;ocr processing exception:&#x27;</span> , e)</span><br><span class=\"line\">        print(traceback.format_exc())</span><br><span class=\"line\">        <span class=\"keyword\">return</span> jsonify(</span><br><span class=\"line\">            &#123;<span class=\"string\">&quot;error&quot;</span>: <span class=\"built_in\">str</span>(e)&#125;</span><br><span class=\"line\">        )</span><br></pre></td></tr></table></figure></li>\n<li>javascript  <figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$(<span class=\"string\">&#x27;#submit&#x27;</span>).on(<span class=\"string\">&#x27;click&#x27;</span>, <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">event</span>)</span>&#123;</span><br><span class=\"line\">true$(<span class=\"string\">&quot;#results&quot;</span>).hide()</span><br><span class=\"line\">true<span class=\"keyword\">var</span> data = <span class=\"keyword\">new</span> FormData();</span><br><span class=\"line\">true</span><br><span class=\"line\">true<span class=\"keyword\">if</span>(is_mobile)&#123;</span><br><span class=\"line\">truetrue<span class=\"keyword\">var</span> cFile = getCaptureImg();</span><br><span class=\"line\">truetruedata.append(<span class=\"string\">&quot;image&quot;</span>, cFile);</span><br><span class=\"line\">true&#125;<span class=\"keyword\">else</span>&#123;\t\t\t</span><br><span class=\"line\">truetrue<span class=\"keyword\">var</span> file = $(<span class=\"string\">&#x27;#file&#x27;</span>)[<span class=\"number\">0</span>].files[<span class=\"number\">0</span>];</span><br><span class=\"line\">truetruedata.append(<span class=\"string\">&quot;image&quot;</span>, file);</span><br><span class=\"line\">true&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">true$.ajax(&#123;</span><br><span class=\"line\">true  type: <span class=\"string\">&quot;POST&quot;</span>,</span><br><span class=\"line\">true  url: <span class=\"string\">&quot;/v1/ocr&quot;</span>,</span><br><span class=\"line\">true  enctype: <span class=\"string\">&#x27;multipart/form-data&#x27;</span>,</span><br><span class=\"line\">true  data : data,</span><br><span class=\"line\">true  processData: <span class=\"literal\">false</span>,</span><br><span class=\"line\">true  contentType: <span class=\"literal\">false</span>,</span><br><span class=\"line\">true  cache: <span class=\"literal\">false</span>,</span><br><span class=\"line\">true  timeout: <span class=\"number\">600000</span>,</span><br><span class=\"line\">true  success: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">result</span>) </span>&#123;</span><br><span class=\"line\">truetrue<span class=\"built_in\">console</span>.log(result);</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#post-form&quot;</span>).hide()</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#retry&quot;</span>).show()</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#results&quot;</span>).show()</span><br><span class=\"line\">truetrue$(<span class=\"string\">&quot;#results-data&quot;</span>).html(<span class=\"string\">&quot;&lt;div class=&#x27;well&#x27;&gt;&quot;</span>+result[<span class=\"string\">&quot;output&quot;</span>]+<span class=\"string\">&quot;&lt;/div&gt;&quot;</span>);</span><br><span class=\"line\">true  &#125;,</span><br><span class=\"line\">true  error: <span class=\"function\"><span class=\"keyword\">function</span>(<span class=\"params\">error</span>) </span>&#123;</span><br><span class=\"line\">truetrue<span class=\"built_in\">console</span>.log(error);</span><br><span class=\"line\">true  &#125;</span><br><span class=\"line\">true&#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n</li>\n</ul>\n<hr>\n<h1 id=\"Source\"><a href=\"#Source\" class=\"headerlink\" title=\"Source\"></a>Source</h1><ul>\n<li>전체 source: <a href=\"https://github.com/jukyellow/artificial-intelligence-study/tree/master/13_ImageProcessing/OCR(Tesseract)/pytessract_dockerfike\">https://github.com/jukyellow/artificial-intelligence-study/tree/master/13_ImageProcessing/OCR(Tesseract)/pytessract_dockerfike</a>  </li>\n<li>참고: PC 크롬환경에서 테스트완료, 모바일 환경은 테스트 못함(소스는 모바일(아이폰) 환경도 가능한 모듈로 구성)  </li>\n</ul>\n"},{"title":"Docker-Install-Root-Dir-Modify","subtitle":"CentOS 도커 설치(재설치)와 Root Dir 변경","date":"2021-02-22T20:30:53.000Z","catalog":true,"header-img":"tech-5090539_1920.jpg","_content":"\n# 설치환경\n- OS: CentOS 7.2\n- Docker: Docker Comunity 20.0.3?\n\n# Docker (재)설치\n- 도커가 이미 설치된 경우, 관련 파일/패키지를 삭제하고 재설치를 수행해야 한다.  \n\n## 컨테이너 종료, 이미지 삭제\n```\ndocker stop $(docker ps -q)\ndocker rm $(docker ps -a -q)\ndocker rmi $(docker images -q)\n```\n\n## 서비스 중지\n```\nsystemctl stop docker.service\nsystemctl stop containerd.service\n```\n\n## 설치된 패키지 확인/삭제\n```\nyum list installed | grep docker\nyum erase containerd.io.x86_6\nyum erase docker-ce.x86_64\nyum erase docker-ce-cli.x86_64\n```\n\n## 디렉토리/파일 삭제\n```\nrm -rf  /var/lib/docker\ncd /var/run\nrm docker.sock docker.pid\n```\n\n## 도커 재설치/확인\n```\nyum install -y docker-ce\nyum list installed | grep docker\n```\n\n## 도커 enable/start\n```\nsystemctl enable docker.service\nsystemctl enable containerd.service\nsystemctl start docker.service\nsystemctl status docker.service\nservice status docker\n```\n\n## 참고\n- http://cloudrain21.com/remove-docker-forcely-and-reinstall   \n\n---\n\n# Root Dir 변경\n- Docker 설치를 Root 계정으로 하는경우, Docker image 저장경로가 /var/lib/docker에 잡힘에 따라 Root 공간을 점유하게 된다.  \n- Root 공간은 OS 영역이므로 스토리지 관리에 문제(공간부족 등)가 되고, 보통은 별도의 디스크를 마운트하여 할당하는 것이 좋다.  \n\n## 설치 경로 확인: \n```\ncd /var/lib/docker\nls -F\n```\n\n## 현재 dir-root 확인\n```\ndocker info | grep \"Docker Root Dir\"\ndocker volume inspect my-vol\nsystemctl status docker.service\n```\n\n## 스크립트 파일변경\n```\nvi /usr/lib/systemd/system/docker.service\n( - ExecStart로 시작하는 라인 끝에 --data-root=/docker/root/dir 추가)\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root=/home/docker\n```\n\n## 데이터 복사/재시작  \n- Docker Root 디렉토리의 데이타  복사 또는 이동 및 Docker 서비스 재시작  \n\n```\nsystemctl daemon-reload \nsystemctl stop docker\nmkdir /home/docker2\ncp -rp /var/lib/docker /home/    => 파일 복사\nsystemctl start docker\n```\n\n## Root 변경확인\n```\ndocker info | grep \"Docker Root Dir\"\n(Docker Root Dir: /home/docker    => 변경된 root dir )\ndocker volume inspect my-vol\n```\n\n## 실행권한 추가  \n- root권한으로 설치된경우, user권한에 실행권한 추가  \n- 참고: https://github.com/occidere/TIL/issues/116  \n\n```\nsudo chmod 666 /var/run/docker.sock\n```\n\n## 참고\n- https://fliedcat.tistory.com/113  \n\n---","source":"_posts/docker-install-root-dir-modify.md","raw":"---\ntitle: docker-install-root-dir-modify\nsubtitle: CentOS 도커 설치(재설치)와 Root Dir 변경\ndate: 2021-02-23 05:30:53\ncatalog: true\nheader-img: \"tech-5090539_1920.jpg\"\ntags: [\"docker\", \"docker install\", \"Root Dir\", \"Centos\"]\ncategories:\n- Docker\n---\n\n# 설치환경\n- OS: CentOS 7.2\n- Docker: Docker Comunity 20.0.3?\n\n# Docker (재)설치\n- 도커가 이미 설치된 경우, 관련 파일/패키지를 삭제하고 재설치를 수행해야 한다.  \n\n## 컨테이너 종료, 이미지 삭제\n```\ndocker stop $(docker ps -q)\ndocker rm $(docker ps -a -q)\ndocker rmi $(docker images -q)\n```\n\n## 서비스 중지\n```\nsystemctl stop docker.service\nsystemctl stop containerd.service\n```\n\n## 설치된 패키지 확인/삭제\n```\nyum list installed | grep docker\nyum erase containerd.io.x86_6\nyum erase docker-ce.x86_64\nyum erase docker-ce-cli.x86_64\n```\n\n## 디렉토리/파일 삭제\n```\nrm -rf  /var/lib/docker\ncd /var/run\nrm docker.sock docker.pid\n```\n\n## 도커 재설치/확인\n```\nyum install -y docker-ce\nyum list installed | grep docker\n```\n\n## 도커 enable/start\n```\nsystemctl enable docker.service\nsystemctl enable containerd.service\nsystemctl start docker.service\nsystemctl status docker.service\nservice status docker\n```\n\n## 참고\n- http://cloudrain21.com/remove-docker-forcely-and-reinstall   \n\n---\n\n# Root Dir 변경\n- Docker 설치를 Root 계정으로 하는경우, Docker image 저장경로가 /var/lib/docker에 잡힘에 따라 Root 공간을 점유하게 된다.  \n- Root 공간은 OS 영역이므로 스토리지 관리에 문제(공간부족 등)가 되고, 보통은 별도의 디스크를 마운트하여 할당하는 것이 좋다.  \n\n## 설치 경로 확인: \n```\ncd /var/lib/docker\nls -F\n```\n\n## 현재 dir-root 확인\n```\ndocker info | grep \"Docker Root Dir\"\ndocker volume inspect my-vol\nsystemctl status docker.service\n```\n\n## 스크립트 파일변경\n```\nvi /usr/lib/systemd/system/docker.service\n( - ExecStart로 시작하는 라인 끝에 --data-root=/docker/root/dir 추가)\nExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock --data-root=/home/docker\n```\n\n## 데이터 복사/재시작  \n- Docker Root 디렉토리의 데이타  복사 또는 이동 및 Docker 서비스 재시작  \n\n```\nsystemctl daemon-reload \nsystemctl stop docker\nmkdir /home/docker2\ncp -rp /var/lib/docker /home/    => 파일 복사\nsystemctl start docker\n```\n\n## Root 변경확인\n```\ndocker info | grep \"Docker Root Dir\"\n(Docker Root Dir: /home/docker    => 변경된 root dir )\ndocker volume inspect my-vol\n```\n\n## 실행권한 추가  \n- root권한으로 설치된경우, user권한에 실행권한 추가  \n- 참고: https://github.com/occidere/TIL/issues/116  \n\n```\nsudo chmod 666 /var/run/docker.sock\n```\n\n## 참고\n- https://fliedcat.tistory.com/113  \n\n---","slug":"docker-install-root-dir-modify","published":1,"updated":"2021-02-24T21:51:48.380Z","_id":"cklh2210e0000ccspana11gyd","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"설치환경\"><a href=\"#설치환경\" class=\"headerlink\" title=\"설치환경\"></a>설치환경</h1><ul>\n<li>OS: CentOS 7.2</li>\n<li>Docker: Docker Comunity 20.0.3?</li>\n</ul>\n<h1 id=\"Docker-재-설치\"><a href=\"#Docker-재-설치\" class=\"headerlink\" title=\"Docker (재)설치\"></a>Docker (재)설치</h1><ul>\n<li>도커가 이미 설치된 경우, 관련 파일/패키지를 삭제하고 재설치를 수행해야 한다.  </li>\n</ul>\n<h2 id=\"컨테이너-종료-이미지-삭제\"><a href=\"#컨테이너-종료-이미지-삭제\" class=\"headerlink\" title=\"컨테이너 종료, 이미지 삭제\"></a>컨테이너 종료, 이미지 삭제</h2><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop <span class=\"constructor\">$(<span class=\"params\">docker</span> <span class=\"params\">ps</span> -<span class=\"params\">q</span>)</span></span><br><span class=\"line\">docker rm <span class=\"constructor\">$(<span class=\"params\">docker</span> <span class=\"params\">ps</span> -<span class=\"params\">a</span> -<span class=\"params\">q</span>)</span></span><br><span class=\"line\">docker rmi <span class=\"constructor\">$(<span class=\"params\">docker</span> <span class=\"params\">images</span> -<span class=\"params\">q</span>)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"서비스-중지\"><a href=\"#서비스-중지\" class=\"headerlink\" title=\"서비스 중지\"></a>서비스 중지</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">stop</span> docker.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">stop</span> containerd.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"설치된-패키지-확인-삭제\"><a href=\"#설치된-패키지-확인-삭제\" class=\"headerlink\" title=\"설치된 패키지 확인/삭제\"></a>설치된 패키지 확인/삭제</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">yum</span> list installed | grep docker</span><br><span class=\"line\"><span class=\"attribute\">yum</span> erase containerd.io.x<span class=\"number\">86</span>_<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">yum</span> erase docker-ce.x<span class=\"number\">86</span>_<span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"attribute\">yum</span> erase docker-ce-cli.x<span class=\"number\">86</span>_<span class=\"number\">64</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"디렉토리-파일-삭제\"><a href=\"#디렉토리-파일-삭제\" class=\"headerlink\" title=\"디렉토리/파일 삭제\"></a>디렉토리/파일 삭제</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">rm</span> -rf  /<span class=\"keyword\">var</span>/lib/docker</span><br><span class=\"line\"><span class=\"keyword\">cd</span> /<span class=\"keyword\">var</span>/<span class=\"keyword\">run</span></span><br><span class=\"line\"><span class=\"keyword\">rm</span> docker.sock docker.pid</span><br></pre></td></tr></table></figure>\n<h2 id=\"도커-재설치-확인\"><a href=\"#도커-재설치-확인\" class=\"headerlink\" title=\"도커 재설치/확인\"></a>도커 재설치/확인</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install </span>-y docker-ce</span><br><span class=\"line\">yum list <span class=\"keyword\">installed </span><span class=\"title\">| grep docker</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"도커-enable-start\"><a href=\"#도커-enable-start\" class=\"headerlink\" title=\"도커 enable/start\"></a>도커 enable/start</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> docker.service</span><br><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> containerd.service</span><br><span class=\"line\">systemctl start docker.service</span><br><span class=\"line\">systemctl status docker.service</span><br><span class=\"line\">service status docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"참고\"><a href=\"#참고\" class=\"headerlink\" title=\"참고\"></a>참고</h2><ul>\n<li><a href=\"http://cloudrain21.com/remove-docker-forcely-and-reinstall\">http://cloudrain21.com/remove-docker-forcely-and-reinstall</a>   </li>\n</ul>\n<hr>\n<h1 id=\"Root-Dir-변경\"><a href=\"#Root-Dir-변경\" class=\"headerlink\" title=\"Root Dir 변경\"></a>Root Dir 변경</h1><ul>\n<li>Docker 설치를 Root 계정으로 하는경우, Docker image 저장경로가 /var/lib/docker에 잡힘에 따라 Root 공간을 점유하게 된다.  </li>\n<li>Root 공간은 OS 영역이므로 스토리지 관리에 문제(공간부족 등)가 되고, 보통은 별도의 디스크를 마운트하여 할당하는 것이 좋다.  </li>\n</ul>\n<h2 id=\"설치-경로-확인\"><a href=\"#설치-경로-확인\" class=\"headerlink\" title=\"설치 경로 확인:\"></a>설치 경로 확인:</h2><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/var/lib/docker</span></span><br><span class=\"line\"><span class=\"keyword\">ls</span> -F</span><br></pre></td></tr></table></figure>\n<h2 id=\"현재-dir-root-확인\"><a href=\"#현재-dir-root-확인\" class=\"headerlink\" title=\"현재 dir-root 확인\"></a>현재 dir-root 확인</h2><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep <span class=\"string\">&quot;Docker Root Dir&quot;</span></span><br><span class=\"line\">docker <span class=\"keyword\">volume</span><span class=\"bash\"> inspect my-vol</span></span><br><span class=\"line\">systemctl status docker.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"스크립트-파일변경\"><a href=\"#스크립트-파일변경\" class=\"headerlink\" title=\"스크립트 파일변경\"></a>스크립트 파일변경</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi <span class=\"regexp\">/usr/</span>lib<span class=\"regexp\">/systemd/</span>system/docker.service</span><br><span class=\"line\">( - ExecStart로 시작하는 라인 끝에 --data-root=<span class=\"regexp\">/docker/</span>root/dir 추가)</span><br><span class=\"line\">ExecStart=<span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/dockerd -H fd:/</span><span class=\"regexp\">/ --containerd=/</span>run<span class=\"regexp\">/containerd/</span>containerd.sock --data-root=<span class=\"regexp\">/home/</span>docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"데이터-복사-재시작\"><a href=\"#데이터-복사-재시작\" class=\"headerlink\" title=\"데이터 복사/재시작\"></a>데이터 복사/재시작</h2><ul>\n<li>Docker Root 디렉토리의 데이타  복사 또는 이동 및 Docker 서비스 재시작  </li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload </span><br><span class=\"line\">systemctl stop docker</span><br><span class=\"line\">mkdir <span class=\"regexp\">/home/</span>docker2</span><br><span class=\"line\">cp -rp <span class=\"regexp\">/var/</span>lib<span class=\"regexp\">/docker /</span>home/    =&gt; 파일 복사</span><br><span class=\"line\">systemctl start docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"Root-변경확인\"><a href=\"#Root-변경확인\" class=\"headerlink\" title=\"Root 변경확인\"></a>Root 변경확인</h2><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep <span class=\"string\">&quot;Docker Root Dir&quot;</span></span><br><span class=\"line\">(Docker Root Dir: <span class=\"regexp\">/home/</span><span class=\"function\"><span class=\"params\">docker</span>    =&gt;</span> 변경된 root dir )</span><br><span class=\"line\">docker volume inspect my-vol</span><br></pre></td></tr></table></figure>\n<h2 id=\"실행권한-추가\"><a href=\"#실행권한-추가\" class=\"headerlink\" title=\"실행권한 추가\"></a>실행권한 추가</h2><ul>\n<li>root권한으로 설치된경우, user권한에 실행권한 추가  </li>\n<li>참고: <a href=\"https://github.com/occidere/TIL/issues/116\">https://github.com/occidere/TIL/issues/116</a>  </li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod <span class=\"number\">666</span> <span class=\"regexp\">/var/</span>run/docker.sock</span><br></pre></td></tr></table></figure>\n<h2 id=\"참고-1\"><a href=\"#참고-1\" class=\"headerlink\" title=\"참고\"></a>참고</h2><ul>\n<li><a href=\"https://fliedcat.tistory.com/113\">https://fliedcat.tistory.com/113</a>  </li>\n</ul>\n<hr>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"설치환경\"><a href=\"#설치환경\" class=\"headerlink\" title=\"설치환경\"></a>설치환경</h1><ul>\n<li>OS: CentOS 7.2</li>\n<li>Docker: Docker Comunity 20.0.3?</li>\n</ul>\n<h1 id=\"Docker-재-설치\"><a href=\"#Docker-재-설치\" class=\"headerlink\" title=\"Docker (재)설치\"></a>Docker (재)설치</h1><ul>\n<li>도커가 이미 설치된 경우, 관련 파일/패키지를 삭제하고 재설치를 수행해야 한다.  </li>\n</ul>\n<h2 id=\"컨테이너-종료-이미지-삭제\"><a href=\"#컨테이너-종료-이미지-삭제\" class=\"headerlink\" title=\"컨테이너 종료, 이미지 삭제\"></a>컨테이너 종료, 이미지 삭제</h2><figure class=\"highlight reasonml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker stop <span class=\"constructor\">$(<span class=\"params\">docker</span> <span class=\"params\">ps</span> -<span class=\"params\">q</span>)</span></span><br><span class=\"line\">docker rm <span class=\"constructor\">$(<span class=\"params\">docker</span> <span class=\"params\">ps</span> -<span class=\"params\">a</span> -<span class=\"params\">q</span>)</span></span><br><span class=\"line\">docker rmi <span class=\"constructor\">$(<span class=\"params\">docker</span> <span class=\"params\">images</span> -<span class=\"params\">q</span>)</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"서비스-중지\"><a href=\"#서비스-중지\" class=\"headerlink\" title=\"서비스 중지\"></a>서비스 중지</h2><figure class=\"highlight arduino\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"built_in\">stop</span> docker.service</span><br><span class=\"line\">systemctl <span class=\"built_in\">stop</span> containerd.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"설치된-패키지-확인-삭제\"><a href=\"#설치된-패키지-확인-삭제\" class=\"headerlink\" title=\"설치된 패키지 확인/삭제\"></a>설치된 패키지 확인/삭제</h2><figure class=\"highlight apache\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">yum</span> list installed | grep docker</span><br><span class=\"line\"><span class=\"attribute\">yum</span> erase containerd.io.x<span class=\"number\">86</span>_<span class=\"number\">6</span></span><br><span class=\"line\"><span class=\"attribute\">yum</span> erase docker-ce.x<span class=\"number\">86</span>_<span class=\"number\">64</span></span><br><span class=\"line\"><span class=\"attribute\">yum</span> erase docker-ce-cli.x<span class=\"number\">86</span>_<span class=\"number\">64</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"디렉토리-파일-삭제\"><a href=\"#디렉토리-파일-삭제\" class=\"headerlink\" title=\"디렉토리/파일 삭제\"></a>디렉토리/파일 삭제</h2><figure class=\"highlight stata\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">rm</span> -rf  /<span class=\"keyword\">var</span>/lib/docker</span><br><span class=\"line\"><span class=\"keyword\">cd</span> /<span class=\"keyword\">var</span>/<span class=\"keyword\">run</span></span><br><span class=\"line\"><span class=\"keyword\">rm</span> docker.sock docker.pid</span><br></pre></td></tr></table></figure>\n<h2 id=\"도커-재설치-확인\"><a href=\"#도커-재설치-확인\" class=\"headerlink\" title=\"도커 재설치/확인\"></a>도커 재설치/확인</h2><figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum <span class=\"keyword\">install </span>-y docker-ce</span><br><span class=\"line\">yum list <span class=\"keyword\">installed </span><span class=\"title\">| grep docker</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"도커-enable-start\"><a href=\"#도커-enable-start\" class=\"headerlink\" title=\"도커 enable/start\"></a>도커 enable/start</h2><figure class=\"highlight routeros\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> docker.service</span><br><span class=\"line\">systemctl <span class=\"builtin-name\">enable</span> containerd.service</span><br><span class=\"line\">systemctl start docker.service</span><br><span class=\"line\">systemctl status docker.service</span><br><span class=\"line\">service status docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"참고\"><a href=\"#참고\" class=\"headerlink\" title=\"참고\"></a>참고</h2><ul>\n<li><a href=\"http://cloudrain21.com/remove-docker-forcely-and-reinstall\">http://cloudrain21.com/remove-docker-forcely-and-reinstall</a>   </li>\n</ul>\n<hr>\n<h1 id=\"Root-Dir-변경\"><a href=\"#Root-Dir-변경\" class=\"headerlink\" title=\"Root Dir 변경\"></a>Root Dir 변경</h1><ul>\n<li>Docker 설치를 Root 계정으로 하는경우, Docker image 저장경로가 /var/lib/docker에 잡힘에 따라 Root 공간을 점유하게 된다.  </li>\n<li>Root 공간은 OS 영역이므로 스토리지 관리에 문제(공간부족 등)가 되고, 보통은 별도의 디스크를 마운트하여 할당하는 것이 좋다.  </li>\n</ul>\n<h2 id=\"설치-경로-확인\"><a href=\"#설치-경로-확인\" class=\"headerlink\" title=\"설치 경로 확인:\"></a>설치 경로 확인:</h2><figure class=\"highlight jboss-cli\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cd</span> <span class=\"string\">/var/lib/docker</span></span><br><span class=\"line\"><span class=\"keyword\">ls</span> -F</span><br></pre></td></tr></table></figure>\n<h2 id=\"현재-dir-root-확인\"><a href=\"#현재-dir-root-확인\" class=\"headerlink\" title=\"현재 dir-root 확인\"></a>현재 dir-root 확인</h2><figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep <span class=\"string\">&quot;Docker Root Dir&quot;</span></span><br><span class=\"line\">docker <span class=\"keyword\">volume</span><span class=\"bash\"> inspect my-vol</span></span><br><span class=\"line\">systemctl status docker.service</span><br></pre></td></tr></table></figure>\n<h2 id=\"스크립트-파일변경\"><a href=\"#스크립트-파일변경\" class=\"headerlink\" title=\"스크립트 파일변경\"></a>스크립트 파일변경</h2><figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi <span class=\"regexp\">/usr/</span>lib<span class=\"regexp\">/systemd/</span>system/docker.service</span><br><span class=\"line\">( - ExecStart로 시작하는 라인 끝에 --data-root=<span class=\"regexp\">/docker/</span>root/dir 추가)</span><br><span class=\"line\">ExecStart=<span class=\"regexp\">/usr/</span>bin<span class=\"regexp\">/dockerd -H fd:/</span><span class=\"regexp\">/ --containerd=/</span>run<span class=\"regexp\">/containerd/</span>containerd.sock --data-root=<span class=\"regexp\">/home/</span>docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"데이터-복사-재시작\"><a href=\"#데이터-복사-재시작\" class=\"headerlink\" title=\"데이터 복사/재시작\"></a>데이터 복사/재시작</h2><ul>\n<li>Docker Root 디렉토리의 데이타  복사 또는 이동 및 Docker 서비스 재시작  </li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl daemon-reload </span><br><span class=\"line\">systemctl stop docker</span><br><span class=\"line\">mkdir <span class=\"regexp\">/home/</span>docker2</span><br><span class=\"line\">cp -rp <span class=\"regexp\">/var/</span>lib<span class=\"regexp\">/docker /</span>home/    =&gt; 파일 복사</span><br><span class=\"line\">systemctl start docker</span><br></pre></td></tr></table></figure>\n<h2 id=\"Root-변경확인\"><a href=\"#Root-변경확인\" class=\"headerlink\" title=\"Root 변경확인\"></a>Root 변경확인</h2><figure class=\"highlight arcade\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker info | grep <span class=\"string\">&quot;Docker Root Dir&quot;</span></span><br><span class=\"line\">(Docker Root Dir: <span class=\"regexp\">/home/</span><span class=\"function\"><span class=\"params\">docker</span>    =&gt;</span> 변경된 root dir )</span><br><span class=\"line\">docker volume inspect my-vol</span><br></pre></td></tr></table></figure>\n<h2 id=\"실행권한-추가\"><a href=\"#실행권한-추가\" class=\"headerlink\" title=\"실행권한 추가\"></a>실행권한 추가</h2><ul>\n<li>root권한으로 설치된경우, user권한에 실행권한 추가  </li>\n<li>참고: <a href=\"https://github.com/occidere/TIL/issues/116\">https://github.com/occidere/TIL/issues/116</a>  </li>\n</ul>\n<figure class=\"highlight awk\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo chmod <span class=\"number\">666</span> <span class=\"regexp\">/var/</span>run/docker.sock</span><br></pre></td></tr></table></figure>\n<h2 id=\"참고-1\"><a href=\"#참고-1\" class=\"headerlink\" title=\"참고\"></a>참고</h2><ul>\n<li><a href=\"https://fliedcat.tistory.com/113\">https://fliedcat.tistory.com/113</a>  </li>\n</ul>\n<hr>\n"},{"title":"Hexo Bug Patch and Tuning","subtitle":"헥소 버그수정 및 기능개선","date":"2021-02-24T22:05:40.000Z","header-img":"tag-bg.png","catalog":true,"_content":"\n# 개요\n- Hexo가 blog 설치/구동에 편하긴한데, 테마를 품질에 따라 튜닝요소가 많이 필요한듯 하다. beantech 테마를 사용중인데, 여기저기 문제가 많아서 소소히 고쳐가며 쓰고 있다.  \n\n--- \n\n# 발견된 문제점들(미해결 사항)\n1. google analytics 연동오류 : google의 애널리스틱 -> 데이터 스트림방식으로 설정이 바뀐것에 대한 수정작업 필요한듯   \n2. 방문자 count 문제 : tistory처럼 쉽게 설정할수 없음. 방문자 count 서비스를 찾아서 붙여야하는데, 잘 정리된 레퍼런스를 찾을수 없음  \n> 일단은, github hits로 사용중이지만, Total/today/yesterday 형태가 바꿔야함  \n3. SNS settings에 medium 연결기능은 없음 : 이것도 기존꺼 참고해서 코딩가능한 부분인가?  \n\n---\n\n# Blog 설정들\n\n1. 댓글기능 추가: Disqus(https://disqus.com/) 가입 및 Hexo 설정(_config.yml)\n```\n# Disqus settings\ndisqus_username: yelran-s-tech-blog #jukyellow.github.io\n```\n2. 방문자 count 추가: github hits로 갈음  \n3. 구글 검색엔진 노출 설정: sitemap.xml 추가, robots.txt 추가 등  \n(참고 : https://ivelee.github.io/github/how-to-expose-github-blog-google-search/)  \n\n---\n\n# 해결된 이슈\n\n\n## deploy 0 byte  \n- 문제: hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생    \n- 해결: hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  \n\n\n## side-bar widgets\n- 문제: side-bar widgets 목록 설정불가  \n- 해결:\n- 1. forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  \n- 2. theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  \n\n\n## achive 배경화면  \n- 문제: achive, category 페이지 배경화면 누락  \n- 해결: theme/beantech/layout/_partial/header.ejs 파일 수정 (is_category, is_archive 추가)  \n\n```\nheader.intro-header{\n\t<% if (is_home() || is_category() || is_archive() ) { %>\n\t\tbackground-image: url('<%= config.root + config[\"header-img\"] %>') \n\t\t/*config*/\n\t<%} else if (is_post()){%>\n\t\tbackground-image: url('<%= page[\"header-img\"] %>')\n\t\t/*post*/\n\t<%} else {%>\n\t\tbackground-image: url('<%= config.root + page[\"header-img\"] %>')\n\t\t/*page*/\n\t<%} %>\n}\n```\n\n\n## category 페이지\n- 문제: category 이슈 페이지에 achive 목록으로 나오는 현상  \n- 해결:  \n- 1. theme/beantech/layout/category.ejs 추가(archive.ejs 복사)  \n- 2. category.ejs 수정(category 단위의 목록 출력 + 선택한 category는 최상위에 출력 코딩)  \n- 참고: https://github.com/wzpan/hexo-theme-freemind/blob/master/layout/categories.ejs  \n- 설명: page의 카테고리 id와 site 전체의 카테고리 정보를 비교해서 처리  \n> p_category.data[0]._id == item._id  \n\n```\n<% if (site.categories.length) { %>\n\t<div class=\"archive\">\n\t\t<% var p_category = null;\n\t\tpage.posts.each(post=>{ \n\t\t\tp_category = post.categories;\n\t\t}) %>\n\t\t\n\t\t<% site.categories.sort('name').each(function(item){ %>\n\t\t<% if(p_category.data[0]._id == item._id){ %>\n\t\t\t<h4 class=\"archive-ul show\" data-toggle=\"collapse\" id=\"<%= item.name %>\" data-target=\"#modal-<%= item.name %>\"> <%= item.name %> <b class=\"caret\"></b></h4>\n\t\t<% } %>\n\t\t<ul id=\"modal-<%= item.name %>\" class=\"collapse in\">\n\t\t\t<% site.posts.sort('date', -1).forEach(function(it){ %>\n\t\t\t\t<% if (it.categories.length == 1 && it.categories.data[0]._id == item._id && p_category.data[0]._id == item._id){ %>\n\t\t\t\t<li class=\"listing-item\">\n\t\t\t\t\t<%= it.date.format('MM-DD') %>\n\t\t\t\t\t<i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n\t\t\t\t\t<a href=\"<%= config.root %><%= it.path %>\" <% if (it.description) { %> title=\"<%= it.description %>\" <% } %>><%= it.title %></a>\n\t\t\t\t</li>\n\t\t\t\t<% } %>\n\t\t\t<% }); %>\n\t   </ul>\n\t   <% }); %>\n\t   <hr align=\"left\" style=\"border: solid 1px gray; width: 55%;\">\n\t\t\n\t\t<% site.categories.sort('name').each(function(item){ %>\n\t\t<% if(p_category.data[0]._id != item._id){ %>\n\t\t\t<h4 class=\"archive-ul show\" data-toggle=\"collapse\" id=\"<%= item.name %>\" data-target=\"#modal-<%= item.name %>\"> <%= item.name %> <b class=\"caret\"></b></h4>\n\t\t<% } %>\n\t\t<ul id=\"modal-<%= item.name %>\" class=\"collapse in\">\n\t\t\t<% site.posts.sort('date', -1).forEach(function(it){ %>\n\t\t\t\t<% if (it.categories.length == 1 && it.categories.data[0]._id == item._id && p_category.data[0]._id != item._id){ %>\n\t\t\t\t<li class=\"listing-item\">\n\t\t\t\t\t<%= it.date.format('MM-DD') %>\n\t\t\t\t\t<i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n\t\t\t\t\t<a href=\"<%= config.root %><%= it.path %>\" <% if (it.description) { %> title=\"<%= it.description %>\" <% } %>><%= it.title %></a>\n\t\t\t\t</li>\n\t\t\t\t<% } %>\n\t\t\t<% }); %>\n\t   </ul>\n\t   <% }); %>\n\t   </ul>\n\t</div>\n<% } %>\n```\n\n","source":"_posts/bug-patch-tuning.md","raw":"---\ntitle: hexo bug patch and tuning\nsubtitle: 헥소 버그수정 및 기능개선\ndate: 2021-02-25 07:05:40\nheader-img: \"tag-bg.png\"\ntags: [\"hexo\", \"hexo bug patch\", \"category.ejs\"]\ncategories:\n- Blog\ncatalog: true\n---\n\n# 개요\n- Hexo가 blog 설치/구동에 편하긴한데, 테마를 품질에 따라 튜닝요소가 많이 필요한듯 하다. beantech 테마를 사용중인데, 여기저기 문제가 많아서 소소히 고쳐가며 쓰고 있다.  \n\n--- \n\n# 발견된 문제점들(미해결 사항)\n1. google analytics 연동오류 : google의 애널리스틱 -> 데이터 스트림방식으로 설정이 바뀐것에 대한 수정작업 필요한듯   \n2. 방문자 count 문제 : tistory처럼 쉽게 설정할수 없음. 방문자 count 서비스를 찾아서 붙여야하는데, 잘 정리된 레퍼런스를 찾을수 없음  \n> 일단은, github hits로 사용중이지만, Total/today/yesterday 형태가 바꿔야함  \n3. SNS settings에 medium 연결기능은 없음 : 이것도 기존꺼 참고해서 코딩가능한 부분인가?  \n\n---\n\n# Blog 설정들\n\n1. 댓글기능 추가: Disqus(https://disqus.com/) 가입 및 Hexo 설정(_config.yml)\n```\n# Disqus settings\ndisqus_username: yelran-s-tech-blog #jukyellow.github.io\n```\n2. 방문자 count 추가: github hits로 갈음  \n3. 구글 검색엔진 노출 설정: sitemap.xml 추가, robots.txt 추가 등  \n(참고 : https://ivelee.github.io/github/how-to-expose-github-blog-google-search/)  \n\n---\n\n# 해결된 이슈\n\n\n## deploy 0 byte  \n- 문제: hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생    \n- 해결: hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  \n\n\n## side-bar widgets\n- 문제: side-bar widgets 목록 설정불가  \n- 해결:\n- 1. forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  \n- 2. theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  \n\n\n## achive 배경화면  \n- 문제: achive, category 페이지 배경화면 누락  \n- 해결: theme/beantech/layout/_partial/header.ejs 파일 수정 (is_category, is_archive 추가)  \n\n```\nheader.intro-header{\n\t<% if (is_home() || is_category() || is_archive() ) { %>\n\t\tbackground-image: url('<%= config.root + config[\"header-img\"] %>') \n\t\t/*config*/\n\t<%} else if (is_post()){%>\n\t\tbackground-image: url('<%= page[\"header-img\"] %>')\n\t\t/*post*/\n\t<%} else {%>\n\t\tbackground-image: url('<%= config.root + page[\"header-img\"] %>')\n\t\t/*page*/\n\t<%} %>\n}\n```\n\n\n## category 페이지\n- 문제: category 이슈 페이지에 achive 목록으로 나오는 현상  \n- 해결:  \n- 1. theme/beantech/layout/category.ejs 추가(archive.ejs 복사)  \n- 2. category.ejs 수정(category 단위의 목록 출력 + 선택한 category는 최상위에 출력 코딩)  \n- 참고: https://github.com/wzpan/hexo-theme-freemind/blob/master/layout/categories.ejs  \n- 설명: page의 카테고리 id와 site 전체의 카테고리 정보를 비교해서 처리  \n> p_category.data[0]._id == item._id  \n\n```\n<% if (site.categories.length) { %>\n\t<div class=\"archive\">\n\t\t<% var p_category = null;\n\t\tpage.posts.each(post=>{ \n\t\t\tp_category = post.categories;\n\t\t}) %>\n\t\t\n\t\t<% site.categories.sort('name').each(function(item){ %>\n\t\t<% if(p_category.data[0]._id == item._id){ %>\n\t\t\t<h4 class=\"archive-ul show\" data-toggle=\"collapse\" id=\"<%= item.name %>\" data-target=\"#modal-<%= item.name %>\"> <%= item.name %> <b class=\"caret\"></b></h4>\n\t\t<% } %>\n\t\t<ul id=\"modal-<%= item.name %>\" class=\"collapse in\">\n\t\t\t<% site.posts.sort('date', -1).forEach(function(it){ %>\n\t\t\t\t<% if (it.categories.length == 1 && it.categories.data[0]._id == item._id && p_category.data[0]._id == item._id){ %>\n\t\t\t\t<li class=\"listing-item\">\n\t\t\t\t\t<%= it.date.format('MM-DD') %>\n\t\t\t\t\t<i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n\t\t\t\t\t<a href=\"<%= config.root %><%= it.path %>\" <% if (it.description) { %> title=\"<%= it.description %>\" <% } %>><%= it.title %></a>\n\t\t\t\t</li>\n\t\t\t\t<% } %>\n\t\t\t<% }); %>\n\t   </ul>\n\t   <% }); %>\n\t   <hr align=\"left\" style=\"border: solid 1px gray; width: 55%;\">\n\t\t\n\t\t<% site.categories.sort('name').each(function(item){ %>\n\t\t<% if(p_category.data[0]._id != item._id){ %>\n\t\t\t<h4 class=\"archive-ul show\" data-toggle=\"collapse\" id=\"<%= item.name %>\" data-target=\"#modal-<%= item.name %>\"> <%= item.name %> <b class=\"caret\"></b></h4>\n\t\t<% } %>\n\t\t<ul id=\"modal-<%= item.name %>\" class=\"collapse in\">\n\t\t\t<% site.posts.sort('date', -1).forEach(function(it){ %>\n\t\t\t\t<% if (it.categories.length == 1 && it.categories.data[0]._id == item._id && p_category.data[0]._id != item._id){ %>\n\t\t\t\t<li class=\"listing-item\">\n\t\t\t\t\t<%= it.date.format('MM-DD') %>\n\t\t\t\t\t<i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i>\n\t\t\t\t\t<a href=\"<%= config.root %><%= it.path %>\" <% if (it.description) { %> title=\"<%= it.description %>\" <% } %>><%= it.title %></a>\n\t\t\t\t</li>\n\t\t\t\t<% } %>\n\t\t\t<% }); %>\n\t   </ul>\n\t   <% }); %>\n\t   </ul>\n\t</div>\n<% } %>\n```\n\n","slug":"bug-patch-tuning","published":1,"updated":"2021-02-24T23:07:03.206Z","_id":"ckljzogav000098spcc1964lw","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h1><ul>\n<li>Hexo가 blog 설치/구동에 편하긴한데, 테마를 품질에 따라 튜닝요소가 많이 필요한듯 하다. beantech 테마를 사용중인데, 여기저기 문제가 많아서 소소히 고쳐가며 쓰고 있다.  </li>\n</ul>\n<hr>\n<h1 id=\"발견된-문제점들-미해결-사항\"><a href=\"#발견된-문제점들-미해결-사항\" class=\"headerlink\" title=\"발견된 문제점들(미해결 사항)\"></a>발견된 문제점들(미해결 사항)</h1><ol>\n<li>google analytics 연동오류 : google의 애널리스틱 -&gt; 데이터 스트림방식으로 설정이 바뀐것에 대한 수정작업 필요한듯   </li>\n<li>방문자 count 문제 : tistory처럼 쉽게 설정할수 없음. 방문자 count 서비스를 찾아서 붙여야하는데, 잘 정리된 레퍼런스를 찾을수 없음  <blockquote>\n<p>일단은, github hits로 사용중이지만, Total/today/yesterday 형태가 바꿔야함  </p>\n</blockquote>\n</li>\n<li>SNS settings에 medium 연결기능은 없음 : 이것도 기존꺼 참고해서 코딩가능한 부분인가?  </li>\n</ol>\n<hr>\n<h1 id=\"Blog-설정들\"><a href=\"#Blog-설정들\" class=\"headerlink\" title=\"Blog 설정들\"></a>Blog 설정들</h1><ol>\n<li>댓글기능 추가: Disqus(<a href=\"https://disqus.com/\">https://disqus.com/</a>) 가입 및 Hexo 설정(_config.yml)<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Disqus settings</span></span><br><span class=\"line\"><span class=\"keyword\">disqus_username: </span>yelran-s-tech-<span class=\"keyword\">blog </span><span class=\"comment\">#jukyellow.github.io</span></span><br></pre></td></tr></table></figure></li>\n<li>방문자 count 추가: github hits로 갈음  </li>\n<li>구글 검색엔진 노출 설정: sitemap.xml 추가, robots.txt 추가 등<br>(참고 : <a href=\"https://ivelee.github.io/github/how-to-expose-github-blog-google-search/\">https://ivelee.github.io/github/how-to-expose-github-blog-google-search/</a>)  </li>\n</ol>\n<hr>\n<h1 id=\"해결된-이슈\"><a href=\"#해결된-이슈\" class=\"headerlink\" title=\"해결된 이슈\"></a>해결된 이슈</h1><h2 id=\"deploy-0-byte\"><a href=\"#deploy-0-byte\" class=\"headerlink\" title=\"deploy 0 byte\"></a>deploy 0 byte</h2><ul>\n<li>문제: hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생    </li>\n<li>해결: hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  </li>\n</ul>\n<h2 id=\"side-bar-widgets\"><a href=\"#side-bar-widgets\" class=\"headerlink\" title=\"side-bar widgets\"></a>side-bar widgets</h2><ul>\n<li>문제: side-bar widgets 목록 설정불가  </li>\n<li>해결:</li>\n<li><ol>\n<li>forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  </li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  </li>\n</ol>\n</li>\n</ul>\n<h2 id=\"achive-배경화면\"><a href=\"#achive-배경화면\" class=\"headerlink\" title=\"achive 배경화면\"></a>achive 배경화면</h2><ul>\n<li>문제: achive, category 페이지 배경화면 누락  </li>\n<li>해결: theme/beantech/layout/_partial/header.ejs 파일 수정 (is_category, is_archive 추가)  </li>\n</ul>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">header.intro-header&#123;</span><br><span class=\"line\">\t&lt;% <span class=\"keyword\">if</span> (is_home() || is_category() || is_archive() ) &#123; %&gt;</span><br><span class=\"line\">\t\tbackground-<span class=\"keyword\">image</span>: url(<span class=\"string\">&#x27;&lt;%= config.root + config[&quot;header-img&quot;] %&gt;&#x27;</span>) </span><br><span class=\"line\">\t\t<span class=\"comment\">/*config*/</span></span><br><span class=\"line\">\t&lt;%&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (is_post())&#123;%&gt;</span><br><span class=\"line\">\t\tbackground-<span class=\"keyword\">image</span>: url(<span class=\"string\">&#x27;&lt;%= page[&quot;header-img&quot;] %&gt;&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">/*post*/</span></span><br><span class=\"line\">\t&lt;%&#125; <span class=\"keyword\">else</span> &#123;%&gt;</span><br><span class=\"line\">\t\tbackground-<span class=\"keyword\">image</span>: url(<span class=\"string\">&#x27;&lt;%= config.root + page[&quot;header-img&quot;] %&gt;&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">/*page*/</span></span><br><span class=\"line\">\t&lt;%&#125; %&gt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"category-페이지\"><a href=\"#category-페이지\" class=\"headerlink\" title=\"category 페이지\"></a>category 페이지</h2><ul>\n<li>문제: category 이슈 페이지에 achive 목록으로 나오는 현상  </li>\n<li>해결:  </li>\n<li><ol>\n<li>theme/beantech/layout/category.ejs 추가(archive.ejs 복사)  </li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>category.ejs 수정(category 단위의 목록 출력 + 선택한 category는 최상위에 출력 코딩)  </li>\n</ol>\n</li>\n<li>참고: <a href=\"https://github.com/wzpan/hexo-theme-freemind/blob/master/layout/categories.ejs\">https://github.com/wzpan/hexo-theme-freemind/blob/master/layout/categories.ejs</a>  </li>\n<li>설명: page의 카테고리 id와 site 전체의 카테고리 정보를 비교해서 처리  <blockquote>\n<p>p_category.data[0]._id == item._id  </p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight bnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">&lt;% if (site.categories.length) &#123; %&gt;</span></span><br><span class=\"line\">\t<span class=\"attribute\">&lt;div class=&quot;archive&quot;&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% var p_category = null;</span></span><br><span class=\"line\"><span class=\"attribute\">\t\tpage.posts.each(post=&gt;</span>&#123; </span><br><span class=\"line\">\t\t\tp_category = post.categories;</span><br><span class=\"line\">\t\t&#125;) %&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% site.categories.sort(&#x27;name&#x27;).each(function(item)&#123; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% if(p_category.data[0]._id == item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;h4 class=&quot;archive-ul show&quot; data-toggle=&quot;collapse&quot; id=&quot;&lt;%= item.name %&gt;</span>&quot; data-target=&quot;#modal-<span class=\"attribute\">&lt;%= item.name %&gt;</span>&quot;&gt; <span class=\"attribute\">&lt;%= item.name %&gt;</span> <span class=\"attribute\">&lt;b class=&quot;caret&quot;&gt;</span><span class=\"attribute\">&lt;/b&gt;</span><span class=\"attribute\">&lt;/h4&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;ul id=&quot;modal-&lt;%= item.name %&gt;</span>&quot; class=&quot;collapse in&quot;&gt;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% site.posts.sort(&#x27;date&#x27;, -1).forEach(function(it)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% if (it.categories.length == 1 &amp;&amp; it.categories.data[0]._id == item._id &amp;&amp; p_category.data[0]._id == item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;li class=&quot;listing-item&quot;&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;%= it.date.format(&#x27;MM-DD&#x27;) %&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;i class=&quot;fa fa-angle-double-right&quot; aria-hidden=&quot;true&quot;&gt;</span><span class=\"attribute\">&lt;/i&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;a href=&quot;&lt;%= config.root %&gt;</span><span class=\"attribute\">&lt;%= it.path %&gt;</span>&quot; <span class=\"attribute\">&lt;% if (it.description) &#123; %&gt;</span> title=&quot;<span class=\"attribute\">&lt;%= it.description %&gt;</span>&quot; <span class=\"attribute\">&lt;% &#125; %&gt;</span>&gt;<span class=\"attribute\">&lt;%= it.title %&gt;</span><span class=\"attribute\">&lt;/a&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;/li&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;/ul&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;hr align=&quot;left&quot; style=&quot;border: solid 1px gray; width: 55%;&quot;&gt;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% site.categories.sort(&#x27;name&#x27;).each(function(item)&#123; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% if(p_category.data[0]._id != item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;h4 class=&quot;archive-ul show&quot; data-toggle=&quot;collapse&quot; id=&quot;&lt;%= item.name %&gt;</span>&quot; data-target=&quot;#modal-<span class=\"attribute\">&lt;%= item.name %&gt;</span>&quot;&gt; <span class=\"attribute\">&lt;%= item.name %&gt;</span> <span class=\"attribute\">&lt;b class=&quot;caret&quot;&gt;</span><span class=\"attribute\">&lt;/b&gt;</span><span class=\"attribute\">&lt;/h4&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;ul id=&quot;modal-&lt;%= item.name %&gt;</span>&quot; class=&quot;collapse in&quot;&gt;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% site.posts.sort(&#x27;date&#x27;, -1).forEach(function(it)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% if (it.categories.length == 1 &amp;&amp; it.categories.data[0]._id == item._id &amp;&amp; p_category.data[0]._id != item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;li class=&quot;listing-item&quot;&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;%= it.date.format(&#x27;MM-DD&#x27;) %&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;i class=&quot;fa fa-angle-double-right&quot; aria-hidden=&quot;true&quot;&gt;</span><span class=\"attribute\">&lt;/i&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;a href=&quot;&lt;%= config.root %&gt;</span><span class=\"attribute\">&lt;%= it.path %&gt;</span>&quot; <span class=\"attribute\">&lt;% if (it.description) &#123; %&gt;</span> title=&quot;<span class=\"attribute\">&lt;%= it.description %&gt;</span>&quot; <span class=\"attribute\">&lt;% &#125; %&gt;</span>&gt;<span class=\"attribute\">&lt;%= it.title %&gt;</span><span class=\"attribute\">&lt;/a&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;/li&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;/ul&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;/ul&gt;</span></span><br><span class=\"line\">\t<span class=\"attribute\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"개요\"><a href=\"#개요\" class=\"headerlink\" title=\"개요\"></a>개요</h1><ul>\n<li>Hexo가 blog 설치/구동에 편하긴한데, 테마를 품질에 따라 튜닝요소가 많이 필요한듯 하다. beantech 테마를 사용중인데, 여기저기 문제가 많아서 소소히 고쳐가며 쓰고 있다.  </li>\n</ul>\n<hr>\n<h1 id=\"발견된-문제점들-미해결-사항\"><a href=\"#발견된-문제점들-미해결-사항\" class=\"headerlink\" title=\"발견된 문제점들(미해결 사항)\"></a>발견된 문제점들(미해결 사항)</h1><ol>\n<li>google analytics 연동오류 : google의 애널리스틱 -&gt; 데이터 스트림방식으로 설정이 바뀐것에 대한 수정작업 필요한듯   </li>\n<li>방문자 count 문제 : tistory처럼 쉽게 설정할수 없음. 방문자 count 서비스를 찾아서 붙여야하는데, 잘 정리된 레퍼런스를 찾을수 없음  <blockquote>\n<p>일단은, github hits로 사용중이지만, Total/today/yesterday 형태가 바꿔야함  </p>\n</blockquote>\n</li>\n<li>SNS settings에 medium 연결기능은 없음 : 이것도 기존꺼 참고해서 코딩가능한 부분인가?  </li>\n</ol>\n<hr>\n<h1 id=\"Blog-설정들\"><a href=\"#Blog-설정들\" class=\"headerlink\" title=\"Blog 설정들\"></a>Blog 설정들</h1><ol>\n<li>댓글기능 추가: Disqus(<a href=\"https://disqus.com/\">https://disqus.com/</a>) 가입 및 Hexo 설정(_config.yml)<figure class=\"highlight mipsasm\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># Disqus settings</span></span><br><span class=\"line\"><span class=\"keyword\">disqus_username: </span>yelran-s-tech-<span class=\"keyword\">blog </span><span class=\"comment\">#jukyellow.github.io</span></span><br></pre></td></tr></table></figure></li>\n<li>방문자 count 추가: github hits로 갈음  </li>\n<li>구글 검색엔진 노출 설정: sitemap.xml 추가, robots.txt 추가 등<br>(참고 : <a href=\"https://ivelee.github.io/github/how-to-expose-github-blog-google-search/\">https://ivelee.github.io/github/how-to-expose-github-blog-google-search/</a>)  </li>\n</ol>\n<hr>\n<h1 id=\"해결된-이슈\"><a href=\"#해결된-이슈\" class=\"headerlink\" title=\"해결된 이슈\"></a>해결된 이슈</h1><h2 id=\"deploy-0-byte\"><a href=\"#deploy-0-byte\" class=\"headerlink\" title=\"deploy 0 byte\"></a>deploy 0 byte</h2><ul>\n<li>문제: hexo beantech 테마 적용후, deploy 단계에서 파일 0 bytes 오류 발생    </li>\n<li>해결: hexo 3.9버전이 버전이여서 문제인가 싶어, hexo init으로 새 폴더 생성(hexo 5.3.0버전)+ theme 복제  </li>\n</ul>\n<h2 id=\"side-bar-widgets\"><a href=\"#side-bar-widgets\" class=\"headerlink\" title=\"side-bar widgets\"></a>side-bar widgets</h2><ul>\n<li>문제: side-bar widgets 목록 설정불가  </li>\n<li>해결:</li>\n<li><ol>\n<li>forEach문 오류발생(sidebar widgets 목록을 찾을수 없음)  </li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>theme/beantech/_config.yml에 widgets목록을 직접 기입해서 해결됨, deploy도 성공  </li>\n</ol>\n</li>\n</ul>\n<h2 id=\"achive-배경화면\"><a href=\"#achive-배경화면\" class=\"headerlink\" title=\"achive 배경화면\"></a>achive 배경화면</h2><ul>\n<li>문제: achive, category 페이지 배경화면 누락  </li>\n<li>해결: theme/beantech/layout/_partial/header.ejs 파일 수정 (is_category, is_archive 추가)  </li>\n</ul>\n<figure class=\"highlight mel\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">header.intro-header&#123;</span><br><span class=\"line\">\t&lt;% <span class=\"keyword\">if</span> (is_home() || is_category() || is_archive() ) &#123; %&gt;</span><br><span class=\"line\">\t\tbackground-<span class=\"keyword\">image</span>: url(<span class=\"string\">&#x27;&lt;%= config.root + config[&quot;header-img&quot;] %&gt;&#x27;</span>) </span><br><span class=\"line\">\t\t<span class=\"comment\">/*config*/</span></span><br><span class=\"line\">\t&lt;%&#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (is_post())&#123;%&gt;</span><br><span class=\"line\">\t\tbackground-<span class=\"keyword\">image</span>: url(<span class=\"string\">&#x27;&lt;%= page[&quot;header-img&quot;] %&gt;&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">/*post*/</span></span><br><span class=\"line\">\t&lt;%&#125; <span class=\"keyword\">else</span> &#123;%&gt;</span><br><span class=\"line\">\t\tbackground-<span class=\"keyword\">image</span>: url(<span class=\"string\">&#x27;&lt;%= config.root + page[&quot;header-img&quot;] %&gt;&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\">/*page*/</span></span><br><span class=\"line\">\t&lt;%&#125; %&gt;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"category-페이지\"><a href=\"#category-페이지\" class=\"headerlink\" title=\"category 페이지\"></a>category 페이지</h2><ul>\n<li>문제: category 이슈 페이지에 achive 목록으로 나오는 현상  </li>\n<li>해결:  </li>\n<li><ol>\n<li>theme/beantech/layout/category.ejs 추가(archive.ejs 복사)  </li>\n</ol>\n</li>\n<li><ol start=\"2\">\n<li>category.ejs 수정(category 단위의 목록 출력 + 선택한 category는 최상위에 출력 코딩)  </li>\n</ol>\n</li>\n<li>참고: <a href=\"https://github.com/wzpan/hexo-theme-freemind/blob/master/layout/categories.ejs\">https://github.com/wzpan/hexo-theme-freemind/blob/master/layout/categories.ejs</a>  </li>\n<li>설명: page의 카테고리 id와 site 전체의 카테고리 정보를 비교해서 처리  <blockquote>\n<p>p_category.data[0]._id == item._id  </p>\n</blockquote>\n</li>\n</ul>\n<figure class=\"highlight bnf\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attribute\">&lt;% if (site.categories.length) &#123; %&gt;</span></span><br><span class=\"line\">\t<span class=\"attribute\">&lt;div class=&quot;archive&quot;&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% var p_category = null;</span></span><br><span class=\"line\"><span class=\"attribute\">\t\tpage.posts.each(post=&gt;</span>&#123; </span><br><span class=\"line\">\t\t\tp_category = post.categories;</span><br><span class=\"line\">\t\t&#125;) %&gt;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% site.categories.sort(&#x27;name&#x27;).each(function(item)&#123; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% if(p_category.data[0]._id == item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;h4 class=&quot;archive-ul show&quot; data-toggle=&quot;collapse&quot; id=&quot;&lt;%= item.name %&gt;</span>&quot; data-target=&quot;#modal-<span class=\"attribute\">&lt;%= item.name %&gt;</span>&quot;&gt; <span class=\"attribute\">&lt;%= item.name %&gt;</span> <span class=\"attribute\">&lt;b class=&quot;caret&quot;&gt;</span><span class=\"attribute\">&lt;/b&gt;</span><span class=\"attribute\">&lt;/h4&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;ul id=&quot;modal-&lt;%= item.name %&gt;</span>&quot; class=&quot;collapse in&quot;&gt;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% site.posts.sort(&#x27;date&#x27;, -1).forEach(function(it)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% if (it.categories.length == 1 &amp;&amp; it.categories.data[0]._id == item._id &amp;&amp; p_category.data[0]._id == item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;li class=&quot;listing-item&quot;&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;%= it.date.format(&#x27;MM-DD&#x27;) %&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;i class=&quot;fa fa-angle-double-right&quot; aria-hidden=&quot;true&quot;&gt;</span><span class=\"attribute\">&lt;/i&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;a href=&quot;&lt;%= config.root %&gt;</span><span class=\"attribute\">&lt;%= it.path %&gt;</span>&quot; <span class=\"attribute\">&lt;% if (it.description) &#123; %&gt;</span> title=&quot;<span class=\"attribute\">&lt;%= it.description %&gt;</span>&quot; <span class=\"attribute\">&lt;% &#125; %&gt;</span>&gt;<span class=\"attribute\">&lt;%= it.title %&gt;</span><span class=\"attribute\">&lt;/a&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;/li&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;/ul&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;hr align=&quot;left&quot; style=&quot;border: solid 1px gray; width: 55%;&quot;&gt;</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% site.categories.sort(&#x27;name&#x27;).each(function(item)&#123; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% if(p_category.data[0]._id != item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;h4 class=&quot;archive-ul show&quot; data-toggle=&quot;collapse&quot; id=&quot;&lt;%= item.name %&gt;</span>&quot; data-target=&quot;#modal-<span class=\"attribute\">&lt;%= item.name %&gt;</span>&quot;&gt; <span class=\"attribute\">&lt;%= item.name %&gt;</span> <span class=\"attribute\">&lt;b class=&quot;caret&quot;&gt;</span><span class=\"attribute\">&lt;/b&gt;</span><span class=\"attribute\">&lt;/h4&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t<span class=\"attribute\">&lt;ul id=&quot;modal-&lt;%= item.name %&gt;</span>&quot; class=&quot;collapse in&quot;&gt;</span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% site.posts.sort(&#x27;date&#x27;, -1).forEach(function(it)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% if (it.categories.length == 1 &amp;&amp; it.categories.data[0]._id == item._id &amp;&amp; p_category.data[0]._id != item._id)&#123; %&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;li class=&quot;listing-item&quot;&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;%= it.date.format(&#x27;MM-DD&#x27;) %&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;i class=&quot;fa fa-angle-double-right&quot; aria-hidden=&quot;true&quot;&gt;</span><span class=\"attribute\">&lt;/i&gt;</span></span><br><span class=\"line\">\t\t\t\t\t<span class=\"attribute\">&lt;a href=&quot;&lt;%= config.root %&gt;</span><span class=\"attribute\">&lt;%= it.path %&gt;</span>&quot; <span class=\"attribute\">&lt;% if (it.description) &#123; %&gt;</span> title=&quot;<span class=\"attribute\">&lt;%= it.description %&gt;</span>&quot; <span class=\"attribute\">&lt;% &#125; %&gt;</span>&gt;<span class=\"attribute\">&lt;%= it.title %&gt;</span><span class=\"attribute\">&lt;/a&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;/li&gt;</span></span><br><span class=\"line\">\t\t\t\t<span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br><span class=\"line\">\t\t\t<span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;/ul&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;% &#125;); %&gt;</span></span><br><span class=\"line\">\t   <span class=\"attribute\">&lt;/ul&gt;</span></span><br><span class=\"line\">\t<span class=\"attribute\">&lt;/div&gt;</span></span><br><span class=\"line\"><span class=\"attribute\">&lt;% &#125; %&gt;</span></span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[{"_id":"source/_posts/hexo-install-guide-1/lukas-blazek-GnvurwJsKaY-unsplash.jpg","slug":"lukas-blazek-GnvurwJsKaY-unsplash.jpg","post":"ckkpw59vs0005b0sp68vzb9e3","modified":0,"renderable":0},{"_id":"source/_posts/marp-guide/desktop-2325627_1920.jpg","slug":"desktop-2325627_1920.jpg","post":"ckkpweqhs0000okspf0frfdk1","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/01_출석체크.jpg","slug":"images\\01_출석체크.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/02_google_teachableMachine.jpg","slug":"images\\02_google_teachableMachine.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/03_face-api.jpg","slug":"images\\03_face-api.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/04_Facenet.jpg","slug":"images\\04_Facenet.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/05_Pipeline.jpg","slug":"images\\05_Pipeline.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/06_agumentation.jpg","slug":"images\\06_agumentation.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/07_Teach_pose.jpg","slug":"images\\07_Teach_pose.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/08_docker.jpg","slug":"images\\08_docker.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/10_Train_process.jpg","slug":"images\\10_Train_process.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/images/9_docker_layer.jpg","slug":"images\\9_docker_layer.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/hello-world/desktop-2325627_1920.jpg","slug":"desktop-2325627_1920.jpg","post":"ckkpw59vo0003b0sp8fv2fkb1","modified":0,"renderable":0},{"_id":"source/_posts/Face-Check-In/possessed-photography-jIBMSMs4_kA-unsplash.jpg","slug":"possessed-photography-jIBMSMs4_kA-unsplash.jpg","post":"cklbrbvx80000nssp8p4gdi14","modified":0,"renderable":0},{"_id":"source/_posts/OCR-Tesseract-Demo/possessed-photography-jIBMSMs4_kA-unsplash.jpg","slug":"possessed-photography-jIBMSMs4_kA-unsplash.jpg","post":"cklcu62l40000x4sp8ded5jxt","modified":0,"renderable":0},{"_id":"source/_posts/OCR-Tesseract-Demo/images/01_초기화면.png","slug":"images\\01_초기화면.png","post":"cklcu62l40000x4sp8ded5jxt","modified":0,"renderable":0},{"_id":"source/_posts/OCR-Tesseract-Demo/images/02_Text추출.png","slug":"images\\02_Text추출.png","post":"cklcu62l40000x4sp8ded5jxt","modified":0,"renderable":0},{"_id":"source/_posts/docker-install-root-dir-modify/sai-kiran-anagani-Tjbk79TARiE-unsplash.jpg","slug":"sai-kiran-anagani-Tjbk79TARiE-unsplash.jpg","post":"cklh2210e0000ccspana11gyd","modified":0,"renderable":0},{"_id":"source/_posts/docker-install-root-dir-modify/tech-5090539_1920.jpg","slug":"tech-5090539_1920.jpg","post":"cklh2210e0000ccspana11gyd","modified":0,"renderable":0},{"_id":"source/_posts/bug-patch-tuning/tag-bg.png","slug":"tag-bg.png","post":"ckljzogav000098spcc1964lw","modified":0,"renderable":0},{"_id":"source/_posts/hexo-install-guide-1/tag-bg.png","slug":"tag-bg.png","post":"ckkpw59vs0005b0sp68vzb9e3","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cklbrbvx80000nssp8p4gdi14","category_id":"cklbrbvxe0001nsspak0u4br6","_id":"ckljz3nfu0001i0spb5ko1nq6"},{"post_id":"cklcu62l40000x4sp8ded5jxt","category_id":"ckljz3nfm0000i0sp3ujvawm0","_id":"ckljz3nfw0004i0sphhnc3g4e"},{"post_id":"cklh2210e0000ccspana11gyd","category_id":"ckljz3nfu0002i0sp8e4id044","_id":"ckljz3nfx0006i0spatlf2z5g"},{"post_id":"ckkpw59vs0005b0sp68vzb9e3","category_id":"ckljz3nfw0003i0sp8vro2jb5","_id":"ckljz3nfy0007i0sp5fbmc4mx"},{"post_id":"ckkpweqhs0000okspf0frfdk1","category_id":"ckljz3nfw0005i0sphn2238r4","_id":"ckljz3nfy0008i0sphguo6ytu"},{"post_id":"ckljzogav000098spcc1964lw","category_id":"ckljz3nfw0003i0sp8vro2jb5","_id":"ckljzogb7000298sp2xnfhwev"}],"PostTag":[{"post_id":"ckkpw59vs0005b0sp68vzb9e3","tag_id":"ckkpw59vw0007b0sp997dg1h9","_id":"ckkpw59vy000bb0spcvhh19tc"},{"post_id":"ckkpw59vs0005b0sp68vzb9e3","tag_id":"ckkpw59vx0008b0sphxdg96ek","_id":"ckkpw59vy000cb0sp8itkcwko"},{"post_id":"ckkpw59vs0005b0sp68vzb9e3","tag_id":"ckkpw59vx000ab0sp05dsa9zz","_id":"ckkpw59vy000db0sp7i1qhy9c"},{"post_id":"ckkpweqhs0000okspf0frfdk1","tag_id":"ckkpweqhx0002okspe74wenjw","_id":"ckkpweqhz0006oksp6c6125k8"},{"post_id":"ckkpweqhs0000okspf0frfdk1","tag_id":"ckkpweqhy0003okspfhgt3634","_id":"ckkpweqhz0007oksp2u6d4joh"},{"post_id":"ckkpweqhs0000okspf0frfdk1","tag_id":"ckkpweqhz0005oksp38l6a6tj","_id":"ckkpweqhz0008oksp62ws7cua"},{"post_id":"cklbrbvx80000nssp8p4gdi14","tag_id":"cklbrbvxg0002nssp2vy83qms","_id":"cklbrbvxi0007nsspgxq88jyb"},{"post_id":"cklbrbvx80000nssp8p4gdi14","tag_id":"cklbrbvxh0003nssp54ltb8ud","_id":"cklbrbvxj0009nssp29fhh1gk"},{"post_id":"cklbrbvx80000nssp8p4gdi14","tag_id":"cklbrbvxi0005nssphhg21ty8","_id":"cklbrbvxj000anssp5s5lex3s"},{"post_id":"cklbrbvx80000nssp8p4gdi14","tag_id":"cklcurb8c0006x4spdick4l74","_id":"cklcurb8d0007x4spgaf71jvk"},{"post_id":"cklcu62l40000x4sp8ded5jxt","tag_id":"cklcuslfx0009x4sph1f77os1","_id":"cklcuslg1000ex4sp46gd7yaa"},{"post_id":"cklcu62l40000x4sp8ded5jxt","tag_id":"cklcuslfy000ax4spe0pa7b3v","_id":"cklcuslg2000fx4spgxej07rv"},{"post_id":"cklcu62l40000x4sp8ded5jxt","tag_id":"cklcuslfz000cx4spcrai7ac1","_id":"cklcuslg2000gx4spamcp5tmh"},{"post_id":"cklcu62l40000x4sp8ded5jxt","tag_id":"cklcuslg0000dx4sp5qbf52ry","_id":"cklcuslg2000hx4sph9hraviw"},{"post_id":"cklh2210e0000ccspana11gyd","tag_id":"cklcurb8c0006x4spdick4l74","_id":"cklh2210u0006ccsp0rw3btl4"},{"post_id":"cklh2210e0000ccspana11gyd","tag_id":"cklh2210s0002ccspbe33etla","_id":"cklh2210u0007ccspalb1cd15"},{"post_id":"cklh2210e0000ccspana11gyd","tag_id":"cklh2210t0003ccspfal12sck","_id":"cklh2210u0008ccsp0avsbukn"},{"post_id":"cklh2210e0000ccspana11gyd","tag_id":"cklh2210u0005ccspaq9q7sfo","_id":"cklh2210u0009ccsp7cfsdwdp"},{"post_id":"ckljzogav000098spcc1964lw","tag_id":"ckkpw59vw0007b0sp997dg1h9","_id":"ckljzogb8000498sp1k8v5v3q"},{"post_id":"ckljzogav000098spcc1964lw","tag_id":"ckljzogb2000198sp8jgcdd3p","_id":"ckljzogb8000598sp497d2wn7"},{"post_id":"ckljzogav000098spcc1964lw","tag_id":"ckljzogb7000398sp65nl9wj2","_id":"ckljzogb8000698sp9myy4ya2"}],"Tag":[{"name":"hexo","_id":"ckkpw59vw0007b0sp997dg1h9"},{"name":"hexo blog","_id":"ckkpw59vx0008b0sphxdg96ek"},{"name":"hexo install","_id":"ckkpw59vx000ab0sp05dsa9zz"},{"name":"marp","_id":"ckkpweqhx0002okspe74wenjw"},{"name":"markdown","_id":"ckkpweqhy0003okspfhgt3634"},{"name":"slide","_id":"ckkpweqhz0005oksp38l6a6tj"},{"name":"facenet","_id":"cklbrbvxg0002nssp2vy83qms"},{"name":"google teachable machine","_id":"cklbrbvxh0003nssp54ltb8ud"},{"name":"face recognition","_id":"cklbrbvxi0005nssphhg21ty8"},{"name":"docker","_id":"cklcurb8c0006x4spdick4l74"},{"name":"OCR","_id":"cklcuslfx0009x4sph1f77os1"},{"name":"Tesseract","_id":"cklcuslfy000ax4spe0pa7b3v"},{"name":"Docker","_id":"cklcuslfz000cx4spcrai7ac1"},{"name":"Text추출","_id":"cklcuslg0000dx4sp5qbf52ry"},{"name":"docker install","_id":"cklh2210s0002ccspbe33etla"},{"name":"Root Dir","_id":"cklh2210t0003ccspfal12sck"},{"name":"Centos","_id":"cklh2210u0005ccspaq9q7sfo"},{"name":"hexo bug patch","_id":"ckljzogb2000198sp8jgcdd3p"},{"name":"category.ejs","_id":"ckljzogb7000398sp65nl9wj2"}]}}